// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module AccumulatorMem(
  input         clock,
                reset,
                io_read_req_valid,
  input  [31:0] io_read_req_bits_scale_bits,
  input  [7:0]  io_read_req_bits_addr,
  input  [31:0] io_read_req_bits_igelu_qb,
                io_read_req_bits_igelu_qc,
                io_read_req_bits_iexp_qln2,
                io_read_req_bits_iexp_qln2_inv,
  input  [2:0]  io_read_req_bits_act,
  input         io_read_resp_ready,
                io_write_valid,
  input  [7:0]  io_write_bits_addr,
  input  [31:0] io_write_bits_data_0_0,
                io_write_bits_data_1_0,
                io_write_bits_data_2_0,
                io_write_bits_data_3_0,
                io_write_bits_data_4_0,
                io_write_bits_data_5_0,
                io_write_bits_data_6_0,
                io_write_bits_data_7_0,
                io_write_bits_data_8_0,
                io_write_bits_data_9_0,
                io_write_bits_data_10_0,
                io_write_bits_data_11_0,
                io_write_bits_data_12_0,
                io_write_bits_data_13_0,
                io_write_bits_data_14_0,
                io_write_bits_data_15_0,
  input         io_write_bits_acc,
                io_write_bits_mask_0,
                io_write_bits_mask_1,
                io_write_bits_mask_2,
                io_write_bits_mask_3,
                io_write_bits_mask_4,
                io_write_bits_mask_5,
                io_write_bits_mask_6,
                io_write_bits_mask_7,
                io_write_bits_mask_8,
                io_write_bits_mask_9,
                io_write_bits_mask_10,
                io_write_bits_mask_11,
                io_write_bits_mask_12,
                io_write_bits_mask_13,
                io_write_bits_mask_14,
                io_write_bits_mask_15,
                io_write_bits_mask_16,
                io_write_bits_mask_17,
                io_write_bits_mask_18,
                io_write_bits_mask_19,
                io_write_bits_mask_20,
                io_write_bits_mask_21,
                io_write_bits_mask_22,
                io_write_bits_mask_23,
                io_write_bits_mask_24,
                io_write_bits_mask_25,
                io_write_bits_mask_26,
                io_write_bits_mask_27,
                io_write_bits_mask_28,
                io_write_bits_mask_29,
                io_write_bits_mask_30,
                io_write_bits_mask_31,
                io_write_bits_mask_32,
                io_write_bits_mask_33,
                io_write_bits_mask_34,
                io_write_bits_mask_35,
                io_write_bits_mask_36,
                io_write_bits_mask_37,
                io_write_bits_mask_38,
                io_write_bits_mask_39,
                io_write_bits_mask_40,
                io_write_bits_mask_41,
                io_write_bits_mask_42,
                io_write_bits_mask_43,
                io_write_bits_mask_44,
                io_write_bits_mask_45,
                io_write_bits_mask_46,
                io_write_bits_mask_47,
                io_write_bits_mask_48,
                io_write_bits_mask_49,
                io_write_bits_mask_50,
                io_write_bits_mask_51,
                io_write_bits_mask_52,
                io_write_bits_mask_53,
                io_write_bits_mask_54,
                io_write_bits_mask_55,
                io_write_bits_mask_56,
                io_write_bits_mask_57,
                io_write_bits_mask_58,
                io_write_bits_mask_59,
                io_write_bits_mask_60,
                io_write_bits_mask_61,
                io_write_bits_mask_62,
                io_write_bits_mask_63,
  input  [31:0] io_adder_sum_0_0,
                io_adder_sum_1_0,
                io_adder_sum_2_0,
                io_adder_sum_3_0,
                io_adder_sum_4_0,
                io_adder_sum_5_0,
                io_adder_sum_6_0,
                io_adder_sum_7_0,
                io_adder_sum_8_0,
                io_adder_sum_9_0,
                io_adder_sum_10_0,
                io_adder_sum_11_0,
                io_adder_sum_12_0,
                io_adder_sum_13_0,
                io_adder_sum_14_0,
                io_adder_sum_15_0,
  output        io_read_req_ready,
                io_read_resp_valid,
  output [31:0] io_read_resp_bits_data_0_0,
                io_read_resp_bits_data_1_0,
                io_read_resp_bits_data_2_0,
                io_read_resp_bits_data_3_0,
                io_read_resp_bits_data_4_0,
                io_read_resp_bits_data_5_0,
                io_read_resp_bits_data_6_0,
                io_read_resp_bits_data_7_0,
                io_read_resp_bits_data_8_0,
                io_read_resp_bits_data_9_0,
                io_read_resp_bits_data_10_0,
                io_read_resp_bits_data_11_0,
                io_read_resp_bits_data_12_0,
                io_read_resp_bits_data_13_0,
                io_read_resp_bits_data_14_0,
                io_read_resp_bits_data_15_0,
  output        io_read_resp_bits_fromDMA,
  output [31:0] io_read_resp_bits_scale_bits,
                io_read_resp_bits_igelu_qb,
                io_read_resp_bits_igelu_qc,
                io_read_resp_bits_iexp_qln2,
                io_read_resp_bits_iexp_qln2_inv,
  output [2:0]  io_read_resp_bits_act,
  output        io_write_ready,
                io_adder_valid,
  output [31:0] io_adder_op1_0_0,
                io_adder_op1_1_0,
                io_adder_op1_2_0,
                io_adder_op1_3_0,
                io_adder_op1_4_0,
                io_adder_op1_5_0,
                io_adder_op1_6_0,
                io_adder_op1_7_0,
                io_adder_op1_8_0,
                io_adder_op1_9_0,
                io_adder_op1_10_0,
                io_adder_op1_11_0,
                io_adder_op1_12_0,
                io_adder_op1_13_0,
                io_adder_op1_14_0,
                io_adder_op1_15_0,
                io_adder_op2_0_0,
                io_adder_op2_1_0,
                io_adder_op2_2_0,
                io_adder_op2_3_0,
                io_adder_op2_4_0,
                io_adder_op2_5_0,
                io_adder_op2_6_0,
                io_adder_op2_7_0,
                io_adder_op2_8_0,
                io_adder_op2_9_0,
                io_adder_op2_10_0,
                io_adder_op2_11_0,
                io_adder_op2_12_0,
                io_adder_op2_13_0,
                io_adder_op2_14_0,
                io_adder_op2_15_0
);

  wire         _io_write_ready_output;	// @[AccumulatorMem.scala:334:38]
  wire         _io_read_req_ready_output;	// @[AccumulatorMem.scala:327:40]
  wire [6:0]   _bank_rdata_T_40;	// @[AccumulatorMem.scala:191:27, :273:55, :278:32, :285:15]
  wire         ren_1;	// @[AccumulatorMem.scala:273:55, :274:13, :278:32]
  wire         only_read_req_ready;	// @[AccumulatorMem.scala:273:55, :275:47, :278:32]
  wire         wen_1;	// @[AccumulatorMem.scala:228:25, :273:55, :278:32]
  wire         mem_1_bank_rdata_MPORT_1_en;	// @[AccumulatorMem.scala:257:40]
  wire [6:0]   waddr_1;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_127;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_126;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_125;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_124;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_123;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_122;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_121;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_120;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_119;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_118;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_117;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_116;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_115;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_114;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_113;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_112;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_111;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_110;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_109;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_108;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_107;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_106;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_105;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_104;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_103;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_102;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_101;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_100;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_99;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_98;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_97;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_96;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_95;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_94;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_93;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_92;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_91;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_90;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_89;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_88;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_87;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_86;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_85;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_84;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_83;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_82;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_81;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_80;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_79;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_78;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_77;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_76;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_75;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_74;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_73;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_72;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_71;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_70;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_69;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_68;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_67;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_66;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_65;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_64;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_127;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_126;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_125;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_124;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_123;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_122;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_121;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_120;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_119;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_118;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_117;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_116;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_115;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_114;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_113;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_112;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_111;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_110;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_109;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_108;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_107;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_106;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_105;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_104;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_103;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_102;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_101;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_100;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_99;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_98;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_97;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_96;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_95;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_94;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_93;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_92;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_91;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_90;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_89;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_88;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_87;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_86;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_85;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_84;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_83;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_82;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_81;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_80;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_79;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_78;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_77;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_76;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_75;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_74;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_73;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_72;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_71;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_70;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_69;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_68;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_67;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_66;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_65;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_64;	// @[Mux.scala:27:73]
  wire         rmw_req_ready;	// @[AccumulatorMem.scala:205:24, :212:115]
  wire [6:0]   _bank_rdata_T_3;	// @[AccumulatorMem.scala:191:27, :273:55, :278:32, :285:15]
  wire         ren;	// @[AccumulatorMem.scala:273:55, :274:13, :278:32]
  wire         wen;	// @[AccumulatorMem.scala:228:25, :273:55, :278:32]
  wire         mem_bank_rdata_MPORT_en;	// @[AccumulatorMem.scala:257:40]
  wire [6:0]   waddr;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_63;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_62;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_61;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_60;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_59;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_58;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_57;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_56;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_55;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_54;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_53;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_52;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_51;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_50;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_49;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_48;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_47;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_46;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_45;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_44;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_43;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_42;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_41;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_40;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_39;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_38;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_37;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_36;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_35;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_34;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_33;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_32;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_31;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_30;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_29;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_28;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_27;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_26;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_25;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_24;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_23;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_22;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_21;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_20;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_19;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_18;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_17;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_16;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_15;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_14;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_13;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_12;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_11;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_10;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_9;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_8;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_7;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_6;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_5;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_4;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_3;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_2;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE_1;	// @[Mux.scala:27:73]
  wire         _wmask_WIRE;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_63;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_62;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_61;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_60;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_59;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_58;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_57;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_56;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_55;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_54;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_53;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_52;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_51;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_50;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_49;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_48;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_47;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_46;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_45;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_44;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_43;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_42;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_41;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_40;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_39;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_38;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_37;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_36;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_35;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_34;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_33;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_32;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_31;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_30;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_29;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_28;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_27;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_26;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_25;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_24;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_23;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_22;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_21;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_20;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_19;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_18;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_17;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_16;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_15;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_14;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_13;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_12;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_11;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_10;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_9;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_8;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_7;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_6;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_5;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_4;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_3;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_2;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE_1;	// @[Mux.scala:27:73]
  wire [7:0]   _wdata_WIRE;	// @[Mux.scala:27:73]
  wire         _q_io_enq_ready;	// @[AccumulatorMem.scala:294:17]
  wire         _q_io_deq_valid;	// @[AccumulatorMem.scala:294:17]
  wire         _q_io_count;	// @[AccumulatorMem.scala:294:17]
  wire [511:0] _mem_1_RW0_rdata;	// @[AccumulatorMem.scala:184:30]
  wire [511:0] _mem_RW0_rdata;	// @[AccumulatorMem.scala:184:30]
  reg          pipelined_writes_0_valid;	// @[AccumulatorMem.scala:113:29]
  reg  [7:0]   pipelined_writes_0_bits_addr;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_0_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_1_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_2_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_3_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_4_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_5_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_6_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_7_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_8_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_9_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_10_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_11_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_12_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_13_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_14_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_0_bits_data_15_0;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_acc;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_0;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_1;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_2;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_3;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_4;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_5;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_6;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_7;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_8;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_9;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_10;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_11;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_12;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_13;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_14;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_15;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_16;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_17;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_18;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_19;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_20;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_21;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_22;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_23;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_24;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_25;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_26;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_27;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_28;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_29;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_30;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_31;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_32;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_33;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_34;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_35;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_36;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_37;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_38;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_39;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_40;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_41;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_42;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_43;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_44;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_45;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_46;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_47;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_48;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_49;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_50;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_51;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_52;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_53;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_54;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_55;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_56;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_57;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_58;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_59;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_60;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_61;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_62;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_0_bits_mask_63;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_valid;	// @[AccumulatorMem.scala:113:29]
  reg  [7:0]   pipelined_writes_1_bits_addr;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29]
  reg  [31:0]  pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_acc;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29]
  reg          pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29]
  wire         _T_712 = _io_write_ready_output & io_write_valid;	// @[AccumulatorMem.scala:334:38, Decoupled.scala:51:35]
  wire         rmw_req_valid = io_write_valid & io_write_bits_acc;	// @[AccumulatorMem.scala:150:37]
  reg          w_q_0_valid;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_0;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_1;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_2;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_3;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_4;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_5;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_6;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_7;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_8;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_9;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_10;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_11;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_12;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_13;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_14;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_15;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_16;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_17;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_18;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_19;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_20;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_21;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_22;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_23;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_24;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_25;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_26;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_27;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_28;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_29;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_30;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_31;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_32;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_33;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_34;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_35;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_36;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_37;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_38;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_39;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_40;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_41;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_42;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_43;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_44;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_45;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_46;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_47;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_48;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_49;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_50;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_51;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_52;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_53;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_54;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_55;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_56;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_57;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_58;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_59;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_60;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_61;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_62;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_0_data_63;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_0;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_1;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_2;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_3;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_4;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_5;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_6;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_7;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_8;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_9;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_10;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_11;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_12;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_13;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_14;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_15;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_16;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_17;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_18;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_19;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_20;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_21;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_22;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_23;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_24;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_25;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_26;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_27;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_28;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_29;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_30;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_31;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_32;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_33;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_34;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_35;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_36;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_37;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_38;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_39;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_40;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_41;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_42;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_43;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_44;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_45;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_46;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_47;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_48;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_49;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_50;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_51;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_52;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_53;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_54;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_55;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_56;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_57;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_58;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_59;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_60;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_61;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_62;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_0_mask_63;	// @[AccumulatorMem.scala:203:20]
  reg  [6:0]   w_q_0_addr;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_valid;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_0;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_1;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_2;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_3;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_4;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_5;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_6;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_7;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_8;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_9;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_10;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_11;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_12;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_13;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_14;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_15;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_16;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_17;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_18;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_19;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_20;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_21;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_22;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_23;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_24;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_25;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_26;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_27;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_28;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_29;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_30;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_31;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_32;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_33;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_34;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_35;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_36;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_37;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_38;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_39;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_40;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_41;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_42;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_43;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_44;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_45;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_46;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_47;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_48;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_49;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_50;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_51;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_52;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_53;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_54;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_55;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_56;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_57;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_58;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_59;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_60;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_61;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_62;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_data_63;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_0;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_1;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_2;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_3;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_4;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_5;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_6;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_7;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_8;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_9;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_10;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_11;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_12;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_13;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_14;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_15;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_16;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_17;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_18;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_19;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_20;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_21;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_22;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_23;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_24;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_25;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_26;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_27;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_28;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_29;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_30;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_31;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_32;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_33;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_34;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_35;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_36;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_37;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_38;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_39;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_40;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_41;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_42;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_43;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_44;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_45;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_46;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_47;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_48;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_49;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_50;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_51;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_52;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_53;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_54;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_55;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_56;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_57;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_58;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_59;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_60;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_61;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_62;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_mask_63;	// @[AccumulatorMem.scala:203:20]
  reg  [6:0]   w_q_1_addr;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_valid;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_0;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_1;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_2;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_3;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_4;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_5;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_6;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_7;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_8;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_9;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_10;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_11;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_12;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_13;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_14;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_15;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_16;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_17;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_18;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_19;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_20;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_21;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_22;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_23;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_24;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_25;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_26;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_27;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_28;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_29;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_30;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_31;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_32;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_33;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_34;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_35;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_36;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_37;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_38;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_39;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_40;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_41;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_42;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_43;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_44;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_45;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_46;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_47;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_48;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_49;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_50;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_51;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_52;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_53;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_54;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_55;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_56;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_57;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_58;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_59;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_60;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_61;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_62;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_2_data_63;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_0;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_1;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_2;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_3;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_4;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_5;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_6;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_7;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_8;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_9;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_10;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_11;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_12;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_13;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_14;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_15;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_16;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_17;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_18;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_19;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_20;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_21;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_22;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_23;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_24;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_25;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_26;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_27;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_28;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_29;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_30;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_31;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_32;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_33;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_34;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_35;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_36;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_37;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_38;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_39;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_40;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_41;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_42;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_43;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_44;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_45;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_46;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_47;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_48;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_49;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_50;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_51;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_52;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_53;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_54;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_55;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_56;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_57;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_58;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_59;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_60;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_61;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_62;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_2_mask_63;	// @[AccumulatorMem.scala:203:20]
  reg  [6:0]   w_q_2_addr;	// @[AccumulatorMem.scala:203:20]
  wire         _GEN = w_q_0_valid & io_write_bits_acc & ~(io_write_bits_addr[0]) & io_write_bits_addr[7:1] == w_q_0_addr;	// @[AccumulatorMem.scala:152:19, :164:{40,70}, :165:41, :203:20, :205:24, :212:{103,115}, :213:27]
  wire         _GEN_0 = w_q_0_valid & ~(io_read_req_bits_addr[0]) & io_read_req_bits_addr[7:1] == w_q_0_addr;	// @[AccumulatorMem.scala:159:25, :164:{40,70}, :165:41, :203:20, :205:24, :216:{88,100}, :217:33]
  wire         _GEN_1 = w_q_1_valid ? ~(io_write_bits_acc & ~(io_write_bits_addr[0]) & io_write_bits_addr[7:1] == w_q_1_addr | _GEN) : ~_GEN;	// @[AccumulatorMem.scala:152:19, :164:{40,70}, :165:41, :203:20, :205:24, :212:{69,103,115}, :213:27]
  wire         _GEN_2 = w_q_1_valid ? ~(~(io_read_req_bits_addr[0]) & io_read_req_bits_addr[7:1] == w_q_1_addr | _GEN_0) : ~_GEN_0;	// @[AccumulatorMem.scala:159:25, :164:{40,70}, :165:41, :203:20, :205:24, :216:{51,88,100}, :217:33]
  wire         _GEN_3 = w_q_2_valid & io_write_bits_acc & ~(io_write_bits_addr[0]) & io_write_bits_addr[7:1] == w_q_2_addr;	// @[AccumulatorMem.scala:164:{40,70}, :165:41, :203:20, :205:24, :212:{103,115}, :213:27]
  wire         _GEN_4 = w_q_2_valid & ~(io_read_req_bits_addr[0]) & io_read_req_bits_addr[7:1] == w_q_2_addr;	// @[AccumulatorMem.scala:164:{40,70}, :165:41, :203:20, :205:24, :216:{88,100}, :217:33]
  reg  [2:0]   w_q_head;	// @[AccumulatorMem.scala:222:29]
  reg  [2:0]   w_q_tail;	// @[AccumulatorMem.scala:223:29]
  wire         _w_q_empty_T_7 = w_q_head[0] & w_q_0_valid | w_q_head[1] & w_q_1_valid | w_q_head[2] & w_q_2_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:{34,86,102}]
  assign _wdata_WIRE = (w_q_head[0] ? w_q_0_data_0 : 8'h0) | (w_q_head[1] ? w_q_1_data_0 : 8'h0) | (w_q_head[2] ? w_q_2_data_0 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_1 = (w_q_head[0] ? w_q_0_data_1 : 8'h0) | (w_q_head[1] ? w_q_1_data_1 : 8'h0) | (w_q_head[2] ? w_q_2_data_1 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_2 = (w_q_head[0] ? w_q_0_data_2 : 8'h0) | (w_q_head[1] ? w_q_1_data_2 : 8'h0) | (w_q_head[2] ? w_q_2_data_2 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_3 = (w_q_head[0] ? w_q_0_data_3 : 8'h0) | (w_q_head[1] ? w_q_1_data_3 : 8'h0) | (w_q_head[2] ? w_q_2_data_3 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_4 = (w_q_head[0] ? w_q_0_data_4 : 8'h0) | (w_q_head[1] ? w_q_1_data_4 : 8'h0) | (w_q_head[2] ? w_q_2_data_4 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_5 = (w_q_head[0] ? w_q_0_data_5 : 8'h0) | (w_q_head[1] ? w_q_1_data_5 : 8'h0) | (w_q_head[2] ? w_q_2_data_5 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_6 = (w_q_head[0] ? w_q_0_data_6 : 8'h0) | (w_q_head[1] ? w_q_1_data_6 : 8'h0) | (w_q_head[2] ? w_q_2_data_6 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_7 = (w_q_head[0] ? w_q_0_data_7 : 8'h0) | (w_q_head[1] ? w_q_1_data_7 : 8'h0) | (w_q_head[2] ? w_q_2_data_7 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_8 = (w_q_head[0] ? w_q_0_data_8 : 8'h0) | (w_q_head[1] ? w_q_1_data_8 : 8'h0) | (w_q_head[2] ? w_q_2_data_8 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_9 = (w_q_head[0] ? w_q_0_data_9 : 8'h0) | (w_q_head[1] ? w_q_1_data_9 : 8'h0) | (w_q_head[2] ? w_q_2_data_9 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_10 = (w_q_head[0] ? w_q_0_data_10 : 8'h0) | (w_q_head[1] ? w_q_1_data_10 : 8'h0) | (w_q_head[2] ? w_q_2_data_10 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_11 = (w_q_head[0] ? w_q_0_data_11 : 8'h0) | (w_q_head[1] ? w_q_1_data_11 : 8'h0) | (w_q_head[2] ? w_q_2_data_11 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_12 = (w_q_head[0] ? w_q_0_data_12 : 8'h0) | (w_q_head[1] ? w_q_1_data_12 : 8'h0) | (w_q_head[2] ? w_q_2_data_12 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_13 = (w_q_head[0] ? w_q_0_data_13 : 8'h0) | (w_q_head[1] ? w_q_1_data_13 : 8'h0) | (w_q_head[2] ? w_q_2_data_13 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_14 = (w_q_head[0] ? w_q_0_data_14 : 8'h0) | (w_q_head[1] ? w_q_1_data_14 : 8'h0) | (w_q_head[2] ? w_q_2_data_14 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_15 = (w_q_head[0] ? w_q_0_data_15 : 8'h0) | (w_q_head[1] ? w_q_1_data_15 : 8'h0) | (w_q_head[2] ? w_q_2_data_15 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_16 = (w_q_head[0] ? w_q_0_data_16 : 8'h0) | (w_q_head[1] ? w_q_1_data_16 : 8'h0) | (w_q_head[2] ? w_q_2_data_16 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_17 = (w_q_head[0] ? w_q_0_data_17 : 8'h0) | (w_q_head[1] ? w_q_1_data_17 : 8'h0) | (w_q_head[2] ? w_q_2_data_17 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_18 = (w_q_head[0] ? w_q_0_data_18 : 8'h0) | (w_q_head[1] ? w_q_1_data_18 : 8'h0) | (w_q_head[2] ? w_q_2_data_18 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_19 = (w_q_head[0] ? w_q_0_data_19 : 8'h0) | (w_q_head[1] ? w_q_1_data_19 : 8'h0) | (w_q_head[2] ? w_q_2_data_19 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_20 = (w_q_head[0] ? w_q_0_data_20 : 8'h0) | (w_q_head[1] ? w_q_1_data_20 : 8'h0) | (w_q_head[2] ? w_q_2_data_20 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_21 = (w_q_head[0] ? w_q_0_data_21 : 8'h0) | (w_q_head[1] ? w_q_1_data_21 : 8'h0) | (w_q_head[2] ? w_q_2_data_21 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_22 = (w_q_head[0] ? w_q_0_data_22 : 8'h0) | (w_q_head[1] ? w_q_1_data_22 : 8'h0) | (w_q_head[2] ? w_q_2_data_22 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_23 = (w_q_head[0] ? w_q_0_data_23 : 8'h0) | (w_q_head[1] ? w_q_1_data_23 : 8'h0) | (w_q_head[2] ? w_q_2_data_23 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_24 = (w_q_head[0] ? w_q_0_data_24 : 8'h0) | (w_q_head[1] ? w_q_1_data_24 : 8'h0) | (w_q_head[2] ? w_q_2_data_24 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_25 = (w_q_head[0] ? w_q_0_data_25 : 8'h0) | (w_q_head[1] ? w_q_1_data_25 : 8'h0) | (w_q_head[2] ? w_q_2_data_25 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_26 = (w_q_head[0] ? w_q_0_data_26 : 8'h0) | (w_q_head[1] ? w_q_1_data_26 : 8'h0) | (w_q_head[2] ? w_q_2_data_26 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_27 = (w_q_head[0] ? w_q_0_data_27 : 8'h0) | (w_q_head[1] ? w_q_1_data_27 : 8'h0) | (w_q_head[2] ? w_q_2_data_27 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_28 = (w_q_head[0] ? w_q_0_data_28 : 8'h0) | (w_q_head[1] ? w_q_1_data_28 : 8'h0) | (w_q_head[2] ? w_q_2_data_28 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_29 = (w_q_head[0] ? w_q_0_data_29 : 8'h0) | (w_q_head[1] ? w_q_1_data_29 : 8'h0) | (w_q_head[2] ? w_q_2_data_29 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_30 = (w_q_head[0] ? w_q_0_data_30 : 8'h0) | (w_q_head[1] ? w_q_1_data_30 : 8'h0) | (w_q_head[2] ? w_q_2_data_30 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_31 = (w_q_head[0] ? w_q_0_data_31 : 8'h0) | (w_q_head[1] ? w_q_1_data_31 : 8'h0) | (w_q_head[2] ? w_q_2_data_31 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_32 = (w_q_head[0] ? w_q_0_data_32 : 8'h0) | (w_q_head[1] ? w_q_1_data_32 : 8'h0) | (w_q_head[2] ? w_q_2_data_32 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_33 = (w_q_head[0] ? w_q_0_data_33 : 8'h0) | (w_q_head[1] ? w_q_1_data_33 : 8'h0) | (w_q_head[2] ? w_q_2_data_33 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_34 = (w_q_head[0] ? w_q_0_data_34 : 8'h0) | (w_q_head[1] ? w_q_1_data_34 : 8'h0) | (w_q_head[2] ? w_q_2_data_34 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_35 = (w_q_head[0] ? w_q_0_data_35 : 8'h0) | (w_q_head[1] ? w_q_1_data_35 : 8'h0) | (w_q_head[2] ? w_q_2_data_35 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_36 = (w_q_head[0] ? w_q_0_data_36 : 8'h0) | (w_q_head[1] ? w_q_1_data_36 : 8'h0) | (w_q_head[2] ? w_q_2_data_36 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_37 = (w_q_head[0] ? w_q_0_data_37 : 8'h0) | (w_q_head[1] ? w_q_1_data_37 : 8'h0) | (w_q_head[2] ? w_q_2_data_37 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_38 = (w_q_head[0] ? w_q_0_data_38 : 8'h0) | (w_q_head[1] ? w_q_1_data_38 : 8'h0) | (w_q_head[2] ? w_q_2_data_38 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_39 = (w_q_head[0] ? w_q_0_data_39 : 8'h0) | (w_q_head[1] ? w_q_1_data_39 : 8'h0) | (w_q_head[2] ? w_q_2_data_39 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_40 = (w_q_head[0] ? w_q_0_data_40 : 8'h0) | (w_q_head[1] ? w_q_1_data_40 : 8'h0) | (w_q_head[2] ? w_q_2_data_40 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_41 = (w_q_head[0] ? w_q_0_data_41 : 8'h0) | (w_q_head[1] ? w_q_1_data_41 : 8'h0) | (w_q_head[2] ? w_q_2_data_41 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_42 = (w_q_head[0] ? w_q_0_data_42 : 8'h0) | (w_q_head[1] ? w_q_1_data_42 : 8'h0) | (w_q_head[2] ? w_q_2_data_42 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_43 = (w_q_head[0] ? w_q_0_data_43 : 8'h0) | (w_q_head[1] ? w_q_1_data_43 : 8'h0) | (w_q_head[2] ? w_q_2_data_43 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_44 = (w_q_head[0] ? w_q_0_data_44 : 8'h0) | (w_q_head[1] ? w_q_1_data_44 : 8'h0) | (w_q_head[2] ? w_q_2_data_44 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_45 = (w_q_head[0] ? w_q_0_data_45 : 8'h0) | (w_q_head[1] ? w_q_1_data_45 : 8'h0) | (w_q_head[2] ? w_q_2_data_45 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_46 = (w_q_head[0] ? w_q_0_data_46 : 8'h0) | (w_q_head[1] ? w_q_1_data_46 : 8'h0) | (w_q_head[2] ? w_q_2_data_46 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_47 = (w_q_head[0] ? w_q_0_data_47 : 8'h0) | (w_q_head[1] ? w_q_1_data_47 : 8'h0) | (w_q_head[2] ? w_q_2_data_47 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_48 = (w_q_head[0] ? w_q_0_data_48 : 8'h0) | (w_q_head[1] ? w_q_1_data_48 : 8'h0) | (w_q_head[2] ? w_q_2_data_48 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_49 = (w_q_head[0] ? w_q_0_data_49 : 8'h0) | (w_q_head[1] ? w_q_1_data_49 : 8'h0) | (w_q_head[2] ? w_q_2_data_49 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_50 = (w_q_head[0] ? w_q_0_data_50 : 8'h0) | (w_q_head[1] ? w_q_1_data_50 : 8'h0) | (w_q_head[2] ? w_q_2_data_50 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_51 = (w_q_head[0] ? w_q_0_data_51 : 8'h0) | (w_q_head[1] ? w_q_1_data_51 : 8'h0) | (w_q_head[2] ? w_q_2_data_51 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_52 = (w_q_head[0] ? w_q_0_data_52 : 8'h0) | (w_q_head[1] ? w_q_1_data_52 : 8'h0) | (w_q_head[2] ? w_q_2_data_52 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_53 = (w_q_head[0] ? w_q_0_data_53 : 8'h0) | (w_q_head[1] ? w_q_1_data_53 : 8'h0) | (w_q_head[2] ? w_q_2_data_53 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_54 = (w_q_head[0] ? w_q_0_data_54 : 8'h0) | (w_q_head[1] ? w_q_1_data_54 : 8'h0) | (w_q_head[2] ? w_q_2_data_54 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_55 = (w_q_head[0] ? w_q_0_data_55 : 8'h0) | (w_q_head[1] ? w_q_1_data_55 : 8'h0) | (w_q_head[2] ? w_q_2_data_55 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_56 = (w_q_head[0] ? w_q_0_data_56 : 8'h0) | (w_q_head[1] ? w_q_1_data_56 : 8'h0) | (w_q_head[2] ? w_q_2_data_56 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_57 = (w_q_head[0] ? w_q_0_data_57 : 8'h0) | (w_q_head[1] ? w_q_1_data_57 : 8'h0) | (w_q_head[2] ? w_q_2_data_57 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_58 = (w_q_head[0] ? w_q_0_data_58 : 8'h0) | (w_q_head[1] ? w_q_1_data_58 : 8'h0) | (w_q_head[2] ? w_q_2_data_58 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_59 = (w_q_head[0] ? w_q_0_data_59 : 8'h0) | (w_q_head[1] ? w_q_1_data_59 : 8'h0) | (w_q_head[2] ? w_q_2_data_59 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_60 = (w_q_head[0] ? w_q_0_data_60 : 8'h0) | (w_q_head[1] ? w_q_1_data_60 : 8'h0) | (w_q_head[2] ? w_q_2_data_60 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_61 = (w_q_head[0] ? w_q_0_data_61 : 8'h0) | (w_q_head[1] ? w_q_1_data_61 : 8'h0) | (w_q_head[2] ? w_q_2_data_61 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_62 = (w_q_head[0] ? w_q_0_data_62 : 8'h0) | (w_q_head[1] ? w_q_1_data_62 : 8'h0) | (w_q_head[2] ? w_q_2_data_62 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_63 = (w_q_head[0] ? w_q_0_data_63 : 8'h0) | (w_q_head[1] ? w_q_1_data_63 : 8'h0) | (w_q_head[2] ? w_q_2_data_63 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE = w_q_head[0] & w_q_0_mask_0 | w_q_head[1] & w_q_1_mask_0 | w_q_head[2] & w_q_2_mask_0;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_1 = w_q_head[0] & w_q_0_mask_1 | w_q_head[1] & w_q_1_mask_1 | w_q_head[2] & w_q_2_mask_1;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_2 = w_q_head[0] & w_q_0_mask_2 | w_q_head[1] & w_q_1_mask_2 | w_q_head[2] & w_q_2_mask_2;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_3 = w_q_head[0] & w_q_0_mask_3 | w_q_head[1] & w_q_1_mask_3 | w_q_head[2] & w_q_2_mask_3;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_4 = w_q_head[0] & w_q_0_mask_4 | w_q_head[1] & w_q_1_mask_4 | w_q_head[2] & w_q_2_mask_4;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_5 = w_q_head[0] & w_q_0_mask_5 | w_q_head[1] & w_q_1_mask_5 | w_q_head[2] & w_q_2_mask_5;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_6 = w_q_head[0] & w_q_0_mask_6 | w_q_head[1] & w_q_1_mask_6 | w_q_head[2] & w_q_2_mask_6;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_7 = w_q_head[0] & w_q_0_mask_7 | w_q_head[1] & w_q_1_mask_7 | w_q_head[2] & w_q_2_mask_7;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_8 = w_q_head[0] & w_q_0_mask_8 | w_q_head[1] & w_q_1_mask_8 | w_q_head[2] & w_q_2_mask_8;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_9 = w_q_head[0] & w_q_0_mask_9 | w_q_head[1] & w_q_1_mask_9 | w_q_head[2] & w_q_2_mask_9;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_10 = w_q_head[0] & w_q_0_mask_10 | w_q_head[1] & w_q_1_mask_10 | w_q_head[2] & w_q_2_mask_10;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_11 = w_q_head[0] & w_q_0_mask_11 | w_q_head[1] & w_q_1_mask_11 | w_q_head[2] & w_q_2_mask_11;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_12 = w_q_head[0] & w_q_0_mask_12 | w_q_head[1] & w_q_1_mask_12 | w_q_head[2] & w_q_2_mask_12;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_13 = w_q_head[0] & w_q_0_mask_13 | w_q_head[1] & w_q_1_mask_13 | w_q_head[2] & w_q_2_mask_13;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_14 = w_q_head[0] & w_q_0_mask_14 | w_q_head[1] & w_q_1_mask_14 | w_q_head[2] & w_q_2_mask_14;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_15 = w_q_head[0] & w_q_0_mask_15 | w_q_head[1] & w_q_1_mask_15 | w_q_head[2] & w_q_2_mask_15;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_16 = w_q_head[0] & w_q_0_mask_16 | w_q_head[1] & w_q_1_mask_16 | w_q_head[2] & w_q_2_mask_16;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_17 = w_q_head[0] & w_q_0_mask_17 | w_q_head[1] & w_q_1_mask_17 | w_q_head[2] & w_q_2_mask_17;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_18 = w_q_head[0] & w_q_0_mask_18 | w_q_head[1] & w_q_1_mask_18 | w_q_head[2] & w_q_2_mask_18;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_19 = w_q_head[0] & w_q_0_mask_19 | w_q_head[1] & w_q_1_mask_19 | w_q_head[2] & w_q_2_mask_19;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_20 = w_q_head[0] & w_q_0_mask_20 | w_q_head[1] & w_q_1_mask_20 | w_q_head[2] & w_q_2_mask_20;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_21 = w_q_head[0] & w_q_0_mask_21 | w_q_head[1] & w_q_1_mask_21 | w_q_head[2] & w_q_2_mask_21;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_22 = w_q_head[0] & w_q_0_mask_22 | w_q_head[1] & w_q_1_mask_22 | w_q_head[2] & w_q_2_mask_22;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_23 = w_q_head[0] & w_q_0_mask_23 | w_q_head[1] & w_q_1_mask_23 | w_q_head[2] & w_q_2_mask_23;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_24 = w_q_head[0] & w_q_0_mask_24 | w_q_head[1] & w_q_1_mask_24 | w_q_head[2] & w_q_2_mask_24;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_25 = w_q_head[0] & w_q_0_mask_25 | w_q_head[1] & w_q_1_mask_25 | w_q_head[2] & w_q_2_mask_25;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_26 = w_q_head[0] & w_q_0_mask_26 | w_q_head[1] & w_q_1_mask_26 | w_q_head[2] & w_q_2_mask_26;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_27 = w_q_head[0] & w_q_0_mask_27 | w_q_head[1] & w_q_1_mask_27 | w_q_head[2] & w_q_2_mask_27;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_28 = w_q_head[0] & w_q_0_mask_28 | w_q_head[1] & w_q_1_mask_28 | w_q_head[2] & w_q_2_mask_28;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_29 = w_q_head[0] & w_q_0_mask_29 | w_q_head[1] & w_q_1_mask_29 | w_q_head[2] & w_q_2_mask_29;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_30 = w_q_head[0] & w_q_0_mask_30 | w_q_head[1] & w_q_1_mask_30 | w_q_head[2] & w_q_2_mask_30;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_31 = w_q_head[0] & w_q_0_mask_31 | w_q_head[1] & w_q_1_mask_31 | w_q_head[2] & w_q_2_mask_31;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_32 = w_q_head[0] & w_q_0_mask_32 | w_q_head[1] & w_q_1_mask_32 | w_q_head[2] & w_q_2_mask_32;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_33 = w_q_head[0] & w_q_0_mask_33 | w_q_head[1] & w_q_1_mask_33 | w_q_head[2] & w_q_2_mask_33;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_34 = w_q_head[0] & w_q_0_mask_34 | w_q_head[1] & w_q_1_mask_34 | w_q_head[2] & w_q_2_mask_34;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_35 = w_q_head[0] & w_q_0_mask_35 | w_q_head[1] & w_q_1_mask_35 | w_q_head[2] & w_q_2_mask_35;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_36 = w_q_head[0] & w_q_0_mask_36 | w_q_head[1] & w_q_1_mask_36 | w_q_head[2] & w_q_2_mask_36;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_37 = w_q_head[0] & w_q_0_mask_37 | w_q_head[1] & w_q_1_mask_37 | w_q_head[2] & w_q_2_mask_37;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_38 = w_q_head[0] & w_q_0_mask_38 | w_q_head[1] & w_q_1_mask_38 | w_q_head[2] & w_q_2_mask_38;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_39 = w_q_head[0] & w_q_0_mask_39 | w_q_head[1] & w_q_1_mask_39 | w_q_head[2] & w_q_2_mask_39;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_40 = w_q_head[0] & w_q_0_mask_40 | w_q_head[1] & w_q_1_mask_40 | w_q_head[2] & w_q_2_mask_40;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_41 = w_q_head[0] & w_q_0_mask_41 | w_q_head[1] & w_q_1_mask_41 | w_q_head[2] & w_q_2_mask_41;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_42 = w_q_head[0] & w_q_0_mask_42 | w_q_head[1] & w_q_1_mask_42 | w_q_head[2] & w_q_2_mask_42;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_43 = w_q_head[0] & w_q_0_mask_43 | w_q_head[1] & w_q_1_mask_43 | w_q_head[2] & w_q_2_mask_43;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_44 = w_q_head[0] & w_q_0_mask_44 | w_q_head[1] & w_q_1_mask_44 | w_q_head[2] & w_q_2_mask_44;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_45 = w_q_head[0] & w_q_0_mask_45 | w_q_head[1] & w_q_1_mask_45 | w_q_head[2] & w_q_2_mask_45;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_46 = w_q_head[0] & w_q_0_mask_46 | w_q_head[1] & w_q_1_mask_46 | w_q_head[2] & w_q_2_mask_46;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_47 = w_q_head[0] & w_q_0_mask_47 | w_q_head[1] & w_q_1_mask_47 | w_q_head[2] & w_q_2_mask_47;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_48 = w_q_head[0] & w_q_0_mask_48 | w_q_head[1] & w_q_1_mask_48 | w_q_head[2] & w_q_2_mask_48;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_49 = w_q_head[0] & w_q_0_mask_49 | w_q_head[1] & w_q_1_mask_49 | w_q_head[2] & w_q_2_mask_49;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_50 = w_q_head[0] & w_q_0_mask_50 | w_q_head[1] & w_q_1_mask_50 | w_q_head[2] & w_q_2_mask_50;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_51 = w_q_head[0] & w_q_0_mask_51 | w_q_head[1] & w_q_1_mask_51 | w_q_head[2] & w_q_2_mask_51;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_52 = w_q_head[0] & w_q_0_mask_52 | w_q_head[1] & w_q_1_mask_52 | w_q_head[2] & w_q_2_mask_52;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_53 = w_q_head[0] & w_q_0_mask_53 | w_q_head[1] & w_q_1_mask_53 | w_q_head[2] & w_q_2_mask_53;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_54 = w_q_head[0] & w_q_0_mask_54 | w_q_head[1] & w_q_1_mask_54 | w_q_head[2] & w_q_2_mask_54;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_55 = w_q_head[0] & w_q_0_mask_55 | w_q_head[1] & w_q_1_mask_55 | w_q_head[2] & w_q_2_mask_55;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_56 = w_q_head[0] & w_q_0_mask_56 | w_q_head[1] & w_q_1_mask_56 | w_q_head[2] & w_q_2_mask_56;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_57 = w_q_head[0] & w_q_0_mask_57 | w_q_head[1] & w_q_1_mask_57 | w_q_head[2] & w_q_2_mask_57;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_58 = w_q_head[0] & w_q_0_mask_58 | w_q_head[1] & w_q_1_mask_58 | w_q_head[2] & w_q_2_mask_58;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_59 = w_q_head[0] & w_q_0_mask_59 | w_q_head[1] & w_q_1_mask_59 | w_q_head[2] & w_q_2_mask_59;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_60 = w_q_head[0] & w_q_0_mask_60 | w_q_head[1] & w_q_1_mask_60 | w_q_head[2] & w_q_2_mask_60;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_61 = w_q_head[0] & w_q_0_mask_61 | w_q_head[1] & w_q_1_mask_61 | w_q_head[2] & w_q_2_mask_61;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_62 = w_q_head[0] & w_q_0_mask_62 | w_q_head[1] & w_q_1_mask_62 | w_q_head[2] & w_q_2_mask_62;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_63 = w_q_head[0] & w_q_0_mask_63 | w_q_head[1] & w_q_1_mask_63 | w_q_head[2] & w_q_2_mask_63;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign waddr = (w_q_head[0] ? w_q_0_addr : 7'h0) | (w_q_head[1] ? w_q_1_addr : 7'h0) | (w_q_head[2] ? w_q_2_addr : 7'h0);	// @[AccumulatorMem.scala:185:57, :203:20, :222:29, :226:34, Mux.scala:27:73]
  wire         w_q_push = pipelined_writes_1_valid & ~(pipelined_writes_1_bits_addr[0]);	// @[AccumulatorMem.scala:113:29, :164:{40,70}, :241:51]
  assign mem_bank_rdata_MPORT_en = ren & ~wen;	// @[AccumulatorMem.scala:228:25, :257:{40,43}, :273:55, :274:13, :278:32]
  wire         _T_700 = rmw_req_ready & rmw_req_valid;	// @[AccumulatorMem.scala:150:37, :205:24, :212:115, Decoupled.scala:51:35]
  wire         _T_348 = _T_700 & ~(io_write_bits_addr[0]);	// @[AccumulatorMem.scala:164:{40,70}, :273:26, Decoupled.scala:51:35]
  assign wen = ~_T_348 & _w_q_empty_T_7;	// @[AccumulatorMem.scala:226:102, :228:25, :273:{26,55}, :278:32]
  wire         _GEN_5 = _T_348 ? ~(~(io_read_req_bits_addr[0]) | _GEN_4) & _GEN_2 : _w_q_empty_T_7 ? ~(~(io_read_req_bits_addr[0]) | _GEN_4) & _GEN_2 : ~_GEN_4 & _GEN_2;	// @[AccumulatorMem.scala:164:{40,70}, :205:24, :216:100, :217:33, :226:102, :273:{26,55}, :275:47, :276:31, :278:32, :280:47, :281:31]
  assign ren = _T_348 | ~_w_q_empty_T_7 & ~(io_read_req_bits_addr[0]) & only_read_req_ready & io_read_req_valid;	// @[AccumulatorMem.scala:164:{40,70}, :190:25, :226:102, :273:{26,55}, :274:13, :275:47, :278:32, :284:13]
  assign _bank_rdata_T_3 = _T_348 | _w_q_empty_T_7 ? io_write_bits_addr[7:1] : io_read_req_bits_addr[7:1];	// @[AccumulatorMem.scala:165:41, :191:27, :226:102, :273:{26,55}, :278:32, :285:15]
  reg          w_q_1_0_valid;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_0;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_1;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_2;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_3;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_4;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_5;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_6;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_7;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_8;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_9;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_10;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_11;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_12;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_13;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_14;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_15;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_16;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_17;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_18;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_19;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_20;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_21;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_22;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_23;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_24;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_25;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_26;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_27;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_28;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_29;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_30;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_31;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_32;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_33;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_34;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_35;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_36;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_37;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_38;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_39;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_40;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_41;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_42;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_43;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_44;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_45;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_46;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_47;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_48;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_49;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_50;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_51;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_52;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_53;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_54;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_55;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_56;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_57;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_58;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_59;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_60;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_61;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_62;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_0_data_63;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_0;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_1;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_2;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_3;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_4;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_5;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_6;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_7;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_8;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_9;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_10;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_11;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_12;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_13;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_14;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_15;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_16;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_17;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_18;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_19;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_20;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_21;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_22;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_23;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_24;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_25;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_26;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_27;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_28;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_29;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_30;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_31;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_32;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_33;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_34;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_35;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_36;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_37;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_38;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_39;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_40;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_41;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_42;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_43;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_44;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_45;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_46;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_47;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_48;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_49;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_50;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_51;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_52;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_53;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_54;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_55;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_56;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_57;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_58;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_59;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_60;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_61;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_62;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_0_mask_63;	// @[AccumulatorMem.scala:203:20]
  reg  [6:0]   w_q_1_0_addr;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_valid;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_0;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_1;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_2;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_3;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_4;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_5;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_6;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_7;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_8;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_9;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_10;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_11;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_12;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_13;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_14;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_15;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_16;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_17;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_18;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_19;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_20;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_21;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_22;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_23;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_24;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_25;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_26;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_27;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_28;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_29;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_30;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_31;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_32;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_33;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_34;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_35;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_36;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_37;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_38;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_39;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_40;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_41;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_42;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_43;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_44;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_45;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_46;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_47;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_48;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_49;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_50;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_51;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_52;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_53;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_54;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_55;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_56;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_57;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_58;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_59;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_60;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_61;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_62;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_1_data_63;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_0;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_1;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_2;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_3;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_4;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_5;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_6;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_7;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_8;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_9;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_10;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_11;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_12;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_13;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_14;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_15;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_16;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_17;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_18;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_19;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_20;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_21;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_22;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_23;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_24;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_25;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_26;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_27;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_28;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_29;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_30;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_31;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_32;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_33;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_34;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_35;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_36;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_37;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_38;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_39;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_40;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_41;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_42;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_43;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_44;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_45;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_46;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_47;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_48;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_49;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_50;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_51;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_52;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_53;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_54;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_55;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_56;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_57;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_58;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_59;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_60;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_61;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_62;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_1_mask_63;	// @[AccumulatorMem.scala:203:20]
  reg  [6:0]   w_q_1_1_addr;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_valid;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_0;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_1;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_2;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_3;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_4;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_5;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_6;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_7;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_8;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_9;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_10;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_11;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_12;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_13;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_14;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_15;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_16;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_17;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_18;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_19;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_20;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_21;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_22;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_23;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_24;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_25;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_26;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_27;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_28;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_29;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_30;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_31;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_32;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_33;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_34;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_35;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_36;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_37;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_38;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_39;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_40;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_41;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_42;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_43;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_44;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_45;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_46;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_47;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_48;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_49;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_50;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_51;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_52;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_53;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_54;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_55;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_56;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_57;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_58;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_59;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_60;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_61;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_62;	// @[AccumulatorMem.scala:203:20]
  reg  [7:0]   w_q_1_2_data_63;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_0;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_1;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_2;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_3;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_4;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_5;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_6;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_7;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_8;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_9;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_10;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_11;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_12;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_13;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_14;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_15;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_16;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_17;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_18;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_19;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_20;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_21;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_22;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_23;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_24;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_25;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_26;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_27;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_28;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_29;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_30;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_31;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_32;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_33;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_34;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_35;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_36;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_37;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_38;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_39;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_40;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_41;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_42;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_43;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_44;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_45;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_46;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_47;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_48;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_49;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_50;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_51;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_52;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_53;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_54;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_55;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_56;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_57;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_58;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_59;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_60;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_61;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_62;	// @[AccumulatorMem.scala:203:20]
  reg          w_q_1_2_mask_63;	// @[AccumulatorMem.scala:203:20]
  reg  [6:0]   w_q_1_2_addr;	// @[AccumulatorMem.scala:203:20]
  wire         _GEN_6 = w_q_1_0_valid ? ~(io_write_bits_acc & io_write_bits_addr[0] & io_write_bits_addr[7:1] == w_q_1_0_addr | _GEN_3) & _GEN_1 : ~_GEN_3 & _GEN_1;	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :205:24, :212:{69,103,115}, :213:27]
  wire         _GEN_7 = w_q_1_0_valid & io_read_req_bits_addr[0] & io_read_req_bits_addr[7:1] == w_q_1_0_addr;	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :205:24, :216:{88,100}, :217:33, :273:55]
  wire         _GEN_8 = w_q_1_1_valid & io_write_bits_acc & io_write_bits_addr[0] & io_write_bits_addr[7:1] == w_q_1_1_addr;	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :205:24, :212:{103,115}, :213:27]
  wire         _GEN_9 = w_q_1_1_valid ? ~(io_read_req_bits_addr[0] & io_read_req_bits_addr[7:1] == w_q_1_1_addr | _GEN_7) & _GEN_5 : ~_GEN_7 & _GEN_5;	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :205:24, :216:{51,88,100}, :217:33, :273:55, :275:47, :278:32]
  assign rmw_req_ready = w_q_1_2_valid ? ~(io_write_bits_acc & io_write_bits_addr[0] & io_write_bits_addr[7:1] == w_q_1_2_addr | _GEN_8) & _GEN_6 : ~_GEN_8 & _GEN_6;	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :205:24, :212:{69,103,115}, :213:27]
  wire         _GEN_10 = w_q_1_2_valid & io_read_req_bits_addr[0] & io_read_req_bits_addr[7:1] == w_q_1_2_addr;	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :205:24, :216:{88,100}, :217:33]
  reg  [2:0]   w_q_head_1;	// @[AccumulatorMem.scala:222:29]
  reg  [2:0]   w_q_tail_1;	// @[AccumulatorMem.scala:223:29]
  wire         _w_q_empty_T_15 = w_q_head_1[0] & w_q_1_0_valid | w_q_head_1[1] & w_q_1_1_valid | w_q_head_1[2] & w_q_1_2_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:{34,86,102}]
  assign _wdata_WIRE_64 = (w_q_head_1[0] ? w_q_1_0_data_0 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_0 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_0 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_65 = (w_q_head_1[0] ? w_q_1_0_data_1 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_1 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_1 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_66 = (w_q_head_1[0] ? w_q_1_0_data_2 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_2 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_2 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_67 = (w_q_head_1[0] ? w_q_1_0_data_3 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_3 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_3 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_68 = (w_q_head_1[0] ? w_q_1_0_data_4 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_4 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_4 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_69 = (w_q_head_1[0] ? w_q_1_0_data_5 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_5 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_5 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_70 = (w_q_head_1[0] ? w_q_1_0_data_6 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_6 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_6 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_71 = (w_q_head_1[0] ? w_q_1_0_data_7 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_7 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_7 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_72 = (w_q_head_1[0] ? w_q_1_0_data_8 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_8 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_8 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_73 = (w_q_head_1[0] ? w_q_1_0_data_9 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_9 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_9 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_74 = (w_q_head_1[0] ? w_q_1_0_data_10 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_10 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_10 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_75 = (w_q_head_1[0] ? w_q_1_0_data_11 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_11 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_11 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_76 = (w_q_head_1[0] ? w_q_1_0_data_12 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_12 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_12 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_77 = (w_q_head_1[0] ? w_q_1_0_data_13 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_13 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_13 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_78 = (w_q_head_1[0] ? w_q_1_0_data_14 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_14 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_14 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_79 = (w_q_head_1[0] ? w_q_1_0_data_15 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_15 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_15 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_80 = (w_q_head_1[0] ? w_q_1_0_data_16 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_16 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_16 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_81 = (w_q_head_1[0] ? w_q_1_0_data_17 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_17 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_17 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_82 = (w_q_head_1[0] ? w_q_1_0_data_18 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_18 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_18 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_83 = (w_q_head_1[0] ? w_q_1_0_data_19 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_19 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_19 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_84 = (w_q_head_1[0] ? w_q_1_0_data_20 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_20 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_20 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_85 = (w_q_head_1[0] ? w_q_1_0_data_21 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_21 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_21 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_86 = (w_q_head_1[0] ? w_q_1_0_data_22 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_22 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_22 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_87 = (w_q_head_1[0] ? w_q_1_0_data_23 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_23 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_23 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_88 = (w_q_head_1[0] ? w_q_1_0_data_24 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_24 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_24 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_89 = (w_q_head_1[0] ? w_q_1_0_data_25 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_25 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_25 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_90 = (w_q_head_1[0] ? w_q_1_0_data_26 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_26 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_26 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_91 = (w_q_head_1[0] ? w_q_1_0_data_27 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_27 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_27 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_92 = (w_q_head_1[0] ? w_q_1_0_data_28 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_28 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_28 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_93 = (w_q_head_1[0] ? w_q_1_0_data_29 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_29 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_29 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_94 = (w_q_head_1[0] ? w_q_1_0_data_30 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_30 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_30 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_95 = (w_q_head_1[0] ? w_q_1_0_data_31 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_31 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_31 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_96 = (w_q_head_1[0] ? w_q_1_0_data_32 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_32 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_32 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_97 = (w_q_head_1[0] ? w_q_1_0_data_33 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_33 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_33 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_98 = (w_q_head_1[0] ? w_q_1_0_data_34 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_34 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_34 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_99 = (w_q_head_1[0] ? w_q_1_0_data_35 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_35 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_35 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_100 = (w_q_head_1[0] ? w_q_1_0_data_36 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_36 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_36 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_101 = (w_q_head_1[0] ? w_q_1_0_data_37 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_37 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_37 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_102 = (w_q_head_1[0] ? w_q_1_0_data_38 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_38 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_38 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_103 = (w_q_head_1[0] ? w_q_1_0_data_39 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_39 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_39 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_104 = (w_q_head_1[0] ? w_q_1_0_data_40 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_40 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_40 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_105 = (w_q_head_1[0] ? w_q_1_0_data_41 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_41 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_41 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_106 = (w_q_head_1[0] ? w_q_1_0_data_42 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_42 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_42 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_107 = (w_q_head_1[0] ? w_q_1_0_data_43 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_43 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_43 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_108 = (w_q_head_1[0] ? w_q_1_0_data_44 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_44 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_44 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_109 = (w_q_head_1[0] ? w_q_1_0_data_45 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_45 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_45 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_110 = (w_q_head_1[0] ? w_q_1_0_data_46 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_46 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_46 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_111 = (w_q_head_1[0] ? w_q_1_0_data_47 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_47 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_47 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_112 = (w_q_head_1[0] ? w_q_1_0_data_48 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_48 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_48 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_113 = (w_q_head_1[0] ? w_q_1_0_data_49 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_49 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_49 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_114 = (w_q_head_1[0] ? w_q_1_0_data_50 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_50 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_50 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_115 = (w_q_head_1[0] ? w_q_1_0_data_51 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_51 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_51 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_116 = (w_q_head_1[0] ? w_q_1_0_data_52 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_52 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_52 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_117 = (w_q_head_1[0] ? w_q_1_0_data_53 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_53 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_53 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_118 = (w_q_head_1[0] ? w_q_1_0_data_54 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_54 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_54 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_119 = (w_q_head_1[0] ? w_q_1_0_data_55 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_55 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_55 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_120 = (w_q_head_1[0] ? w_q_1_0_data_56 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_56 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_56 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_121 = (w_q_head_1[0] ? w_q_1_0_data_57 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_57 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_57 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_122 = (w_q_head_1[0] ? w_q_1_0_data_58 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_58 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_58 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_123 = (w_q_head_1[0] ? w_q_1_0_data_59 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_59 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_59 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_124 = (w_q_head_1[0] ? w_q_1_0_data_60 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_60 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_60 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_125 = (w_q_head_1[0] ? w_q_1_0_data_61 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_61 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_61 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_126 = (w_q_head_1[0] ? w_q_1_0_data_62 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_62 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_62 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wdata_WIRE_127 = (w_q_head_1[0] ? w_q_1_0_data_63 : 8'h0) | (w_q_head_1[1] ? w_q_1_1_data_63 : 8'h0) | (w_q_head_1[2] ? w_q_1_2_data_63 : 8'h0);	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_64 = w_q_head_1[0] & w_q_1_0_mask_0 | w_q_head_1[1] & w_q_1_1_mask_0 | w_q_head_1[2] & w_q_1_2_mask_0;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_65 = w_q_head_1[0] & w_q_1_0_mask_1 | w_q_head_1[1] & w_q_1_1_mask_1 | w_q_head_1[2] & w_q_1_2_mask_1;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_66 = w_q_head_1[0] & w_q_1_0_mask_2 | w_q_head_1[1] & w_q_1_1_mask_2 | w_q_head_1[2] & w_q_1_2_mask_2;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_67 = w_q_head_1[0] & w_q_1_0_mask_3 | w_q_head_1[1] & w_q_1_1_mask_3 | w_q_head_1[2] & w_q_1_2_mask_3;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_68 = w_q_head_1[0] & w_q_1_0_mask_4 | w_q_head_1[1] & w_q_1_1_mask_4 | w_q_head_1[2] & w_q_1_2_mask_4;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_69 = w_q_head_1[0] & w_q_1_0_mask_5 | w_q_head_1[1] & w_q_1_1_mask_5 | w_q_head_1[2] & w_q_1_2_mask_5;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_70 = w_q_head_1[0] & w_q_1_0_mask_6 | w_q_head_1[1] & w_q_1_1_mask_6 | w_q_head_1[2] & w_q_1_2_mask_6;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_71 = w_q_head_1[0] & w_q_1_0_mask_7 | w_q_head_1[1] & w_q_1_1_mask_7 | w_q_head_1[2] & w_q_1_2_mask_7;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_72 = w_q_head_1[0] & w_q_1_0_mask_8 | w_q_head_1[1] & w_q_1_1_mask_8 | w_q_head_1[2] & w_q_1_2_mask_8;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_73 = w_q_head_1[0] & w_q_1_0_mask_9 | w_q_head_1[1] & w_q_1_1_mask_9 | w_q_head_1[2] & w_q_1_2_mask_9;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_74 = w_q_head_1[0] & w_q_1_0_mask_10 | w_q_head_1[1] & w_q_1_1_mask_10 | w_q_head_1[2] & w_q_1_2_mask_10;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_75 = w_q_head_1[0] & w_q_1_0_mask_11 | w_q_head_1[1] & w_q_1_1_mask_11 | w_q_head_1[2] & w_q_1_2_mask_11;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_76 = w_q_head_1[0] & w_q_1_0_mask_12 | w_q_head_1[1] & w_q_1_1_mask_12 | w_q_head_1[2] & w_q_1_2_mask_12;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_77 = w_q_head_1[0] & w_q_1_0_mask_13 | w_q_head_1[1] & w_q_1_1_mask_13 | w_q_head_1[2] & w_q_1_2_mask_13;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_78 = w_q_head_1[0] & w_q_1_0_mask_14 | w_q_head_1[1] & w_q_1_1_mask_14 | w_q_head_1[2] & w_q_1_2_mask_14;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_79 = w_q_head_1[0] & w_q_1_0_mask_15 | w_q_head_1[1] & w_q_1_1_mask_15 | w_q_head_1[2] & w_q_1_2_mask_15;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_80 = w_q_head_1[0] & w_q_1_0_mask_16 | w_q_head_1[1] & w_q_1_1_mask_16 | w_q_head_1[2] & w_q_1_2_mask_16;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_81 = w_q_head_1[0] & w_q_1_0_mask_17 | w_q_head_1[1] & w_q_1_1_mask_17 | w_q_head_1[2] & w_q_1_2_mask_17;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_82 = w_q_head_1[0] & w_q_1_0_mask_18 | w_q_head_1[1] & w_q_1_1_mask_18 | w_q_head_1[2] & w_q_1_2_mask_18;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_83 = w_q_head_1[0] & w_q_1_0_mask_19 | w_q_head_1[1] & w_q_1_1_mask_19 | w_q_head_1[2] & w_q_1_2_mask_19;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_84 = w_q_head_1[0] & w_q_1_0_mask_20 | w_q_head_1[1] & w_q_1_1_mask_20 | w_q_head_1[2] & w_q_1_2_mask_20;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_85 = w_q_head_1[0] & w_q_1_0_mask_21 | w_q_head_1[1] & w_q_1_1_mask_21 | w_q_head_1[2] & w_q_1_2_mask_21;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_86 = w_q_head_1[0] & w_q_1_0_mask_22 | w_q_head_1[1] & w_q_1_1_mask_22 | w_q_head_1[2] & w_q_1_2_mask_22;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_87 = w_q_head_1[0] & w_q_1_0_mask_23 | w_q_head_1[1] & w_q_1_1_mask_23 | w_q_head_1[2] & w_q_1_2_mask_23;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_88 = w_q_head_1[0] & w_q_1_0_mask_24 | w_q_head_1[1] & w_q_1_1_mask_24 | w_q_head_1[2] & w_q_1_2_mask_24;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_89 = w_q_head_1[0] & w_q_1_0_mask_25 | w_q_head_1[1] & w_q_1_1_mask_25 | w_q_head_1[2] & w_q_1_2_mask_25;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_90 = w_q_head_1[0] & w_q_1_0_mask_26 | w_q_head_1[1] & w_q_1_1_mask_26 | w_q_head_1[2] & w_q_1_2_mask_26;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_91 = w_q_head_1[0] & w_q_1_0_mask_27 | w_q_head_1[1] & w_q_1_1_mask_27 | w_q_head_1[2] & w_q_1_2_mask_27;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_92 = w_q_head_1[0] & w_q_1_0_mask_28 | w_q_head_1[1] & w_q_1_1_mask_28 | w_q_head_1[2] & w_q_1_2_mask_28;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_93 = w_q_head_1[0] & w_q_1_0_mask_29 | w_q_head_1[1] & w_q_1_1_mask_29 | w_q_head_1[2] & w_q_1_2_mask_29;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_94 = w_q_head_1[0] & w_q_1_0_mask_30 | w_q_head_1[1] & w_q_1_1_mask_30 | w_q_head_1[2] & w_q_1_2_mask_30;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_95 = w_q_head_1[0] & w_q_1_0_mask_31 | w_q_head_1[1] & w_q_1_1_mask_31 | w_q_head_1[2] & w_q_1_2_mask_31;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_96 = w_q_head_1[0] & w_q_1_0_mask_32 | w_q_head_1[1] & w_q_1_1_mask_32 | w_q_head_1[2] & w_q_1_2_mask_32;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_97 = w_q_head_1[0] & w_q_1_0_mask_33 | w_q_head_1[1] & w_q_1_1_mask_33 | w_q_head_1[2] & w_q_1_2_mask_33;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_98 = w_q_head_1[0] & w_q_1_0_mask_34 | w_q_head_1[1] & w_q_1_1_mask_34 | w_q_head_1[2] & w_q_1_2_mask_34;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_99 = w_q_head_1[0] & w_q_1_0_mask_35 | w_q_head_1[1] & w_q_1_1_mask_35 | w_q_head_1[2] & w_q_1_2_mask_35;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_100 = w_q_head_1[0] & w_q_1_0_mask_36 | w_q_head_1[1] & w_q_1_1_mask_36 | w_q_head_1[2] & w_q_1_2_mask_36;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_101 = w_q_head_1[0] & w_q_1_0_mask_37 | w_q_head_1[1] & w_q_1_1_mask_37 | w_q_head_1[2] & w_q_1_2_mask_37;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_102 = w_q_head_1[0] & w_q_1_0_mask_38 | w_q_head_1[1] & w_q_1_1_mask_38 | w_q_head_1[2] & w_q_1_2_mask_38;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_103 = w_q_head_1[0] & w_q_1_0_mask_39 | w_q_head_1[1] & w_q_1_1_mask_39 | w_q_head_1[2] & w_q_1_2_mask_39;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_104 = w_q_head_1[0] & w_q_1_0_mask_40 | w_q_head_1[1] & w_q_1_1_mask_40 | w_q_head_1[2] & w_q_1_2_mask_40;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_105 = w_q_head_1[0] & w_q_1_0_mask_41 | w_q_head_1[1] & w_q_1_1_mask_41 | w_q_head_1[2] & w_q_1_2_mask_41;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_106 = w_q_head_1[0] & w_q_1_0_mask_42 | w_q_head_1[1] & w_q_1_1_mask_42 | w_q_head_1[2] & w_q_1_2_mask_42;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_107 = w_q_head_1[0] & w_q_1_0_mask_43 | w_q_head_1[1] & w_q_1_1_mask_43 | w_q_head_1[2] & w_q_1_2_mask_43;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_108 = w_q_head_1[0] & w_q_1_0_mask_44 | w_q_head_1[1] & w_q_1_1_mask_44 | w_q_head_1[2] & w_q_1_2_mask_44;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_109 = w_q_head_1[0] & w_q_1_0_mask_45 | w_q_head_1[1] & w_q_1_1_mask_45 | w_q_head_1[2] & w_q_1_2_mask_45;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_110 = w_q_head_1[0] & w_q_1_0_mask_46 | w_q_head_1[1] & w_q_1_1_mask_46 | w_q_head_1[2] & w_q_1_2_mask_46;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_111 = w_q_head_1[0] & w_q_1_0_mask_47 | w_q_head_1[1] & w_q_1_1_mask_47 | w_q_head_1[2] & w_q_1_2_mask_47;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_112 = w_q_head_1[0] & w_q_1_0_mask_48 | w_q_head_1[1] & w_q_1_1_mask_48 | w_q_head_1[2] & w_q_1_2_mask_48;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_113 = w_q_head_1[0] & w_q_1_0_mask_49 | w_q_head_1[1] & w_q_1_1_mask_49 | w_q_head_1[2] & w_q_1_2_mask_49;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_114 = w_q_head_1[0] & w_q_1_0_mask_50 | w_q_head_1[1] & w_q_1_1_mask_50 | w_q_head_1[2] & w_q_1_2_mask_50;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_115 = w_q_head_1[0] & w_q_1_0_mask_51 | w_q_head_1[1] & w_q_1_1_mask_51 | w_q_head_1[2] & w_q_1_2_mask_51;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_116 = w_q_head_1[0] & w_q_1_0_mask_52 | w_q_head_1[1] & w_q_1_1_mask_52 | w_q_head_1[2] & w_q_1_2_mask_52;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_117 = w_q_head_1[0] & w_q_1_0_mask_53 | w_q_head_1[1] & w_q_1_1_mask_53 | w_q_head_1[2] & w_q_1_2_mask_53;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_118 = w_q_head_1[0] & w_q_1_0_mask_54 | w_q_head_1[1] & w_q_1_1_mask_54 | w_q_head_1[2] & w_q_1_2_mask_54;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_119 = w_q_head_1[0] & w_q_1_0_mask_55 | w_q_head_1[1] & w_q_1_1_mask_55 | w_q_head_1[2] & w_q_1_2_mask_55;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_120 = w_q_head_1[0] & w_q_1_0_mask_56 | w_q_head_1[1] & w_q_1_1_mask_56 | w_q_head_1[2] & w_q_1_2_mask_56;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_121 = w_q_head_1[0] & w_q_1_0_mask_57 | w_q_head_1[1] & w_q_1_1_mask_57 | w_q_head_1[2] & w_q_1_2_mask_57;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_122 = w_q_head_1[0] & w_q_1_0_mask_58 | w_q_head_1[1] & w_q_1_1_mask_58 | w_q_head_1[2] & w_q_1_2_mask_58;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_123 = w_q_head_1[0] & w_q_1_0_mask_59 | w_q_head_1[1] & w_q_1_1_mask_59 | w_q_head_1[2] & w_q_1_2_mask_59;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_124 = w_q_head_1[0] & w_q_1_0_mask_60 | w_q_head_1[1] & w_q_1_1_mask_60 | w_q_head_1[2] & w_q_1_2_mask_60;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_125 = w_q_head_1[0] & w_q_1_0_mask_61 | w_q_head_1[1] & w_q_1_1_mask_61 | w_q_head_1[2] & w_q_1_2_mask_61;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_126 = w_q_head_1[0] & w_q_1_0_mask_62 | w_q_head_1[1] & w_q_1_1_mask_62 | w_q_head_1[2] & w_q_1_2_mask_62;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign _wmask_WIRE_127 = w_q_head_1[0] & w_q_1_0_mask_63 | w_q_head_1[1] & w_q_1_1_mask_63 | w_q_head_1[2] & w_q_1_2_mask_63;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, Mux.scala:27:73]
  assign waddr_1 = (w_q_head_1[0] ? w_q_1_0_addr : 7'h0) | (w_q_head_1[1] ? w_q_1_1_addr : 7'h0) | (w_q_head_1[2] ? w_q_1_2_addr : 7'h0);	// @[AccumulatorMem.scala:185:57, :203:20, :222:29, :226:34, Mux.scala:27:73]
  wire         w_q_push_1 = pipelined_writes_1_valid & pipelined_writes_1_bits_addr[0];	// @[AccumulatorMem.scala:113:29, :164:40, :241:51]
  assign mem_1_bank_rdata_MPORT_1_en = ren_1 & ~wen_1;	// @[AccumulatorMem.scala:228:25, :257:{40,43}, :273:55, :274:13, :278:32]
  reg          REG_2;	// @[AccumulatorMem.scala:258:20]
  reg          REG_3;	// @[AccumulatorMem.scala:260:27]
  wire         _GEN_11 = REG_2 | ~REG_3;	// @[AccumulatorMem.scala:258:{20,72}, :260:{27,34}]
  wire         _T_703 = _T_700 & io_write_bits_addr[0];	// @[AccumulatorMem.scala:164:40, :273:26, Decoupled.scala:51:35]
  assign wen_1 = ~_T_703 & _w_q_empty_T_15;	// @[AccumulatorMem.scala:226:102, :228:25, :273:{26,55}, :278:32]
  assign only_read_req_ready = _T_703 ? ~(io_read_req_bits_addr[0] | _GEN_10) & _GEN_9 : _w_q_empty_T_15 ? ~(io_read_req_bits_addr[0] | _GEN_10) & _GEN_9 : ~_GEN_10 & _GEN_9;	// @[AccumulatorMem.scala:164:40, :205:24, :216:100, :217:33, :226:102, :273:{26,55}, :275:47, :276:31, :278:32, :280:47, :281:31]
  assign ren_1 = _T_703 | ~_w_q_empty_T_15 & io_read_req_bits_addr[0] & only_read_req_ready & io_read_req_valid;	// @[AccumulatorMem.scala:164:40, :190:25, :226:102, :273:{26,55}, :274:13, :275:47, :278:32, :284:13]
  assign _bank_rdata_T_40 = _T_703 | _w_q_empty_T_15 ? io_write_bits_addr[7:1] : io_read_req_bits_addr[7:1];	// @[AccumulatorMem.scala:165:41, :191:27, :226:102, :273:{26,55}, :278:32, :285:15]
  reg  [31:0]  q_io_enq_bits_scale_REG_bits;	// @[AccumulatorMem.scala:302:33]
  reg  [31:0]  q_io_enq_bits_igelu_qb_REG;	// @[AccumulatorMem.scala:303:36]
  reg  [31:0]  q_io_enq_bits_igelu_qc_REG;	// @[AccumulatorMem.scala:304:36]
  reg  [31:0]  q_io_enq_bits_iexp_qln2_REG;	// @[AccumulatorMem.scala:305:37]
  reg  [31:0]  q_io_enq_bits_iexp_qln2_inv_REG;	// @[AccumulatorMem.scala:306:41]
  reg  [2:0]   q_io_enq_bits_act_REG;	// @[AccumulatorMem.scala:307:31]
  wire         _T_711 = _io_read_req_ready_output & io_read_req_valid;	// @[AccumulatorMem.scala:327:40, Decoupled.scala:51:35]
  reg          q_io_enq_valid_REG;	// @[AccumulatorMem.scala:310:28]
  assign _io_read_req_ready_output = {1'h0, _q_io_count} + {1'h0, _q_io_enq_ready & q_io_enq_valid_REG} - {1'h0, io_read_resp_ready & _q_io_deq_valid} == 2'h0 & ~rmw_req_valid & ~(pipelined_writes_0_valid & pipelined_writes_0_bits_addr == io_read_req_bits_addr | pipelined_writes_1_valid & pipelined_writes_1_bits_addr == io_read_req_bits_addr) & only_read_req_ready;	// @[AccumulatorMem.scala:113:29, :150:37, :273:55, :275:47, :278:32, :294:17, :310:28, :326:{37,55,71}, :327:40, :329:7, :330:{7,42,57,92}, Decoupled.scala:51:35]
  assign _io_write_ready_output = rmw_req_ready & ~(pipelined_writes_0_valid & pipelined_writes_0_bits_addr == io_write_bits_addr & io_write_bits_acc | pipelined_writes_1_valid & pipelined_writes_1_bits_addr == io_write_bits_addr & io_write_bits_acc);	// @[AccumulatorMem.scala:113:29, :205:24, :212:115, :334:38, :335:{5,55,78,108}]
  wire [31:0]  _T_93_0_0 = pipelined_writes_1_bits_acc ? io_adder_sum_0_0 : pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_1_0 = pipelined_writes_1_bits_acc ? io_adder_sum_1_0 : pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_2_0 = pipelined_writes_1_bits_acc ? io_adder_sum_2_0 : pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_3_0 = pipelined_writes_1_bits_acc ? io_adder_sum_3_0 : pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_4_0 = pipelined_writes_1_bits_acc ? io_adder_sum_4_0 : pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_5_0 = pipelined_writes_1_bits_acc ? io_adder_sum_5_0 : pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_6_0 = pipelined_writes_1_bits_acc ? io_adder_sum_6_0 : pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_7_0 = pipelined_writes_1_bits_acc ? io_adder_sum_7_0 : pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_8_0 = pipelined_writes_1_bits_acc ? io_adder_sum_8_0 : pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_9_0 = pipelined_writes_1_bits_acc ? io_adder_sum_9_0 : pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_10_0 = pipelined_writes_1_bits_acc ? io_adder_sum_10_0 : pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_11_0 = pipelined_writes_1_bits_acc ? io_adder_sum_11_0 : pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_12_0 = pipelined_writes_1_bits_acc ? io_adder_sum_12_0 : pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_13_0 = pipelined_writes_1_bits_acc ? io_adder_sum_13_0 : pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_14_0 = pipelined_writes_1_bits_acc ? io_adder_sum_14_0 : pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_93_15_0 = pipelined_writes_1_bits_acc ? io_adder_sum_15_0 : pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_0_0 = pipelined_writes_1_bits_acc ? io_adder_sum_0_0 : pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_1_0 = pipelined_writes_1_bits_acc ? io_adder_sum_1_0 : pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_2_0 = pipelined_writes_1_bits_acc ? io_adder_sum_2_0 : pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_3_0 = pipelined_writes_1_bits_acc ? io_adder_sum_3_0 : pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_4_0 = pipelined_writes_1_bits_acc ? io_adder_sum_4_0 : pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_5_0 = pipelined_writes_1_bits_acc ? io_adder_sum_5_0 : pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_6_0 = pipelined_writes_1_bits_acc ? io_adder_sum_6_0 : pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_7_0 = pipelined_writes_1_bits_acc ? io_adder_sum_7_0 : pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_8_0 = pipelined_writes_1_bits_acc ? io_adder_sum_8_0 : pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_9_0 = pipelined_writes_1_bits_acc ? io_adder_sum_9_0 : pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_10_0 = pipelined_writes_1_bits_acc ? io_adder_sum_10_0 : pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_11_0 = pipelined_writes_1_bits_acc ? io_adder_sum_11_0 : pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_12_0 = pipelined_writes_1_bits_acc ? io_adder_sum_12_0 : pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_13_0 = pipelined_writes_1_bits_acc ? io_adder_sum_13_0 : pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_14_0 = pipelined_writes_1_bits_acc ? io_adder_sum_14_0 : pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_176_15_0 = pipelined_writes_1_bits_acc ? io_adder_sum_15_0 : pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_0_0 = pipelined_writes_1_bits_acc ? io_adder_sum_0_0 : pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_1_0 = pipelined_writes_1_bits_acc ? io_adder_sum_1_0 : pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_2_0 = pipelined_writes_1_bits_acc ? io_adder_sum_2_0 : pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_3_0 = pipelined_writes_1_bits_acc ? io_adder_sum_3_0 : pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_4_0 = pipelined_writes_1_bits_acc ? io_adder_sum_4_0 : pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_5_0 = pipelined_writes_1_bits_acc ? io_adder_sum_5_0 : pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_6_0 = pipelined_writes_1_bits_acc ? io_adder_sum_6_0 : pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_7_0 = pipelined_writes_1_bits_acc ? io_adder_sum_7_0 : pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_8_0 = pipelined_writes_1_bits_acc ? io_adder_sum_8_0 : pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_9_0 = pipelined_writes_1_bits_acc ? io_adder_sum_9_0 : pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_10_0 = pipelined_writes_1_bits_acc ? io_adder_sum_10_0 : pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_11_0 = pipelined_writes_1_bits_acc ? io_adder_sum_11_0 : pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_12_0 = pipelined_writes_1_bits_acc ? io_adder_sum_12_0 : pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_13_0 = pipelined_writes_1_bits_acc ? io_adder_sum_13_0 : pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_14_0 = pipelined_writes_1_bits_acc ? io_adder_sum_14_0 : pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_259_15_0 = pipelined_writes_1_bits_acc ? io_adder_sum_15_0 : pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_0_0 = pipelined_writes_1_bits_acc ? io_adder_sum_0_0 : pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_1_0 = pipelined_writes_1_bits_acc ? io_adder_sum_1_0 : pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_2_0 = pipelined_writes_1_bits_acc ? io_adder_sum_2_0 : pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_3_0 = pipelined_writes_1_bits_acc ? io_adder_sum_3_0 : pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_4_0 = pipelined_writes_1_bits_acc ? io_adder_sum_4_0 : pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_5_0 = pipelined_writes_1_bits_acc ? io_adder_sum_5_0 : pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_6_0 = pipelined_writes_1_bits_acc ? io_adder_sum_6_0 : pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_7_0 = pipelined_writes_1_bits_acc ? io_adder_sum_7_0 : pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_8_0 = pipelined_writes_1_bits_acc ? io_adder_sum_8_0 : pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_9_0 = pipelined_writes_1_bits_acc ? io_adder_sum_9_0 : pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_10_0 = pipelined_writes_1_bits_acc ? io_adder_sum_10_0 : pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_11_0 = pipelined_writes_1_bits_acc ? io_adder_sum_11_0 : pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_12_0 = pipelined_writes_1_bits_acc ? io_adder_sum_12_0 : pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_13_0 = pipelined_writes_1_bits_acc ? io_adder_sum_13_0 : pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_14_0 = pipelined_writes_1_bits_acc ? io_adder_sum_14_0 : pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_448_15_0 = pipelined_writes_1_bits_acc ? io_adder_sum_15_0 : pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_0_0 = pipelined_writes_1_bits_acc ? io_adder_sum_0_0 : pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_1_0 = pipelined_writes_1_bits_acc ? io_adder_sum_1_0 : pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_2_0 = pipelined_writes_1_bits_acc ? io_adder_sum_2_0 : pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_3_0 = pipelined_writes_1_bits_acc ? io_adder_sum_3_0 : pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_4_0 = pipelined_writes_1_bits_acc ? io_adder_sum_4_0 : pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_5_0 = pipelined_writes_1_bits_acc ? io_adder_sum_5_0 : pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_6_0 = pipelined_writes_1_bits_acc ? io_adder_sum_6_0 : pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_7_0 = pipelined_writes_1_bits_acc ? io_adder_sum_7_0 : pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_8_0 = pipelined_writes_1_bits_acc ? io_adder_sum_8_0 : pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_9_0 = pipelined_writes_1_bits_acc ? io_adder_sum_9_0 : pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_10_0 = pipelined_writes_1_bits_acc ? io_adder_sum_10_0 : pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_11_0 = pipelined_writes_1_bits_acc ? io_adder_sum_11_0 : pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_12_0 = pipelined_writes_1_bits_acc ? io_adder_sum_12_0 : pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_13_0 = pipelined_writes_1_bits_acc ? io_adder_sum_13_0 : pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_14_0 = pipelined_writes_1_bits_acc ? io_adder_sum_14_0 : pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_531_15_0 = pipelined_writes_1_bits_acc ? io_adder_sum_15_0 : pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_0_0 = pipelined_writes_1_bits_acc ? io_adder_sum_0_0 : pipelined_writes_1_bits_data_0_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_1_0 = pipelined_writes_1_bits_acc ? io_adder_sum_1_0 : pipelined_writes_1_bits_data_1_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_2_0 = pipelined_writes_1_bits_acc ? io_adder_sum_2_0 : pipelined_writes_1_bits_data_2_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_3_0 = pipelined_writes_1_bits_acc ? io_adder_sum_3_0 : pipelined_writes_1_bits_data_3_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_4_0 = pipelined_writes_1_bits_acc ? io_adder_sum_4_0 : pipelined_writes_1_bits_data_4_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_5_0 = pipelined_writes_1_bits_acc ? io_adder_sum_5_0 : pipelined_writes_1_bits_data_5_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_6_0 = pipelined_writes_1_bits_acc ? io_adder_sum_6_0 : pipelined_writes_1_bits_data_6_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_7_0 = pipelined_writes_1_bits_acc ? io_adder_sum_7_0 : pipelined_writes_1_bits_data_7_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_8_0 = pipelined_writes_1_bits_acc ? io_adder_sum_8_0 : pipelined_writes_1_bits_data_8_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_9_0 = pipelined_writes_1_bits_acc ? io_adder_sum_9_0 : pipelined_writes_1_bits_data_9_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_10_0 = pipelined_writes_1_bits_acc ? io_adder_sum_10_0 : pipelined_writes_1_bits_data_10_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_11_0 = pipelined_writes_1_bits_acc ? io_adder_sum_11_0 : pipelined_writes_1_bits_data_11_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_12_0 = pipelined_writes_1_bits_acc ? io_adder_sum_12_0 : pipelined_writes_1_bits_data_12_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_13_0 = pipelined_writes_1_bits_acc ? io_adder_sum_13_0 : pipelined_writes_1_bits_data_13_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_14_0 = pipelined_writes_1_bits_acc ? io_adder_sum_14_0 : pipelined_writes_1_bits_data_14_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire [31:0]  _T_614_15_0 = pipelined_writes_1_bits_acc ? io_adder_sum_15_0 : pipelined_writes_1_bits_data_15_0;	// @[AccumulatorMem.scala:113:29, :250:32]
  wire         _GEN_12 = w_q_push & w_q_tail[0];	// @[AccumulatorMem.scala:223:29, :225:32, :232:18, :241:51, :243:23, :248:30, :249:26]
  wire         _GEN_13 = w_q_push & w_q_tail[1];	// @[AccumulatorMem.scala:223:29, :225:32, :232:18, :241:51, :243:23, :248:30, :249:26]
  wire         _GEN_14 = w_q_push & w_q_tail[2];	// @[AccumulatorMem.scala:223:29, :225:32, :232:18, :241:51, :243:23, :248:30, :249:26]
  wire         _GEN_15 = w_q_push_1 & w_q_tail_1[0];	// @[AccumulatorMem.scala:223:29, :225:32, :232:18, :241:51, :243:23, :248:30, :249:26]
  wire         _GEN_16 = w_q_push_1 & w_q_tail_1[1];	// @[AccumulatorMem.scala:223:29, :225:32, :232:18, :241:51, :243:23, :248:30, :249:26]
  wire         _GEN_17 = w_q_push_1 & w_q_tail_1[2];	// @[AccumulatorMem.scala:223:29, :225:32, :232:18, :241:51, :243:23, :248:30, :249:26]
  always @(posedge clock) begin
    if (reset) begin
      pipelined_writes_0_valid <= 1'h0;	// @[AccumulatorMem.scala:113:29]
      pipelined_writes_1_valid <= 1'h0;	// @[AccumulatorMem.scala:113:29]
      w_q_0_valid <= 1'h0;	// @[AccumulatorMem.scala:203:20]
      w_q_1_valid <= 1'h0;	// @[AccumulatorMem.scala:203:20]
      w_q_2_valid <= 1'h0;	// @[AccumulatorMem.scala:203:20]
      w_q_head <= 3'h1;	// @[AccumulatorMem.scala:222:29]
      w_q_tail <= 3'h1;	// @[AccumulatorMem.scala:222:29, :223:29]
      w_q_1_0_valid <= 1'h0;	// @[AccumulatorMem.scala:203:20]
      w_q_1_1_valid <= 1'h0;	// @[AccumulatorMem.scala:203:20]
      w_q_1_2_valid <= 1'h0;	// @[AccumulatorMem.scala:203:20]
      w_q_head_1 <= 3'h1;	// @[AccumulatorMem.scala:222:29]
      w_q_tail_1 <= 3'h1;	// @[AccumulatorMem.scala:222:29, :223:29]
    end
    else begin
      pipelined_writes_0_valid <= _T_712;	// @[AccumulatorMem.scala:113:29, Decoupled.scala:51:35]
      pipelined_writes_1_valid <= pipelined_writes_0_valid;	// @[AccumulatorMem.scala:113:29]
      w_q_0_valid <= _GEN_12 | ~(wen & w_q_head[0]) & w_q_0_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, :228:25, :232:18, :235:30, :236:26, :243:23, :248:30, :249:26, :273:55, :278:32]
      w_q_1_valid <= _GEN_13 | ~(wen & w_q_head[1]) & w_q_1_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, :228:25, :232:18, :235:30, :236:26, :243:23, :248:30, :249:26, :273:55, :278:32]
      w_q_2_valid <= _GEN_14 | ~(wen & w_q_head[2]) & w_q_2_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, :228:25, :232:18, :235:30, :236:26, :243:23, :248:30, :249:26, :273:55, :278:32]
      if (wen)	// @[AccumulatorMem.scala:228:25, :273:55, :278:32]
        w_q_head <= {w_q_head[1:0], w_q_head[2]};	// @[AccumulatorMem.scala:222:29, :226:34, :233:18]
      if (w_q_push)	// @[AccumulatorMem.scala:241:51]
        w_q_tail <= {w_q_tail[1:0], w_q_tail[2]};	// @[AccumulatorMem.scala:223:29, :225:32, :246:18]
      w_q_1_0_valid <= _GEN_15 | ~(wen_1 & w_q_head_1[0]) & w_q_1_0_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, :228:25, :232:18, :235:30, :236:26, :243:23, :248:30, :249:26, :273:55, :278:32]
      w_q_1_1_valid <= _GEN_16 | ~(wen_1 & w_q_head_1[1]) & w_q_1_1_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, :228:25, :232:18, :235:30, :236:26, :243:23, :248:30, :249:26, :273:55, :278:32]
      w_q_1_2_valid <= _GEN_17 | ~(wen_1 & w_q_head_1[2]) & w_q_1_2_valid;	// @[AccumulatorMem.scala:203:20, :222:29, :226:34, :228:25, :232:18, :235:30, :236:26, :243:23, :248:30, :249:26, :273:55, :278:32]
      if (wen_1)	// @[AccumulatorMem.scala:228:25, :273:55, :278:32]
        w_q_head_1 <= {w_q_head_1[1:0], w_q_head_1[2]};	// @[AccumulatorMem.scala:222:29, :226:34, :233:18]
      if (w_q_push_1)	// @[AccumulatorMem.scala:241:51]
        w_q_tail_1 <= {w_q_tail_1[1:0], w_q_tail_1[2]};	// @[AccumulatorMem.scala:223:29, :225:32, :246:18]
    end
    pipelined_writes_0_bits_addr <= io_write_bits_addr;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_0_0 <= io_write_bits_data_0_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_1_0 <= io_write_bits_data_1_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_2_0 <= io_write_bits_data_2_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_3_0 <= io_write_bits_data_3_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_4_0 <= io_write_bits_data_4_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_5_0 <= io_write_bits_data_5_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_6_0 <= io_write_bits_data_6_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_7_0 <= io_write_bits_data_7_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_8_0 <= io_write_bits_data_8_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_9_0 <= io_write_bits_data_9_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_10_0 <= io_write_bits_data_10_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_11_0 <= io_write_bits_data_11_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_12_0 <= io_write_bits_data_12_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_13_0 <= io_write_bits_data_13_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_14_0 <= io_write_bits_data_14_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_data_15_0 <= io_write_bits_data_15_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_acc <= io_write_bits_acc;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_0 <= io_write_bits_mask_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_1 <= io_write_bits_mask_1;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_2 <= io_write_bits_mask_2;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_3 <= io_write_bits_mask_3;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_4 <= io_write_bits_mask_4;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_5 <= io_write_bits_mask_5;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_6 <= io_write_bits_mask_6;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_7 <= io_write_bits_mask_7;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_8 <= io_write_bits_mask_8;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_9 <= io_write_bits_mask_9;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_10 <= io_write_bits_mask_10;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_11 <= io_write_bits_mask_11;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_12 <= io_write_bits_mask_12;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_13 <= io_write_bits_mask_13;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_14 <= io_write_bits_mask_14;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_15 <= io_write_bits_mask_15;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_16 <= io_write_bits_mask_16;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_17 <= io_write_bits_mask_17;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_18 <= io_write_bits_mask_18;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_19 <= io_write_bits_mask_19;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_20 <= io_write_bits_mask_20;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_21 <= io_write_bits_mask_21;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_22 <= io_write_bits_mask_22;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_23 <= io_write_bits_mask_23;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_24 <= io_write_bits_mask_24;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_25 <= io_write_bits_mask_25;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_26 <= io_write_bits_mask_26;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_27 <= io_write_bits_mask_27;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_28 <= io_write_bits_mask_28;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_29 <= io_write_bits_mask_29;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_30 <= io_write_bits_mask_30;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_31 <= io_write_bits_mask_31;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_32 <= io_write_bits_mask_32;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_33 <= io_write_bits_mask_33;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_34 <= io_write_bits_mask_34;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_35 <= io_write_bits_mask_35;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_36 <= io_write_bits_mask_36;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_37 <= io_write_bits_mask_37;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_38 <= io_write_bits_mask_38;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_39 <= io_write_bits_mask_39;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_40 <= io_write_bits_mask_40;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_41 <= io_write_bits_mask_41;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_42 <= io_write_bits_mask_42;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_43 <= io_write_bits_mask_43;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_44 <= io_write_bits_mask_44;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_45 <= io_write_bits_mask_45;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_46 <= io_write_bits_mask_46;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_47 <= io_write_bits_mask_47;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_48 <= io_write_bits_mask_48;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_49 <= io_write_bits_mask_49;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_50 <= io_write_bits_mask_50;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_51 <= io_write_bits_mask_51;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_52 <= io_write_bits_mask_52;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_53 <= io_write_bits_mask_53;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_54 <= io_write_bits_mask_54;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_55 <= io_write_bits_mask_55;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_56 <= io_write_bits_mask_56;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_57 <= io_write_bits_mask_57;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_58 <= io_write_bits_mask_58;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_59 <= io_write_bits_mask_59;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_60 <= io_write_bits_mask_60;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_61 <= io_write_bits_mask_61;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_62 <= io_write_bits_mask_62;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_0_bits_mask_63 <= io_write_bits_mask_63;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_addr <= pipelined_writes_0_bits_addr;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_0_0 <= pipelined_writes_0_bits_data_0_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_1_0 <= pipelined_writes_0_bits_data_1_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_2_0 <= pipelined_writes_0_bits_data_2_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_3_0 <= pipelined_writes_0_bits_data_3_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_4_0 <= pipelined_writes_0_bits_data_4_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_5_0 <= pipelined_writes_0_bits_data_5_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_6_0 <= pipelined_writes_0_bits_data_6_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_7_0 <= pipelined_writes_0_bits_data_7_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_8_0 <= pipelined_writes_0_bits_data_8_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_9_0 <= pipelined_writes_0_bits_data_9_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_10_0 <= pipelined_writes_0_bits_data_10_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_11_0 <= pipelined_writes_0_bits_data_11_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_12_0 <= pipelined_writes_0_bits_data_12_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_13_0 <= pipelined_writes_0_bits_data_13_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_14_0 <= pipelined_writes_0_bits_data_14_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_data_15_0 <= pipelined_writes_0_bits_data_15_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_acc <= pipelined_writes_0_bits_acc;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_0 <= pipelined_writes_0_bits_mask_0;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_1 <= pipelined_writes_0_bits_mask_1;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_2 <= pipelined_writes_0_bits_mask_2;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_3 <= pipelined_writes_0_bits_mask_3;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_4 <= pipelined_writes_0_bits_mask_4;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_5 <= pipelined_writes_0_bits_mask_5;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_6 <= pipelined_writes_0_bits_mask_6;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_7 <= pipelined_writes_0_bits_mask_7;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_8 <= pipelined_writes_0_bits_mask_8;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_9 <= pipelined_writes_0_bits_mask_9;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_10 <= pipelined_writes_0_bits_mask_10;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_11 <= pipelined_writes_0_bits_mask_11;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_12 <= pipelined_writes_0_bits_mask_12;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_13 <= pipelined_writes_0_bits_mask_13;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_14 <= pipelined_writes_0_bits_mask_14;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_15 <= pipelined_writes_0_bits_mask_15;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_16 <= pipelined_writes_0_bits_mask_16;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_17 <= pipelined_writes_0_bits_mask_17;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_18 <= pipelined_writes_0_bits_mask_18;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_19 <= pipelined_writes_0_bits_mask_19;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_20 <= pipelined_writes_0_bits_mask_20;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_21 <= pipelined_writes_0_bits_mask_21;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_22 <= pipelined_writes_0_bits_mask_22;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_23 <= pipelined_writes_0_bits_mask_23;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_24 <= pipelined_writes_0_bits_mask_24;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_25 <= pipelined_writes_0_bits_mask_25;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_26 <= pipelined_writes_0_bits_mask_26;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_27 <= pipelined_writes_0_bits_mask_27;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_28 <= pipelined_writes_0_bits_mask_28;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_29 <= pipelined_writes_0_bits_mask_29;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_30 <= pipelined_writes_0_bits_mask_30;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_31 <= pipelined_writes_0_bits_mask_31;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_32 <= pipelined_writes_0_bits_mask_32;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_33 <= pipelined_writes_0_bits_mask_33;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_34 <= pipelined_writes_0_bits_mask_34;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_35 <= pipelined_writes_0_bits_mask_35;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_36 <= pipelined_writes_0_bits_mask_36;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_37 <= pipelined_writes_0_bits_mask_37;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_38 <= pipelined_writes_0_bits_mask_38;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_39 <= pipelined_writes_0_bits_mask_39;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_40 <= pipelined_writes_0_bits_mask_40;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_41 <= pipelined_writes_0_bits_mask_41;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_42 <= pipelined_writes_0_bits_mask_42;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_43 <= pipelined_writes_0_bits_mask_43;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_44 <= pipelined_writes_0_bits_mask_44;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_45 <= pipelined_writes_0_bits_mask_45;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_46 <= pipelined_writes_0_bits_mask_46;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_47 <= pipelined_writes_0_bits_mask_47;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_48 <= pipelined_writes_0_bits_mask_48;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_49 <= pipelined_writes_0_bits_mask_49;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_50 <= pipelined_writes_0_bits_mask_50;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_51 <= pipelined_writes_0_bits_mask_51;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_52 <= pipelined_writes_0_bits_mask_52;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_53 <= pipelined_writes_0_bits_mask_53;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_54 <= pipelined_writes_0_bits_mask_54;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_55 <= pipelined_writes_0_bits_mask_55;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_56 <= pipelined_writes_0_bits_mask_56;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_57 <= pipelined_writes_0_bits_mask_57;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_58 <= pipelined_writes_0_bits_mask_58;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_59 <= pipelined_writes_0_bits_mask_59;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_60 <= pipelined_writes_0_bits_mask_60;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_61 <= pipelined_writes_0_bits_mask_61;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_62 <= pipelined_writes_0_bits_mask_62;	// @[AccumulatorMem.scala:113:29]
    pipelined_writes_1_bits_mask_63 <= pipelined_writes_0_bits_mask_63;	// @[AccumulatorMem.scala:113:29]
    if (_GEN_12) begin	// @[AccumulatorMem.scala:232:18, :243:23, :248:30, :249:26]
      w_q_0_data_0 <= _T_93_0_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_1 <= _T_93_0_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_2 <= _T_93_0_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_3 <= _T_93_0_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_4 <= _T_93_1_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_5 <= _T_93_1_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_6 <= _T_93_1_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_7 <= _T_93_1_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_8 <= _T_93_2_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_9 <= _T_93_2_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_10 <= _T_93_2_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_11 <= _T_93_2_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_12 <= _T_93_3_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_13 <= _T_93_3_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_14 <= _T_93_3_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_15 <= _T_93_3_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_16 <= _T_93_4_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_17 <= _T_93_4_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_18 <= _T_93_4_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_19 <= _T_93_4_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_20 <= _T_93_5_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_21 <= _T_93_5_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_22 <= _T_93_5_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_23 <= _T_93_5_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_24 <= _T_93_6_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_25 <= _T_93_6_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_26 <= _T_93_6_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_27 <= _T_93_6_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_28 <= _T_93_7_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_29 <= _T_93_7_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_30 <= _T_93_7_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_31 <= _T_93_7_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_32 <= _T_93_8_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_33 <= _T_93_8_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_34 <= _T_93_8_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_35 <= _T_93_8_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_36 <= _T_93_9_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_37 <= _T_93_9_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_38 <= _T_93_9_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_39 <= _T_93_9_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_40 <= _T_93_10_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_41 <= _T_93_10_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_42 <= _T_93_10_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_43 <= _T_93_10_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_44 <= _T_93_11_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_45 <= _T_93_11_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_46 <= _T_93_11_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_47 <= _T_93_11_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_48 <= _T_93_12_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_49 <= _T_93_12_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_50 <= _T_93_12_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_51 <= _T_93_12_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_52 <= _T_93_13_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_53 <= _T_93_13_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_54 <= _T_93_13_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_55 <= _T_93_13_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_56 <= _T_93_14_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_57 <= _T_93_14_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_58 <= _T_93_14_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_59 <= _T_93_14_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_60 <= _T_93_15_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_61 <= _T_93_15_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_62 <= _T_93_15_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_data_63 <= _T_93_15_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_0_mask_0 <= pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_1 <= pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_2 <= pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_3 <= pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_4 <= pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_5 <= pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_6 <= pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_7 <= pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_8 <= pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_9 <= pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_10 <= pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_11 <= pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_12 <= pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_13 <= pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_14 <= pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_15 <= pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_16 <= pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_17 <= pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_18 <= pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_19 <= pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_20 <= pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_21 <= pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_22 <= pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_23 <= pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_24 <= pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_25 <= pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_26 <= pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_27 <= pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_28 <= pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_29 <= pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_30 <= pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_31 <= pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_32 <= pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_33 <= pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_34 <= pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_35 <= pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_36 <= pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_37 <= pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_38 <= pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_39 <= pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_40 <= pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_41 <= pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_42 <= pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_43 <= pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_44 <= pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_45 <= pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_46 <= pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_47 <= pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_48 <= pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_49 <= pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_50 <= pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_51 <= pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_52 <= pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_53 <= pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_54 <= pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_55 <= pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_56 <= pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_57 <= pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_58 <= pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_59 <= pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_60 <= pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_61 <= pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_62 <= pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_mask_63 <= pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_0_addr <= pipelined_writes_1_bits_addr[7:1];	// @[AccumulatorMem.scala:113:29, :165:41, :203:20]
    end
    if (_GEN_13) begin	// @[AccumulatorMem.scala:232:18, :243:23, :248:30, :249:26]
      w_q_1_data_0 <= _T_176_0_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_1 <= _T_176_0_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_2 <= _T_176_0_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_3 <= _T_176_0_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_4 <= _T_176_1_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_5 <= _T_176_1_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_6 <= _T_176_1_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_7 <= _T_176_1_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_8 <= _T_176_2_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_9 <= _T_176_2_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_10 <= _T_176_2_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_11 <= _T_176_2_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_12 <= _T_176_3_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_13 <= _T_176_3_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_14 <= _T_176_3_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_15 <= _T_176_3_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_16 <= _T_176_4_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_17 <= _T_176_4_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_18 <= _T_176_4_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_19 <= _T_176_4_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_20 <= _T_176_5_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_21 <= _T_176_5_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_22 <= _T_176_5_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_23 <= _T_176_5_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_24 <= _T_176_6_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_25 <= _T_176_6_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_26 <= _T_176_6_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_27 <= _T_176_6_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_28 <= _T_176_7_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_29 <= _T_176_7_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_30 <= _T_176_7_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_31 <= _T_176_7_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_32 <= _T_176_8_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_33 <= _T_176_8_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_34 <= _T_176_8_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_35 <= _T_176_8_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_36 <= _T_176_9_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_37 <= _T_176_9_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_38 <= _T_176_9_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_39 <= _T_176_9_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_40 <= _T_176_10_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_41 <= _T_176_10_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_42 <= _T_176_10_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_43 <= _T_176_10_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_44 <= _T_176_11_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_45 <= _T_176_11_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_46 <= _T_176_11_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_47 <= _T_176_11_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_48 <= _T_176_12_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_49 <= _T_176_12_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_50 <= _T_176_12_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_51 <= _T_176_12_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_52 <= _T_176_13_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_53 <= _T_176_13_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_54 <= _T_176_13_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_55 <= _T_176_13_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_56 <= _T_176_14_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_57 <= _T_176_14_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_58 <= _T_176_14_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_59 <= _T_176_14_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_60 <= _T_176_15_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_61 <= _T_176_15_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_62 <= _T_176_15_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_data_63 <= _T_176_15_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_mask_0 <= pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_1 <= pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_2 <= pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_3 <= pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_4 <= pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_5 <= pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_6 <= pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_7 <= pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_8 <= pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_9 <= pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_10 <= pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_11 <= pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_12 <= pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_13 <= pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_14 <= pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_15 <= pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_16 <= pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_17 <= pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_18 <= pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_19 <= pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_20 <= pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_21 <= pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_22 <= pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_23 <= pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_24 <= pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_25 <= pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_26 <= pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_27 <= pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_28 <= pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_29 <= pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_30 <= pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_31 <= pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_32 <= pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_33 <= pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_34 <= pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_35 <= pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_36 <= pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_37 <= pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_38 <= pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_39 <= pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_40 <= pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_41 <= pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_42 <= pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_43 <= pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_44 <= pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_45 <= pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_46 <= pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_47 <= pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_48 <= pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_49 <= pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_50 <= pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_51 <= pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_52 <= pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_53 <= pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_54 <= pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_55 <= pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_56 <= pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_57 <= pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_58 <= pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_59 <= pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_60 <= pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_61 <= pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_62 <= pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_mask_63 <= pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_addr <= pipelined_writes_1_bits_addr[7:1];	// @[AccumulatorMem.scala:113:29, :165:41, :203:20]
    end
    if (_GEN_14) begin	// @[AccumulatorMem.scala:232:18, :243:23, :248:30, :249:26]
      w_q_2_data_0 <= _T_259_0_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_1 <= _T_259_0_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_2 <= _T_259_0_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_3 <= _T_259_0_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_4 <= _T_259_1_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_5 <= _T_259_1_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_6 <= _T_259_1_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_7 <= _T_259_1_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_8 <= _T_259_2_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_9 <= _T_259_2_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_10 <= _T_259_2_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_11 <= _T_259_2_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_12 <= _T_259_3_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_13 <= _T_259_3_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_14 <= _T_259_3_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_15 <= _T_259_3_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_16 <= _T_259_4_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_17 <= _T_259_4_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_18 <= _T_259_4_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_19 <= _T_259_4_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_20 <= _T_259_5_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_21 <= _T_259_5_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_22 <= _T_259_5_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_23 <= _T_259_5_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_24 <= _T_259_6_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_25 <= _T_259_6_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_26 <= _T_259_6_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_27 <= _T_259_6_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_28 <= _T_259_7_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_29 <= _T_259_7_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_30 <= _T_259_7_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_31 <= _T_259_7_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_32 <= _T_259_8_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_33 <= _T_259_8_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_34 <= _T_259_8_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_35 <= _T_259_8_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_36 <= _T_259_9_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_37 <= _T_259_9_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_38 <= _T_259_9_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_39 <= _T_259_9_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_40 <= _T_259_10_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_41 <= _T_259_10_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_42 <= _T_259_10_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_43 <= _T_259_10_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_44 <= _T_259_11_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_45 <= _T_259_11_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_46 <= _T_259_11_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_47 <= _T_259_11_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_48 <= _T_259_12_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_49 <= _T_259_12_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_50 <= _T_259_12_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_51 <= _T_259_12_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_52 <= _T_259_13_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_53 <= _T_259_13_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_54 <= _T_259_13_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_55 <= _T_259_13_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_56 <= _T_259_14_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_57 <= _T_259_14_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_58 <= _T_259_14_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_59 <= _T_259_14_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_60 <= _T_259_15_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_61 <= _T_259_15_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_62 <= _T_259_15_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_data_63 <= _T_259_15_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_2_mask_0 <= pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_1 <= pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_2 <= pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_3 <= pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_4 <= pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_5 <= pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_6 <= pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_7 <= pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_8 <= pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_9 <= pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_10 <= pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_11 <= pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_12 <= pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_13 <= pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_14 <= pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_15 <= pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_16 <= pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_17 <= pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_18 <= pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_19 <= pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_20 <= pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_21 <= pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_22 <= pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_23 <= pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_24 <= pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_25 <= pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_26 <= pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_27 <= pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_28 <= pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_29 <= pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_30 <= pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_31 <= pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_32 <= pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_33 <= pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_34 <= pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_35 <= pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_36 <= pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_37 <= pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_38 <= pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_39 <= pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_40 <= pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_41 <= pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_42 <= pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_43 <= pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_44 <= pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_45 <= pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_46 <= pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_47 <= pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_48 <= pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_49 <= pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_50 <= pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_51 <= pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_52 <= pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_53 <= pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_54 <= pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_55 <= pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_56 <= pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_57 <= pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_58 <= pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_59 <= pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_60 <= pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_61 <= pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_62 <= pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_mask_63 <= pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_2_addr <= pipelined_writes_1_bits_addr[7:1];	// @[AccumulatorMem.scala:113:29, :165:41, :203:20]
    end
    if (_GEN_15) begin	// @[AccumulatorMem.scala:232:18, :243:23, :248:30, :249:26]
      w_q_1_0_data_0 <= _T_448_0_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_1 <= _T_448_0_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_2 <= _T_448_0_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_3 <= _T_448_0_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_4 <= _T_448_1_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_5 <= _T_448_1_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_6 <= _T_448_1_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_7 <= _T_448_1_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_8 <= _T_448_2_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_9 <= _T_448_2_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_10 <= _T_448_2_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_11 <= _T_448_2_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_12 <= _T_448_3_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_13 <= _T_448_3_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_14 <= _T_448_3_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_15 <= _T_448_3_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_16 <= _T_448_4_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_17 <= _T_448_4_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_18 <= _T_448_4_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_19 <= _T_448_4_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_20 <= _T_448_5_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_21 <= _T_448_5_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_22 <= _T_448_5_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_23 <= _T_448_5_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_24 <= _T_448_6_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_25 <= _T_448_6_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_26 <= _T_448_6_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_27 <= _T_448_6_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_28 <= _T_448_7_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_29 <= _T_448_7_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_30 <= _T_448_7_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_31 <= _T_448_7_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_32 <= _T_448_8_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_33 <= _T_448_8_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_34 <= _T_448_8_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_35 <= _T_448_8_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_36 <= _T_448_9_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_37 <= _T_448_9_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_38 <= _T_448_9_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_39 <= _T_448_9_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_40 <= _T_448_10_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_41 <= _T_448_10_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_42 <= _T_448_10_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_43 <= _T_448_10_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_44 <= _T_448_11_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_45 <= _T_448_11_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_46 <= _T_448_11_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_47 <= _T_448_11_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_48 <= _T_448_12_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_49 <= _T_448_12_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_50 <= _T_448_12_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_51 <= _T_448_12_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_52 <= _T_448_13_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_53 <= _T_448_13_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_54 <= _T_448_13_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_55 <= _T_448_13_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_56 <= _T_448_14_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_57 <= _T_448_14_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_58 <= _T_448_14_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_59 <= _T_448_14_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_60 <= _T_448_15_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_61 <= _T_448_15_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_62 <= _T_448_15_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_data_63 <= _T_448_15_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_0_mask_0 <= pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_1 <= pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_2 <= pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_3 <= pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_4 <= pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_5 <= pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_6 <= pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_7 <= pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_8 <= pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_9 <= pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_10 <= pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_11 <= pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_12 <= pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_13 <= pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_14 <= pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_15 <= pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_16 <= pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_17 <= pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_18 <= pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_19 <= pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_20 <= pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_21 <= pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_22 <= pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_23 <= pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_24 <= pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_25 <= pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_26 <= pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_27 <= pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_28 <= pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_29 <= pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_30 <= pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_31 <= pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_32 <= pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_33 <= pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_34 <= pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_35 <= pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_36 <= pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_37 <= pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_38 <= pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_39 <= pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_40 <= pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_41 <= pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_42 <= pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_43 <= pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_44 <= pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_45 <= pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_46 <= pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_47 <= pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_48 <= pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_49 <= pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_50 <= pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_51 <= pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_52 <= pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_53 <= pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_54 <= pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_55 <= pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_56 <= pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_57 <= pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_58 <= pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_59 <= pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_60 <= pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_61 <= pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_62 <= pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_mask_63 <= pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_0_addr <= pipelined_writes_1_bits_addr[7:1];	// @[AccumulatorMem.scala:113:29, :165:41, :203:20]
    end
    if (_GEN_16) begin	// @[AccumulatorMem.scala:232:18, :243:23, :248:30, :249:26]
      w_q_1_1_data_0 <= _T_531_0_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_1 <= _T_531_0_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_2 <= _T_531_0_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_3 <= _T_531_0_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_4 <= _T_531_1_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_5 <= _T_531_1_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_6 <= _T_531_1_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_7 <= _T_531_1_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_8 <= _T_531_2_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_9 <= _T_531_2_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_10 <= _T_531_2_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_11 <= _T_531_2_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_12 <= _T_531_3_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_13 <= _T_531_3_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_14 <= _T_531_3_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_15 <= _T_531_3_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_16 <= _T_531_4_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_17 <= _T_531_4_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_18 <= _T_531_4_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_19 <= _T_531_4_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_20 <= _T_531_5_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_21 <= _T_531_5_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_22 <= _T_531_5_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_23 <= _T_531_5_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_24 <= _T_531_6_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_25 <= _T_531_6_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_26 <= _T_531_6_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_27 <= _T_531_6_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_28 <= _T_531_7_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_29 <= _T_531_7_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_30 <= _T_531_7_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_31 <= _T_531_7_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_32 <= _T_531_8_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_33 <= _T_531_8_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_34 <= _T_531_8_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_35 <= _T_531_8_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_36 <= _T_531_9_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_37 <= _T_531_9_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_38 <= _T_531_9_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_39 <= _T_531_9_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_40 <= _T_531_10_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_41 <= _T_531_10_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_42 <= _T_531_10_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_43 <= _T_531_10_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_44 <= _T_531_11_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_45 <= _T_531_11_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_46 <= _T_531_11_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_47 <= _T_531_11_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_48 <= _T_531_12_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_49 <= _T_531_12_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_50 <= _T_531_12_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_51 <= _T_531_12_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_52 <= _T_531_13_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_53 <= _T_531_13_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_54 <= _T_531_13_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_55 <= _T_531_13_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_56 <= _T_531_14_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_57 <= _T_531_14_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_58 <= _T_531_14_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_59 <= _T_531_14_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_60 <= _T_531_15_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_61 <= _T_531_15_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_62 <= _T_531_15_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_data_63 <= _T_531_15_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_1_mask_0 <= pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_1 <= pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_2 <= pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_3 <= pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_4 <= pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_5 <= pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_6 <= pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_7 <= pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_8 <= pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_9 <= pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_10 <= pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_11 <= pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_12 <= pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_13 <= pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_14 <= pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_15 <= pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_16 <= pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_17 <= pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_18 <= pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_19 <= pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_20 <= pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_21 <= pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_22 <= pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_23 <= pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_24 <= pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_25 <= pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_26 <= pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_27 <= pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_28 <= pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_29 <= pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_30 <= pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_31 <= pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_32 <= pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_33 <= pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_34 <= pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_35 <= pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_36 <= pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_37 <= pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_38 <= pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_39 <= pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_40 <= pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_41 <= pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_42 <= pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_43 <= pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_44 <= pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_45 <= pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_46 <= pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_47 <= pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_48 <= pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_49 <= pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_50 <= pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_51 <= pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_52 <= pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_53 <= pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_54 <= pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_55 <= pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_56 <= pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_57 <= pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_58 <= pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_59 <= pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_60 <= pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_61 <= pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_62 <= pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_mask_63 <= pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_1_addr <= pipelined_writes_1_bits_addr[7:1];	// @[AccumulatorMem.scala:113:29, :165:41, :203:20]
    end
    if (_GEN_17) begin	// @[AccumulatorMem.scala:232:18, :243:23, :248:30, :249:26]
      w_q_1_2_data_0 <= _T_614_0_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_1 <= _T_614_0_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_2 <= _T_614_0_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_3 <= _T_614_0_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_4 <= _T_614_1_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_5 <= _T_614_1_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_6 <= _T_614_1_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_7 <= _T_614_1_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_8 <= _T_614_2_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_9 <= _T_614_2_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_10 <= _T_614_2_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_11 <= _T_614_2_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_12 <= _T_614_3_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_13 <= _T_614_3_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_14 <= _T_614_3_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_15 <= _T_614_3_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_16 <= _T_614_4_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_17 <= _T_614_4_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_18 <= _T_614_4_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_19 <= _T_614_4_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_20 <= _T_614_5_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_21 <= _T_614_5_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_22 <= _T_614_5_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_23 <= _T_614_5_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_24 <= _T_614_6_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_25 <= _T_614_6_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_26 <= _T_614_6_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_27 <= _T_614_6_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_28 <= _T_614_7_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_29 <= _T_614_7_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_30 <= _T_614_7_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_31 <= _T_614_7_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_32 <= _T_614_8_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_33 <= _T_614_8_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_34 <= _T_614_8_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_35 <= _T_614_8_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_36 <= _T_614_9_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_37 <= _T_614_9_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_38 <= _T_614_9_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_39 <= _T_614_9_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_40 <= _T_614_10_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_41 <= _T_614_10_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_42 <= _T_614_10_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_43 <= _T_614_10_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_44 <= _T_614_11_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_45 <= _T_614_11_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_46 <= _T_614_11_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_47 <= _T_614_11_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_48 <= _T_614_12_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_49 <= _T_614_12_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_50 <= _T_614_12_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_51 <= _T_614_12_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_52 <= _T_614_13_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_53 <= _T_614_13_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_54 <= _T_614_13_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_55 <= _T_614_13_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_56 <= _T_614_14_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_57 <= _T_614_14_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_58 <= _T_614_14_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_59 <= _T_614_14_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_60 <= _T_614_15_0[7:0];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_61 <= _T_614_15_0[15:8];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_62 <= _T_614_15_0[23:16];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_data_63 <= _T_614_15_0[31:24];	// @[AccumulatorMem.scala:203:20, :250:{32,119}]
      w_q_1_2_mask_0 <= pipelined_writes_1_bits_mask_0;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_1 <= pipelined_writes_1_bits_mask_1;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_2 <= pipelined_writes_1_bits_mask_2;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_3 <= pipelined_writes_1_bits_mask_3;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_4 <= pipelined_writes_1_bits_mask_4;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_5 <= pipelined_writes_1_bits_mask_5;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_6 <= pipelined_writes_1_bits_mask_6;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_7 <= pipelined_writes_1_bits_mask_7;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_8 <= pipelined_writes_1_bits_mask_8;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_9 <= pipelined_writes_1_bits_mask_9;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_10 <= pipelined_writes_1_bits_mask_10;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_11 <= pipelined_writes_1_bits_mask_11;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_12 <= pipelined_writes_1_bits_mask_12;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_13 <= pipelined_writes_1_bits_mask_13;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_14 <= pipelined_writes_1_bits_mask_14;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_15 <= pipelined_writes_1_bits_mask_15;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_16 <= pipelined_writes_1_bits_mask_16;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_17 <= pipelined_writes_1_bits_mask_17;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_18 <= pipelined_writes_1_bits_mask_18;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_19 <= pipelined_writes_1_bits_mask_19;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_20 <= pipelined_writes_1_bits_mask_20;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_21 <= pipelined_writes_1_bits_mask_21;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_22 <= pipelined_writes_1_bits_mask_22;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_23 <= pipelined_writes_1_bits_mask_23;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_24 <= pipelined_writes_1_bits_mask_24;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_25 <= pipelined_writes_1_bits_mask_25;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_26 <= pipelined_writes_1_bits_mask_26;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_27 <= pipelined_writes_1_bits_mask_27;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_28 <= pipelined_writes_1_bits_mask_28;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_29 <= pipelined_writes_1_bits_mask_29;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_30 <= pipelined_writes_1_bits_mask_30;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_31 <= pipelined_writes_1_bits_mask_31;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_32 <= pipelined_writes_1_bits_mask_32;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_33 <= pipelined_writes_1_bits_mask_33;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_34 <= pipelined_writes_1_bits_mask_34;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_35 <= pipelined_writes_1_bits_mask_35;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_36 <= pipelined_writes_1_bits_mask_36;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_37 <= pipelined_writes_1_bits_mask_37;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_38 <= pipelined_writes_1_bits_mask_38;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_39 <= pipelined_writes_1_bits_mask_39;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_40 <= pipelined_writes_1_bits_mask_40;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_41 <= pipelined_writes_1_bits_mask_41;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_42 <= pipelined_writes_1_bits_mask_42;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_43 <= pipelined_writes_1_bits_mask_43;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_44 <= pipelined_writes_1_bits_mask_44;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_45 <= pipelined_writes_1_bits_mask_45;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_46 <= pipelined_writes_1_bits_mask_46;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_47 <= pipelined_writes_1_bits_mask_47;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_48 <= pipelined_writes_1_bits_mask_48;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_49 <= pipelined_writes_1_bits_mask_49;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_50 <= pipelined_writes_1_bits_mask_50;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_51 <= pipelined_writes_1_bits_mask_51;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_52 <= pipelined_writes_1_bits_mask_52;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_53 <= pipelined_writes_1_bits_mask_53;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_54 <= pipelined_writes_1_bits_mask_54;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_55 <= pipelined_writes_1_bits_mask_55;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_56 <= pipelined_writes_1_bits_mask_56;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_57 <= pipelined_writes_1_bits_mask_57;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_58 <= pipelined_writes_1_bits_mask_58;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_59 <= pipelined_writes_1_bits_mask_59;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_60 <= pipelined_writes_1_bits_mask_60;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_61 <= pipelined_writes_1_bits_mask_61;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_62 <= pipelined_writes_1_bits_mask_62;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_mask_63 <= pipelined_writes_1_bits_mask_63;	// @[AccumulatorMem.scala:113:29, :203:20]
      w_q_1_2_addr <= pipelined_writes_1_bits_addr[7:1];	// @[AccumulatorMem.scala:113:29, :165:41, :203:20]
    end
    REG_2 <= ren_1 & rmw_req_valid & io_write_bits_addr[0];	// @[AccumulatorMem.scala:150:37, :164:40, :258:{20,42}, :273:55, :274:13, :278:32]
    REG_3 <= ren_1;	// @[AccumulatorMem.scala:260:27, :273:55, :274:13, :278:32]
    q_io_enq_bits_scale_REG_bits <= io_read_req_bits_scale_bits;	// @[AccumulatorMem.scala:302:33]
    q_io_enq_bits_igelu_qb_REG <= io_read_req_bits_igelu_qb;	// @[AccumulatorMem.scala:303:36]
    q_io_enq_bits_igelu_qc_REG <= io_read_req_bits_igelu_qc;	// @[AccumulatorMem.scala:304:36]
    q_io_enq_bits_iexp_qln2_REG <= io_read_req_bits_iexp_qln2;	// @[AccumulatorMem.scala:305:37]
    q_io_enq_bits_iexp_qln2_inv_REG <= io_read_req_bits_iexp_qln2_inv;	// @[AccumulatorMem.scala:306:41]
    q_io_enq_bits_act_REG <= io_read_req_bits_act;	// @[AccumulatorMem.scala:307:31]
    q_io_enq_valid_REG <= _T_711;	// @[AccumulatorMem.scala:310:28, Decoupled.scala:51:35]
  end // always @(posedge)
  `ifndef SYNTHESIS
    always @(posedge clock) begin	// @[AccumulatorMem.scala:206:17]
      if (w_q_0_valid & ~reset & _T_712 & io_write_bits_acc & ~(io_write_bits_addr[0]) & io_write_bits_addr[7:1] == w_q_0_addr
          & (|({io_write_bits_mask_63, io_write_bits_mask_62, io_write_bits_mask_61, io_write_bits_mask_60, io_write_bits_mask_59, io_write_bits_mask_58, io_write_bits_mask_57, io_write_bits_mask_56, io_write_bits_mask_55, io_write_bits_mask_54, io_write_bits_mask_53, io_write_bits_mask_52, io_write_bits_mask_51, io_write_bits_mask_50, io_write_bits_mask_49, io_write_bits_mask_48, io_write_bits_mask_47, io_write_bits_mask_46, io_write_bits_mask_45, io_write_bits_mask_44, io_write_bits_mask_43, io_write_bits_mask_42, io_write_bits_mask_41, io_write_bits_mask_40, io_write_bits_mask_39, io_write_bits_mask_38, io_write_bits_mask_37, io_write_bits_mask_36, io_write_bits_mask_35, io_write_bits_mask_34, io_write_bits_mask_33, io_write_bits_mask_32, io_write_bits_mask_31, io_write_bits_mask_30, io_write_bits_mask_29, io_write_bits_mask_28, io_write_bits_mask_27, io_write_bits_mask_26, io_write_bits_mask_25, io_write_bits_mask_24, io_write_bits_mask_23, io_write_bits_mask_22, io_write_bits_mask_21, io_write_bits_mask_20, io_write_bits_mask_19, io_write_bits_mask_18, io_write_bits_mask_17, io_write_bits_mask_16, io_write_bits_mask_15, io_write_bits_mask_14, io_write_bits_mask_13, io_write_bits_mask_12, io_write_bits_mask_11, io_write_bits_mask_10, io_write_bits_mask_9, io_write_bits_mask_8, io_write_bits_mask_7, io_write_bits_mask_6, io_write_bits_mask_5, io_write_bits_mask_4, io_write_bits_mask_3, io_write_bits_mask_2, io_write_bits_mask_1, io_write_bits_mask_0}
               & {w_q_0_mask_63, w_q_0_mask_62, w_q_0_mask_61, w_q_0_mask_60, w_q_0_mask_59, w_q_0_mask_58, w_q_0_mask_57, w_q_0_mask_56, w_q_0_mask_55, w_q_0_mask_54, w_q_0_mask_53, w_q_0_mask_52, w_q_0_mask_51, w_q_0_mask_50, w_q_0_mask_49, w_q_0_mask_48, w_q_0_mask_47, w_q_0_mask_46, w_q_0_mask_45, w_q_0_mask_44, w_q_0_mask_43, w_q_0_mask_42, w_q_0_mask_41, w_q_0_mask_40, w_q_0_mask_39, w_q_0_mask_38, w_q_0_mask_37, w_q_0_mask_36, w_q_0_mask_35, w_q_0_mask_34, w_q_0_mask_33, w_q_0_mask_32, w_q_0_mask_31, w_q_0_mask_30, w_q_0_mask_29, w_q_0_mask_28, w_q_0_mask_27, w_q_0_mask_26, w_q_0_mask_25, w_q_0_mask_24, w_q_0_mask_23, w_q_0_mask_22, w_q_0_mask_21, w_q_0_mask_20, w_q_0_mask_19, w_q_0_mask_18, w_q_0_mask_17, w_q_0_mask_16, w_q_0_mask_15, w_q_0_mask_14, w_q_0_mask_13, w_q_0_mask_12, w_q_0_mask_11, w_q_0_mask_10, w_q_0_mask_9, w_q_0_mask_8, w_q_0_mask_7, w_q_0_mask_6, w_q_0_mask_5, w_q_0_mask_4, w_q_0_mask_3, w_q_0_mask_2, w_q_0_mask_1, w_q_0_mask_0}))) begin	// @[AccumulatorMem.scala:164:{40,70}, :165:41, :203:20, :206:17, :208:78, :209:{34,41,50,58}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:206:17]
          $error("Assertion failed: you cannot accumulate to an AccumulatorMem address until previous writes to that address have completed\n    at AccumulatorMem.scala:206 assert(!(\n");	// @[AccumulatorMem.scala:206:17]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:206:17]
          $fatal;	// @[AccumulatorMem.scala:206:17]
      end
      if (w_q_1_valid & ~reset & _T_712 & io_write_bits_acc & ~(io_write_bits_addr[0]) & io_write_bits_addr[7:1] == w_q_1_addr
          & (|({io_write_bits_mask_63, io_write_bits_mask_62, io_write_bits_mask_61, io_write_bits_mask_60, io_write_bits_mask_59, io_write_bits_mask_58, io_write_bits_mask_57, io_write_bits_mask_56, io_write_bits_mask_55, io_write_bits_mask_54, io_write_bits_mask_53, io_write_bits_mask_52, io_write_bits_mask_51, io_write_bits_mask_50, io_write_bits_mask_49, io_write_bits_mask_48, io_write_bits_mask_47, io_write_bits_mask_46, io_write_bits_mask_45, io_write_bits_mask_44, io_write_bits_mask_43, io_write_bits_mask_42, io_write_bits_mask_41, io_write_bits_mask_40, io_write_bits_mask_39, io_write_bits_mask_38, io_write_bits_mask_37, io_write_bits_mask_36, io_write_bits_mask_35, io_write_bits_mask_34, io_write_bits_mask_33, io_write_bits_mask_32, io_write_bits_mask_31, io_write_bits_mask_30, io_write_bits_mask_29, io_write_bits_mask_28, io_write_bits_mask_27, io_write_bits_mask_26, io_write_bits_mask_25, io_write_bits_mask_24, io_write_bits_mask_23, io_write_bits_mask_22, io_write_bits_mask_21, io_write_bits_mask_20, io_write_bits_mask_19, io_write_bits_mask_18, io_write_bits_mask_17, io_write_bits_mask_16, io_write_bits_mask_15, io_write_bits_mask_14, io_write_bits_mask_13, io_write_bits_mask_12, io_write_bits_mask_11, io_write_bits_mask_10, io_write_bits_mask_9, io_write_bits_mask_8, io_write_bits_mask_7, io_write_bits_mask_6, io_write_bits_mask_5, io_write_bits_mask_4, io_write_bits_mask_3, io_write_bits_mask_2, io_write_bits_mask_1, io_write_bits_mask_0}
               & {w_q_1_mask_63, w_q_1_mask_62, w_q_1_mask_61, w_q_1_mask_60, w_q_1_mask_59, w_q_1_mask_58, w_q_1_mask_57, w_q_1_mask_56, w_q_1_mask_55, w_q_1_mask_54, w_q_1_mask_53, w_q_1_mask_52, w_q_1_mask_51, w_q_1_mask_50, w_q_1_mask_49, w_q_1_mask_48, w_q_1_mask_47, w_q_1_mask_46, w_q_1_mask_45, w_q_1_mask_44, w_q_1_mask_43, w_q_1_mask_42, w_q_1_mask_41, w_q_1_mask_40, w_q_1_mask_39, w_q_1_mask_38, w_q_1_mask_37, w_q_1_mask_36, w_q_1_mask_35, w_q_1_mask_34, w_q_1_mask_33, w_q_1_mask_32, w_q_1_mask_31, w_q_1_mask_30, w_q_1_mask_29, w_q_1_mask_28, w_q_1_mask_27, w_q_1_mask_26, w_q_1_mask_25, w_q_1_mask_24, w_q_1_mask_23, w_q_1_mask_22, w_q_1_mask_21, w_q_1_mask_20, w_q_1_mask_19, w_q_1_mask_18, w_q_1_mask_17, w_q_1_mask_16, w_q_1_mask_15, w_q_1_mask_14, w_q_1_mask_13, w_q_1_mask_12, w_q_1_mask_11, w_q_1_mask_10, w_q_1_mask_9, w_q_1_mask_8, w_q_1_mask_7, w_q_1_mask_6, w_q_1_mask_5, w_q_1_mask_4, w_q_1_mask_3, w_q_1_mask_2, w_q_1_mask_1, w_q_1_mask_0}))) begin	// @[AccumulatorMem.scala:164:{40,70}, :165:41, :203:20, :206:17, :208:78, :209:{34,41,50,58}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:206:17]
          $error("Assertion failed: you cannot accumulate to an AccumulatorMem address until previous writes to that address have completed\n    at AccumulatorMem.scala:206 assert(!(\n");	// @[AccumulatorMem.scala:206:17]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:206:17]
          $fatal;	// @[AccumulatorMem.scala:206:17]
      end
      if (w_q_2_valid & ~reset & _T_712 & io_write_bits_acc & ~(io_write_bits_addr[0]) & io_write_bits_addr[7:1] == w_q_2_addr
          & (|({io_write_bits_mask_63, io_write_bits_mask_62, io_write_bits_mask_61, io_write_bits_mask_60, io_write_bits_mask_59, io_write_bits_mask_58, io_write_bits_mask_57, io_write_bits_mask_56, io_write_bits_mask_55, io_write_bits_mask_54, io_write_bits_mask_53, io_write_bits_mask_52, io_write_bits_mask_51, io_write_bits_mask_50, io_write_bits_mask_49, io_write_bits_mask_48, io_write_bits_mask_47, io_write_bits_mask_46, io_write_bits_mask_45, io_write_bits_mask_44, io_write_bits_mask_43, io_write_bits_mask_42, io_write_bits_mask_41, io_write_bits_mask_40, io_write_bits_mask_39, io_write_bits_mask_38, io_write_bits_mask_37, io_write_bits_mask_36, io_write_bits_mask_35, io_write_bits_mask_34, io_write_bits_mask_33, io_write_bits_mask_32, io_write_bits_mask_31, io_write_bits_mask_30, io_write_bits_mask_29, io_write_bits_mask_28, io_write_bits_mask_27, io_write_bits_mask_26, io_write_bits_mask_25, io_write_bits_mask_24, io_write_bits_mask_23, io_write_bits_mask_22, io_write_bits_mask_21, io_write_bits_mask_20, io_write_bits_mask_19, io_write_bits_mask_18, io_write_bits_mask_17, io_write_bits_mask_16, io_write_bits_mask_15, io_write_bits_mask_14, io_write_bits_mask_13, io_write_bits_mask_12, io_write_bits_mask_11, io_write_bits_mask_10, io_write_bits_mask_9, io_write_bits_mask_8, io_write_bits_mask_7, io_write_bits_mask_6, io_write_bits_mask_5, io_write_bits_mask_4, io_write_bits_mask_3, io_write_bits_mask_2, io_write_bits_mask_1, io_write_bits_mask_0}
               & {w_q_2_mask_63, w_q_2_mask_62, w_q_2_mask_61, w_q_2_mask_60, w_q_2_mask_59, w_q_2_mask_58, w_q_2_mask_57, w_q_2_mask_56, w_q_2_mask_55, w_q_2_mask_54, w_q_2_mask_53, w_q_2_mask_52, w_q_2_mask_51, w_q_2_mask_50, w_q_2_mask_49, w_q_2_mask_48, w_q_2_mask_47, w_q_2_mask_46, w_q_2_mask_45, w_q_2_mask_44, w_q_2_mask_43, w_q_2_mask_42, w_q_2_mask_41, w_q_2_mask_40, w_q_2_mask_39, w_q_2_mask_38, w_q_2_mask_37, w_q_2_mask_36, w_q_2_mask_35, w_q_2_mask_34, w_q_2_mask_33, w_q_2_mask_32, w_q_2_mask_31, w_q_2_mask_30, w_q_2_mask_29, w_q_2_mask_28, w_q_2_mask_27, w_q_2_mask_26, w_q_2_mask_25, w_q_2_mask_24, w_q_2_mask_23, w_q_2_mask_22, w_q_2_mask_21, w_q_2_mask_20, w_q_2_mask_19, w_q_2_mask_18, w_q_2_mask_17, w_q_2_mask_16, w_q_2_mask_15, w_q_2_mask_14, w_q_2_mask_13, w_q_2_mask_12, w_q_2_mask_11, w_q_2_mask_10, w_q_2_mask_9, w_q_2_mask_8, w_q_2_mask_7, w_q_2_mask_6, w_q_2_mask_5, w_q_2_mask_4, w_q_2_mask_3, w_q_2_mask_2, w_q_2_mask_1, w_q_2_mask_0}))) begin	// @[AccumulatorMem.scala:164:{40,70}, :165:41, :203:20, :206:17, :208:78, :209:{34,41,50,58}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:206:17]
          $error("Assertion failed: you cannot accumulate to an AccumulatorMem address until previous writes to that address have completed\n    at AccumulatorMem.scala:206 assert(!(\n");	// @[AccumulatorMem.scala:206:17]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:206:17]
          $fatal;	// @[AccumulatorMem.scala:206:17]
      end
      if (w_q_push & ~reset & ~(~(w_q_tail[0] & w_q_0_valid | w_q_tail[1] & w_q_1_valid | w_q_tail[2] & w_q_2_valid) | wen)) begin	// @[AccumulatorMem.scala:203:20, :223:29, :225:{32,84,100}, :228:25, :241:51, :244:{15,16,26}, :273:55, :278:32]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:244:15]
          $error("Assertion failed: we ran out of acc-sub-bank write q entries\n    at AccumulatorMem.scala:244 assert(!w_q_full || wen, \"we ran out of acc-sub-bank write q entries\")\n");	// @[AccumulatorMem.scala:244:15]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:244:15]
          $fatal;	// @[AccumulatorMem.scala:244:15]
      end
      if (w_q_1_0_valid & ~reset & _T_712 & io_write_bits_acc & io_write_bits_addr[0] & io_write_bits_addr[7:1] == w_q_1_0_addr
          & (|({io_write_bits_mask_63, io_write_bits_mask_62, io_write_bits_mask_61, io_write_bits_mask_60, io_write_bits_mask_59, io_write_bits_mask_58, io_write_bits_mask_57, io_write_bits_mask_56, io_write_bits_mask_55, io_write_bits_mask_54, io_write_bits_mask_53, io_write_bits_mask_52, io_write_bits_mask_51, io_write_bits_mask_50, io_write_bits_mask_49, io_write_bits_mask_48, io_write_bits_mask_47, io_write_bits_mask_46, io_write_bits_mask_45, io_write_bits_mask_44, io_write_bits_mask_43, io_write_bits_mask_42, io_write_bits_mask_41, io_write_bits_mask_40, io_write_bits_mask_39, io_write_bits_mask_38, io_write_bits_mask_37, io_write_bits_mask_36, io_write_bits_mask_35, io_write_bits_mask_34, io_write_bits_mask_33, io_write_bits_mask_32, io_write_bits_mask_31, io_write_bits_mask_30, io_write_bits_mask_29, io_write_bits_mask_28, io_write_bits_mask_27, io_write_bits_mask_26, io_write_bits_mask_25, io_write_bits_mask_24, io_write_bits_mask_23, io_write_bits_mask_22, io_write_bits_mask_21, io_write_bits_mask_20, io_write_bits_mask_19, io_write_bits_mask_18, io_write_bits_mask_17, io_write_bits_mask_16, io_write_bits_mask_15, io_write_bits_mask_14, io_write_bits_mask_13, io_write_bits_mask_12, io_write_bits_mask_11, io_write_bits_mask_10, io_write_bits_mask_9, io_write_bits_mask_8, io_write_bits_mask_7, io_write_bits_mask_6, io_write_bits_mask_5, io_write_bits_mask_4, io_write_bits_mask_3, io_write_bits_mask_2, io_write_bits_mask_1, io_write_bits_mask_0}
               & {w_q_1_0_mask_63, w_q_1_0_mask_62, w_q_1_0_mask_61, w_q_1_0_mask_60, w_q_1_0_mask_59, w_q_1_0_mask_58, w_q_1_0_mask_57, w_q_1_0_mask_56, w_q_1_0_mask_55, w_q_1_0_mask_54, w_q_1_0_mask_53, w_q_1_0_mask_52, w_q_1_0_mask_51, w_q_1_0_mask_50, w_q_1_0_mask_49, w_q_1_0_mask_48, w_q_1_0_mask_47, w_q_1_0_mask_46, w_q_1_0_mask_45, w_q_1_0_mask_44, w_q_1_0_mask_43, w_q_1_0_mask_42, w_q_1_0_mask_41, w_q_1_0_mask_40, w_q_1_0_mask_39, w_q_1_0_mask_38, w_q_1_0_mask_37, w_q_1_0_mask_36, w_q_1_0_mask_35, w_q_1_0_mask_34, w_q_1_0_mask_33, w_q_1_0_mask_32, w_q_1_0_mask_31, w_q_1_0_mask_30, w_q_1_0_mask_29, w_q_1_0_mask_28, w_q_1_0_mask_27, w_q_1_0_mask_26, w_q_1_0_mask_25, w_q_1_0_mask_24, w_q_1_0_mask_23, w_q_1_0_mask_22, w_q_1_0_mask_21, w_q_1_0_mask_20, w_q_1_0_mask_19, w_q_1_0_mask_18, w_q_1_0_mask_17, w_q_1_0_mask_16, w_q_1_0_mask_15, w_q_1_0_mask_14, w_q_1_0_mask_13, w_q_1_0_mask_12, w_q_1_0_mask_11, w_q_1_0_mask_10, w_q_1_0_mask_9, w_q_1_0_mask_8, w_q_1_0_mask_7, w_q_1_0_mask_6, w_q_1_0_mask_5, w_q_1_0_mask_4, w_q_1_0_mask_3, w_q_1_0_mask_2, w_q_1_0_mask_1, w_q_1_0_mask_0}))) begin	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :206:17, :208:78, :209:{34,41,50,58}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:206:17]
          $error("Assertion failed: you cannot accumulate to an AccumulatorMem address until previous writes to that address have completed\n    at AccumulatorMem.scala:206 assert(!(\n");	// @[AccumulatorMem.scala:206:17]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:206:17]
          $fatal;	// @[AccumulatorMem.scala:206:17]
      end
      if (w_q_1_1_valid & ~reset & _T_712 & io_write_bits_acc & io_write_bits_addr[0] & io_write_bits_addr[7:1] == w_q_1_1_addr
          & (|({io_write_bits_mask_63, io_write_bits_mask_62, io_write_bits_mask_61, io_write_bits_mask_60, io_write_bits_mask_59, io_write_bits_mask_58, io_write_bits_mask_57, io_write_bits_mask_56, io_write_bits_mask_55, io_write_bits_mask_54, io_write_bits_mask_53, io_write_bits_mask_52, io_write_bits_mask_51, io_write_bits_mask_50, io_write_bits_mask_49, io_write_bits_mask_48, io_write_bits_mask_47, io_write_bits_mask_46, io_write_bits_mask_45, io_write_bits_mask_44, io_write_bits_mask_43, io_write_bits_mask_42, io_write_bits_mask_41, io_write_bits_mask_40, io_write_bits_mask_39, io_write_bits_mask_38, io_write_bits_mask_37, io_write_bits_mask_36, io_write_bits_mask_35, io_write_bits_mask_34, io_write_bits_mask_33, io_write_bits_mask_32, io_write_bits_mask_31, io_write_bits_mask_30, io_write_bits_mask_29, io_write_bits_mask_28, io_write_bits_mask_27, io_write_bits_mask_26, io_write_bits_mask_25, io_write_bits_mask_24, io_write_bits_mask_23, io_write_bits_mask_22, io_write_bits_mask_21, io_write_bits_mask_20, io_write_bits_mask_19, io_write_bits_mask_18, io_write_bits_mask_17, io_write_bits_mask_16, io_write_bits_mask_15, io_write_bits_mask_14, io_write_bits_mask_13, io_write_bits_mask_12, io_write_bits_mask_11, io_write_bits_mask_10, io_write_bits_mask_9, io_write_bits_mask_8, io_write_bits_mask_7, io_write_bits_mask_6, io_write_bits_mask_5, io_write_bits_mask_4, io_write_bits_mask_3, io_write_bits_mask_2, io_write_bits_mask_1, io_write_bits_mask_0}
               & {w_q_1_1_mask_63, w_q_1_1_mask_62, w_q_1_1_mask_61, w_q_1_1_mask_60, w_q_1_1_mask_59, w_q_1_1_mask_58, w_q_1_1_mask_57, w_q_1_1_mask_56, w_q_1_1_mask_55, w_q_1_1_mask_54, w_q_1_1_mask_53, w_q_1_1_mask_52, w_q_1_1_mask_51, w_q_1_1_mask_50, w_q_1_1_mask_49, w_q_1_1_mask_48, w_q_1_1_mask_47, w_q_1_1_mask_46, w_q_1_1_mask_45, w_q_1_1_mask_44, w_q_1_1_mask_43, w_q_1_1_mask_42, w_q_1_1_mask_41, w_q_1_1_mask_40, w_q_1_1_mask_39, w_q_1_1_mask_38, w_q_1_1_mask_37, w_q_1_1_mask_36, w_q_1_1_mask_35, w_q_1_1_mask_34, w_q_1_1_mask_33, w_q_1_1_mask_32, w_q_1_1_mask_31, w_q_1_1_mask_30, w_q_1_1_mask_29, w_q_1_1_mask_28, w_q_1_1_mask_27, w_q_1_1_mask_26, w_q_1_1_mask_25, w_q_1_1_mask_24, w_q_1_1_mask_23, w_q_1_1_mask_22, w_q_1_1_mask_21, w_q_1_1_mask_20, w_q_1_1_mask_19, w_q_1_1_mask_18, w_q_1_1_mask_17, w_q_1_1_mask_16, w_q_1_1_mask_15, w_q_1_1_mask_14, w_q_1_1_mask_13, w_q_1_1_mask_12, w_q_1_1_mask_11, w_q_1_1_mask_10, w_q_1_1_mask_9, w_q_1_1_mask_8, w_q_1_1_mask_7, w_q_1_1_mask_6, w_q_1_1_mask_5, w_q_1_1_mask_4, w_q_1_1_mask_3, w_q_1_1_mask_2, w_q_1_1_mask_1, w_q_1_1_mask_0}))) begin	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :206:17, :208:78, :209:{34,41,50,58}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:206:17]
          $error("Assertion failed: you cannot accumulate to an AccumulatorMem address until previous writes to that address have completed\n    at AccumulatorMem.scala:206 assert(!(\n");	// @[AccumulatorMem.scala:206:17]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:206:17]
          $fatal;	// @[AccumulatorMem.scala:206:17]
      end
      if (w_q_1_2_valid & ~reset & _T_712 & io_write_bits_acc & io_write_bits_addr[0] & io_write_bits_addr[7:1] == w_q_1_2_addr
          & (|({io_write_bits_mask_63, io_write_bits_mask_62, io_write_bits_mask_61, io_write_bits_mask_60, io_write_bits_mask_59, io_write_bits_mask_58, io_write_bits_mask_57, io_write_bits_mask_56, io_write_bits_mask_55, io_write_bits_mask_54, io_write_bits_mask_53, io_write_bits_mask_52, io_write_bits_mask_51, io_write_bits_mask_50, io_write_bits_mask_49, io_write_bits_mask_48, io_write_bits_mask_47, io_write_bits_mask_46, io_write_bits_mask_45, io_write_bits_mask_44, io_write_bits_mask_43, io_write_bits_mask_42, io_write_bits_mask_41, io_write_bits_mask_40, io_write_bits_mask_39, io_write_bits_mask_38, io_write_bits_mask_37, io_write_bits_mask_36, io_write_bits_mask_35, io_write_bits_mask_34, io_write_bits_mask_33, io_write_bits_mask_32, io_write_bits_mask_31, io_write_bits_mask_30, io_write_bits_mask_29, io_write_bits_mask_28, io_write_bits_mask_27, io_write_bits_mask_26, io_write_bits_mask_25, io_write_bits_mask_24, io_write_bits_mask_23, io_write_bits_mask_22, io_write_bits_mask_21, io_write_bits_mask_20, io_write_bits_mask_19, io_write_bits_mask_18, io_write_bits_mask_17, io_write_bits_mask_16, io_write_bits_mask_15, io_write_bits_mask_14, io_write_bits_mask_13, io_write_bits_mask_12, io_write_bits_mask_11, io_write_bits_mask_10, io_write_bits_mask_9, io_write_bits_mask_8, io_write_bits_mask_7, io_write_bits_mask_6, io_write_bits_mask_5, io_write_bits_mask_4, io_write_bits_mask_3, io_write_bits_mask_2, io_write_bits_mask_1, io_write_bits_mask_0}
               & {w_q_1_2_mask_63, w_q_1_2_mask_62, w_q_1_2_mask_61, w_q_1_2_mask_60, w_q_1_2_mask_59, w_q_1_2_mask_58, w_q_1_2_mask_57, w_q_1_2_mask_56, w_q_1_2_mask_55, w_q_1_2_mask_54, w_q_1_2_mask_53, w_q_1_2_mask_52, w_q_1_2_mask_51, w_q_1_2_mask_50, w_q_1_2_mask_49, w_q_1_2_mask_48, w_q_1_2_mask_47, w_q_1_2_mask_46, w_q_1_2_mask_45, w_q_1_2_mask_44, w_q_1_2_mask_43, w_q_1_2_mask_42, w_q_1_2_mask_41, w_q_1_2_mask_40, w_q_1_2_mask_39, w_q_1_2_mask_38, w_q_1_2_mask_37, w_q_1_2_mask_36, w_q_1_2_mask_35, w_q_1_2_mask_34, w_q_1_2_mask_33, w_q_1_2_mask_32, w_q_1_2_mask_31, w_q_1_2_mask_30, w_q_1_2_mask_29, w_q_1_2_mask_28, w_q_1_2_mask_27, w_q_1_2_mask_26, w_q_1_2_mask_25, w_q_1_2_mask_24, w_q_1_2_mask_23, w_q_1_2_mask_22, w_q_1_2_mask_21, w_q_1_2_mask_20, w_q_1_2_mask_19, w_q_1_2_mask_18, w_q_1_2_mask_17, w_q_1_2_mask_16, w_q_1_2_mask_15, w_q_1_2_mask_14, w_q_1_2_mask_13, w_q_1_2_mask_12, w_q_1_2_mask_11, w_q_1_2_mask_10, w_q_1_2_mask_9, w_q_1_2_mask_8, w_q_1_2_mask_7, w_q_1_2_mask_6, w_q_1_2_mask_5, w_q_1_2_mask_4, w_q_1_2_mask_3, w_q_1_2_mask_2, w_q_1_2_mask_1, w_q_1_2_mask_0}))) begin	// @[AccumulatorMem.scala:164:40, :165:41, :203:20, :206:17, :208:78, :209:{34,41,50,58}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:206:17]
          $error("Assertion failed: you cannot accumulate to an AccumulatorMem address until previous writes to that address have completed\n    at AccumulatorMem.scala:206 assert(!(\n");	// @[AccumulatorMem.scala:206:17]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:206:17]
          $fatal;	// @[AccumulatorMem.scala:206:17]
      end
      if (w_q_push_1 & ~reset & ~(~(w_q_tail_1[0] & w_q_1_0_valid | w_q_tail_1[1] & w_q_1_1_valid | w_q_tail_1[2] & w_q_1_2_valid) | wen_1)) begin	// @[AccumulatorMem.scala:203:20, :223:29, :225:{32,84,100}, :228:25, :241:51, :244:{15,16,26}, :273:55, :278:32]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:244:15]
          $error("Assertion failed: we ran out of acc-sub-bank write q entries\n    at AccumulatorMem.scala:244 assert(!w_q_full || wen, \"we ran out of acc-sub-bank write q entries\")\n");	// @[AccumulatorMem.scala:244:15]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:244:15]
          $fatal;	// @[AccumulatorMem.scala:244:15]
      end
      if (~reset & _T_711 & _T_712 & io_read_req_bits_addr == io_write_bits_addr) begin	// @[AccumulatorMem.scala:342:{9,71}, Decoupled.scala:51:35]
        if (`ASSERT_VERBOSE_COND_)	// @[AccumulatorMem.scala:342:9]
          $error("Assertion failed: reading from and writing to same address is not supported\n    at AccumulatorMem.scala:342 assert(!(io.read.req.fire && io.write.fire && io.read.req.bits.addr === io.write.bits.addr), \"reading from and writing to same address is not supported\")\n");	// @[AccumulatorMem.scala:342:9]
        if (`STOP_COND_)	// @[AccumulatorMem.scala:342:9]
          $fatal;	// @[AccumulatorMem.scala:342:9]
      end
    end // always @(posedge)
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    logic [31:0] _RANDOM_51;
    logic [31:0] _RANDOM_52;
    logic [31:0] _RANDOM_53;
    logic [31:0] _RANDOM_54;
    logic [31:0] _RANDOM_55;
    logic [31:0] _RANDOM_56;
    logic [31:0] _RANDOM_57;
    logic [31:0] _RANDOM_58;
    logic [31:0] _RANDOM_59;
    logic [31:0] _RANDOM_60;
    logic [31:0] _RANDOM_61;
    logic [31:0] _RANDOM_62;
    logic [31:0] _RANDOM_63;
    logic [31:0] _RANDOM_64;
    logic [31:0] _RANDOM_65;
    logic [31:0] _RANDOM_66;
    logic [31:0] _RANDOM_67;
    logic [31:0] _RANDOM_68;
    logic [31:0] _RANDOM_69;
    logic [31:0] _RANDOM_70;
    logic [31:0] _RANDOM_71;
    logic [31:0] _RANDOM_72;
    logic [31:0] _RANDOM_73;
    logic [31:0] _RANDOM_74;
    logic [31:0] _RANDOM_75;
    logic [31:0] _RANDOM_76;
    logic [31:0] _RANDOM_77;
    logic [31:0] _RANDOM_78;
    logic [31:0] _RANDOM_79;
    logic [31:0] _RANDOM_80;
    logic [31:0] _RANDOM_81;
    logic [31:0] _RANDOM_82;
    logic [31:0] _RANDOM_83;
    logic [31:0] _RANDOM_84;
    logic [31:0] _RANDOM_85;
    logic [31:0] _RANDOM_86;
    logic [31:0] _RANDOM_87;
    logic [31:0] _RANDOM_88;
    logic [31:0] _RANDOM_89;
    logic [31:0] _RANDOM_90;
    logic [31:0] _RANDOM_91;
    logic [31:0] _RANDOM_92;
    logic [31:0] _RANDOM_93;
    logic [31:0] _RANDOM_94;
    logic [31:0] _RANDOM_95;
    logic [31:0] _RANDOM_96;
    logic [31:0] _RANDOM_97;
    logic [31:0] _RANDOM_98;
    logic [31:0] _RANDOM_99;
    logic [31:0] _RANDOM_100;
    logic [31:0] _RANDOM_101;
    logic [31:0] _RANDOM_102;
    logic [31:0] _RANDOM_103;
    logic [31:0] _RANDOM_104;
    logic [31:0] _RANDOM_105;
    logic [31:0] _RANDOM_106;
    logic [31:0] _RANDOM_107;
    logic [31:0] _RANDOM_108;
    logic [31:0] _RANDOM_109;
    logic [31:0] _RANDOM_110;
    logic [31:0] _RANDOM_111;
    logic [31:0] _RANDOM_112;
    logic [31:0] _RANDOM_113;
    logic [31:0] _RANDOM_114;
    logic [31:0] _RANDOM_115;
    logic [31:0] _RANDOM_116;
    logic [31:0] _RANDOM_117;
    logic [31:0] _RANDOM_118;
    logic [31:0] _RANDOM_119;
    logic [31:0] _RANDOM_120;
    logic [31:0] _RANDOM_121;
    logic [31:0] _RANDOM_122;
    logic [31:0] _RANDOM_123;
    logic [31:0] _RANDOM_124;
    logic [31:0] _RANDOM_125;
    logic [31:0] _RANDOM_126;
    logic [31:0] _RANDOM_127;
    logic [31:0] _RANDOM_128;
    logic [31:0] _RANDOM_129;
    logic [31:0] _RANDOM_130;
    logic [31:0] _RANDOM_131;
    logic [31:0] _RANDOM_132;
    logic [31:0] _RANDOM_133;
    logic [31:0] _RANDOM_134;
    logic [31:0] _RANDOM_135;
    logic [31:0] _RANDOM_136;
    logic [31:0] _RANDOM_137;
    logic [31:0] _RANDOM_138;
    logic [31:0] _RANDOM_139;
    logic [31:0] _RANDOM_140;
    logic [31:0] _RANDOM_141;
    logic [31:0] _RANDOM_142;
    logic [31:0] _RANDOM_143;
    logic [31:0] _RANDOM_144;
    logic [31:0] _RANDOM_145;
    logic [31:0] _RANDOM_146;
    logic [31:0] _RANDOM_147;
    logic [31:0] _RANDOM_148;
    logic [31:0] _RANDOM_149;
    logic [31:0] _RANDOM_150;
    logic [31:0] _RANDOM_151;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        _RANDOM_51 = `RANDOM;
        _RANDOM_52 = `RANDOM;
        _RANDOM_53 = `RANDOM;
        _RANDOM_54 = `RANDOM;
        _RANDOM_55 = `RANDOM;
        _RANDOM_56 = `RANDOM;
        _RANDOM_57 = `RANDOM;
        _RANDOM_58 = `RANDOM;
        _RANDOM_59 = `RANDOM;
        _RANDOM_60 = `RANDOM;
        _RANDOM_61 = `RANDOM;
        _RANDOM_62 = `RANDOM;
        _RANDOM_63 = `RANDOM;
        _RANDOM_64 = `RANDOM;
        _RANDOM_65 = `RANDOM;
        _RANDOM_66 = `RANDOM;
        _RANDOM_67 = `RANDOM;
        _RANDOM_68 = `RANDOM;
        _RANDOM_69 = `RANDOM;
        _RANDOM_70 = `RANDOM;
        _RANDOM_71 = `RANDOM;
        _RANDOM_72 = `RANDOM;
        _RANDOM_73 = `RANDOM;
        _RANDOM_74 = `RANDOM;
        _RANDOM_75 = `RANDOM;
        _RANDOM_76 = `RANDOM;
        _RANDOM_77 = `RANDOM;
        _RANDOM_78 = `RANDOM;
        _RANDOM_79 = `RANDOM;
        _RANDOM_80 = `RANDOM;
        _RANDOM_81 = `RANDOM;
        _RANDOM_82 = `RANDOM;
        _RANDOM_83 = `RANDOM;
        _RANDOM_84 = `RANDOM;
        _RANDOM_85 = `RANDOM;
        _RANDOM_86 = `RANDOM;
        _RANDOM_87 = `RANDOM;
        _RANDOM_88 = `RANDOM;
        _RANDOM_89 = `RANDOM;
        _RANDOM_90 = `RANDOM;
        _RANDOM_91 = `RANDOM;
        _RANDOM_92 = `RANDOM;
        _RANDOM_93 = `RANDOM;
        _RANDOM_94 = `RANDOM;
        _RANDOM_95 = `RANDOM;
        _RANDOM_96 = `RANDOM;
        _RANDOM_97 = `RANDOM;
        _RANDOM_98 = `RANDOM;
        _RANDOM_99 = `RANDOM;
        _RANDOM_100 = `RANDOM;
        _RANDOM_101 = `RANDOM;
        _RANDOM_102 = `RANDOM;
        _RANDOM_103 = `RANDOM;
        _RANDOM_104 = `RANDOM;
        _RANDOM_105 = `RANDOM;
        _RANDOM_106 = `RANDOM;
        _RANDOM_107 = `RANDOM;
        _RANDOM_108 = `RANDOM;
        _RANDOM_109 = `RANDOM;
        _RANDOM_110 = `RANDOM;
        _RANDOM_111 = `RANDOM;
        _RANDOM_112 = `RANDOM;
        _RANDOM_113 = `RANDOM;
        _RANDOM_114 = `RANDOM;
        _RANDOM_115 = `RANDOM;
        _RANDOM_116 = `RANDOM;
        _RANDOM_117 = `RANDOM;
        _RANDOM_118 = `RANDOM;
        _RANDOM_119 = `RANDOM;
        _RANDOM_120 = `RANDOM;
        _RANDOM_121 = `RANDOM;
        _RANDOM_122 = `RANDOM;
        _RANDOM_123 = `RANDOM;
        _RANDOM_124 = `RANDOM;
        _RANDOM_125 = `RANDOM;
        _RANDOM_126 = `RANDOM;
        _RANDOM_127 = `RANDOM;
        _RANDOM_128 = `RANDOM;
        _RANDOM_129 = `RANDOM;
        _RANDOM_130 = `RANDOM;
        _RANDOM_131 = `RANDOM;
        _RANDOM_132 = `RANDOM;
        _RANDOM_133 = `RANDOM;
        _RANDOM_134 = `RANDOM;
        _RANDOM_135 = `RANDOM;
        _RANDOM_136 = `RANDOM;
        _RANDOM_137 = `RANDOM;
        _RANDOM_138 = `RANDOM;
        _RANDOM_139 = `RANDOM;
        _RANDOM_140 = `RANDOM;
        _RANDOM_141 = `RANDOM;
        _RANDOM_142 = `RANDOM;
        _RANDOM_143 = `RANDOM;
        _RANDOM_144 = `RANDOM;
        _RANDOM_145 = `RANDOM;
        _RANDOM_146 = `RANDOM;
        _RANDOM_147 = `RANDOM;
        _RANDOM_148 = `RANDOM;
        _RANDOM_149 = `RANDOM;
        _RANDOM_150 = `RANDOM;
        _RANDOM_151 = `RANDOM;
        pipelined_writes_0_valid = _RANDOM_0[0];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_addr = _RANDOM_0[8:1];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_0_0 = {_RANDOM_0[31:9], _RANDOM_1[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_1_0 = {_RANDOM_1[31:9], _RANDOM_2[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_2_0 = {_RANDOM_2[31:9], _RANDOM_3[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_3_0 = {_RANDOM_3[31:9], _RANDOM_4[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_4_0 = {_RANDOM_4[31:9], _RANDOM_5[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_5_0 = {_RANDOM_5[31:9], _RANDOM_6[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_6_0 = {_RANDOM_6[31:9], _RANDOM_7[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_7_0 = {_RANDOM_7[31:9], _RANDOM_8[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_8_0 = {_RANDOM_8[31:9], _RANDOM_9[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_9_0 = {_RANDOM_9[31:9], _RANDOM_10[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_10_0 = {_RANDOM_10[31:9], _RANDOM_11[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_11_0 = {_RANDOM_11[31:9], _RANDOM_12[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_12_0 = {_RANDOM_12[31:9], _RANDOM_13[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_13_0 = {_RANDOM_13[31:9], _RANDOM_14[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_14_0 = {_RANDOM_14[31:9], _RANDOM_15[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_data_15_0 = {_RANDOM_15[31:9], _RANDOM_16[8:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_acc = _RANDOM_16[9];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_0 = _RANDOM_16[10];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_1 = _RANDOM_16[11];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_2 = _RANDOM_16[12];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_3 = _RANDOM_16[13];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_4 = _RANDOM_16[14];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_5 = _RANDOM_16[15];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_6 = _RANDOM_16[16];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_7 = _RANDOM_16[17];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_8 = _RANDOM_16[18];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_9 = _RANDOM_16[19];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_10 = _RANDOM_16[20];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_11 = _RANDOM_16[21];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_12 = _RANDOM_16[22];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_13 = _RANDOM_16[23];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_14 = _RANDOM_16[24];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_15 = _RANDOM_16[25];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_16 = _RANDOM_16[26];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_17 = _RANDOM_16[27];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_18 = _RANDOM_16[28];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_19 = _RANDOM_16[29];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_20 = _RANDOM_16[30];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_21 = _RANDOM_16[31];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_22 = _RANDOM_17[0];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_23 = _RANDOM_17[1];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_24 = _RANDOM_17[2];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_25 = _RANDOM_17[3];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_26 = _RANDOM_17[4];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_27 = _RANDOM_17[5];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_28 = _RANDOM_17[6];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_29 = _RANDOM_17[7];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_30 = _RANDOM_17[8];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_31 = _RANDOM_17[9];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_32 = _RANDOM_17[10];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_33 = _RANDOM_17[11];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_34 = _RANDOM_17[12];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_35 = _RANDOM_17[13];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_36 = _RANDOM_17[14];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_37 = _RANDOM_17[15];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_38 = _RANDOM_17[16];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_39 = _RANDOM_17[17];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_40 = _RANDOM_17[18];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_41 = _RANDOM_17[19];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_42 = _RANDOM_17[20];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_43 = _RANDOM_17[21];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_44 = _RANDOM_17[22];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_45 = _RANDOM_17[23];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_46 = _RANDOM_17[24];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_47 = _RANDOM_17[25];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_48 = _RANDOM_17[26];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_49 = _RANDOM_17[27];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_50 = _RANDOM_17[28];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_51 = _RANDOM_17[29];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_52 = _RANDOM_17[30];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_53 = _RANDOM_17[31];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_54 = _RANDOM_18[0];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_55 = _RANDOM_18[1];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_56 = _RANDOM_18[2];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_57 = _RANDOM_18[3];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_58 = _RANDOM_18[4];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_59 = _RANDOM_18[5];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_60 = _RANDOM_18[6];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_61 = _RANDOM_18[7];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_62 = _RANDOM_18[8];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_0_bits_mask_63 = _RANDOM_18[9];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_valid = _RANDOM_18[10];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_addr = _RANDOM_18[18:11];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_0_0 = {_RANDOM_18[31:19], _RANDOM_19[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_1_0 = {_RANDOM_19[31:19], _RANDOM_20[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_2_0 = {_RANDOM_20[31:19], _RANDOM_21[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_3_0 = {_RANDOM_21[31:19], _RANDOM_22[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_4_0 = {_RANDOM_22[31:19], _RANDOM_23[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_5_0 = {_RANDOM_23[31:19], _RANDOM_24[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_6_0 = {_RANDOM_24[31:19], _RANDOM_25[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_7_0 = {_RANDOM_25[31:19], _RANDOM_26[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_8_0 = {_RANDOM_26[31:19], _RANDOM_27[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_9_0 = {_RANDOM_27[31:19], _RANDOM_28[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_10_0 = {_RANDOM_28[31:19], _RANDOM_29[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_11_0 = {_RANDOM_29[31:19], _RANDOM_30[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_12_0 = {_RANDOM_30[31:19], _RANDOM_31[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_13_0 = {_RANDOM_31[31:19], _RANDOM_32[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_14_0 = {_RANDOM_32[31:19], _RANDOM_33[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_data_15_0 = {_RANDOM_33[31:19], _RANDOM_34[18:0]};	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_acc = _RANDOM_34[19];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_0 = _RANDOM_34[20];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_1 = _RANDOM_34[21];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_2 = _RANDOM_34[22];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_3 = _RANDOM_34[23];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_4 = _RANDOM_34[24];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_5 = _RANDOM_34[25];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_6 = _RANDOM_34[26];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_7 = _RANDOM_34[27];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_8 = _RANDOM_34[28];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_9 = _RANDOM_34[29];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_10 = _RANDOM_34[30];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_11 = _RANDOM_34[31];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_12 = _RANDOM_35[0];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_13 = _RANDOM_35[1];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_14 = _RANDOM_35[2];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_15 = _RANDOM_35[3];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_16 = _RANDOM_35[4];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_17 = _RANDOM_35[5];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_18 = _RANDOM_35[6];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_19 = _RANDOM_35[7];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_20 = _RANDOM_35[8];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_21 = _RANDOM_35[9];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_22 = _RANDOM_35[10];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_23 = _RANDOM_35[11];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_24 = _RANDOM_35[12];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_25 = _RANDOM_35[13];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_26 = _RANDOM_35[14];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_27 = _RANDOM_35[15];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_28 = _RANDOM_35[16];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_29 = _RANDOM_35[17];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_30 = _RANDOM_35[18];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_31 = _RANDOM_35[19];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_32 = _RANDOM_35[20];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_33 = _RANDOM_35[21];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_34 = _RANDOM_35[22];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_35 = _RANDOM_35[23];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_36 = _RANDOM_35[24];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_37 = _RANDOM_35[25];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_38 = _RANDOM_35[26];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_39 = _RANDOM_35[27];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_40 = _RANDOM_35[28];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_41 = _RANDOM_35[29];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_42 = _RANDOM_35[30];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_43 = _RANDOM_35[31];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_44 = _RANDOM_36[0];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_45 = _RANDOM_36[1];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_46 = _RANDOM_36[2];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_47 = _RANDOM_36[3];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_48 = _RANDOM_36[4];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_49 = _RANDOM_36[5];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_50 = _RANDOM_36[6];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_51 = _RANDOM_36[7];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_52 = _RANDOM_36[8];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_53 = _RANDOM_36[9];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_54 = _RANDOM_36[10];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_55 = _RANDOM_36[11];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_56 = _RANDOM_36[12];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_57 = _RANDOM_36[13];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_58 = _RANDOM_36[14];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_59 = _RANDOM_36[15];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_60 = _RANDOM_36[16];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_61 = _RANDOM_36[17];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_62 = _RANDOM_36[18];	// @[AccumulatorMem.scala:113:29]
        pipelined_writes_1_bits_mask_63 = _RANDOM_36[19];	// @[AccumulatorMem.scala:113:29]
        w_q_0_valid = _RANDOM_36[20];	// @[AccumulatorMem.scala:113:29, :203:20]
        w_q_0_data_0 = _RANDOM_36[28:21];	// @[AccumulatorMem.scala:113:29, :203:20]
        w_q_0_data_1 = {_RANDOM_36[31:29], _RANDOM_37[4:0]};	// @[AccumulatorMem.scala:113:29, :203:20]
        w_q_0_data_2 = _RANDOM_37[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_3 = _RANDOM_37[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_4 = _RANDOM_37[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_5 = {_RANDOM_37[31:29], _RANDOM_38[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_6 = _RANDOM_38[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_7 = _RANDOM_38[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_8 = _RANDOM_38[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_9 = {_RANDOM_38[31:29], _RANDOM_39[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_10 = _RANDOM_39[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_11 = _RANDOM_39[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_12 = _RANDOM_39[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_13 = {_RANDOM_39[31:29], _RANDOM_40[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_14 = _RANDOM_40[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_15 = _RANDOM_40[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_16 = _RANDOM_40[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_17 = {_RANDOM_40[31:29], _RANDOM_41[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_18 = _RANDOM_41[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_19 = _RANDOM_41[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_20 = _RANDOM_41[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_21 = {_RANDOM_41[31:29], _RANDOM_42[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_22 = _RANDOM_42[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_23 = _RANDOM_42[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_24 = _RANDOM_42[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_25 = {_RANDOM_42[31:29], _RANDOM_43[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_26 = _RANDOM_43[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_27 = _RANDOM_43[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_28 = _RANDOM_43[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_29 = {_RANDOM_43[31:29], _RANDOM_44[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_30 = _RANDOM_44[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_31 = _RANDOM_44[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_32 = _RANDOM_44[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_33 = {_RANDOM_44[31:29], _RANDOM_45[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_34 = _RANDOM_45[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_35 = _RANDOM_45[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_36 = _RANDOM_45[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_37 = {_RANDOM_45[31:29], _RANDOM_46[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_38 = _RANDOM_46[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_39 = _RANDOM_46[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_40 = _RANDOM_46[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_41 = {_RANDOM_46[31:29], _RANDOM_47[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_42 = _RANDOM_47[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_43 = _RANDOM_47[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_44 = _RANDOM_47[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_45 = {_RANDOM_47[31:29], _RANDOM_48[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_46 = _RANDOM_48[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_47 = _RANDOM_48[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_48 = _RANDOM_48[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_49 = {_RANDOM_48[31:29], _RANDOM_49[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_50 = _RANDOM_49[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_51 = _RANDOM_49[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_52 = _RANDOM_49[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_53 = {_RANDOM_49[31:29], _RANDOM_50[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_54 = _RANDOM_50[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_55 = _RANDOM_50[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_56 = _RANDOM_50[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_57 = {_RANDOM_50[31:29], _RANDOM_51[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_58 = _RANDOM_51[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_59 = _RANDOM_51[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_60 = _RANDOM_51[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_61 = {_RANDOM_51[31:29], _RANDOM_52[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_62 = _RANDOM_52[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_data_63 = _RANDOM_52[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_0 = _RANDOM_52[21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_1 = _RANDOM_52[22];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_2 = _RANDOM_52[23];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_3 = _RANDOM_52[24];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_4 = _RANDOM_52[25];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_5 = _RANDOM_52[26];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_6 = _RANDOM_52[27];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_7 = _RANDOM_52[28];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_8 = _RANDOM_52[29];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_9 = _RANDOM_52[30];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_10 = _RANDOM_52[31];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_11 = _RANDOM_53[0];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_12 = _RANDOM_53[1];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_13 = _RANDOM_53[2];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_14 = _RANDOM_53[3];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_15 = _RANDOM_53[4];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_16 = _RANDOM_53[5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_17 = _RANDOM_53[6];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_18 = _RANDOM_53[7];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_19 = _RANDOM_53[8];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_20 = _RANDOM_53[9];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_21 = _RANDOM_53[10];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_22 = _RANDOM_53[11];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_23 = _RANDOM_53[12];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_24 = _RANDOM_53[13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_25 = _RANDOM_53[14];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_26 = _RANDOM_53[15];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_27 = _RANDOM_53[16];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_28 = _RANDOM_53[17];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_29 = _RANDOM_53[18];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_30 = _RANDOM_53[19];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_31 = _RANDOM_53[20];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_32 = _RANDOM_53[21];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_33 = _RANDOM_53[22];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_34 = _RANDOM_53[23];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_35 = _RANDOM_53[24];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_36 = _RANDOM_53[25];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_37 = _RANDOM_53[26];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_38 = _RANDOM_53[27];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_39 = _RANDOM_53[28];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_40 = _RANDOM_53[29];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_41 = _RANDOM_53[30];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_42 = _RANDOM_53[31];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_43 = _RANDOM_54[0];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_44 = _RANDOM_54[1];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_45 = _RANDOM_54[2];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_46 = _RANDOM_54[3];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_47 = _RANDOM_54[4];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_48 = _RANDOM_54[5];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_49 = _RANDOM_54[6];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_50 = _RANDOM_54[7];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_51 = _RANDOM_54[8];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_52 = _RANDOM_54[9];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_53 = _RANDOM_54[10];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_54 = _RANDOM_54[11];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_55 = _RANDOM_54[12];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_56 = _RANDOM_54[13];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_57 = _RANDOM_54[14];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_58 = _RANDOM_54[15];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_59 = _RANDOM_54[16];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_60 = _RANDOM_54[17];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_61 = _RANDOM_54[18];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_62 = _RANDOM_54[19];	// @[AccumulatorMem.scala:203:20]
        w_q_0_mask_63 = _RANDOM_54[20];	// @[AccumulatorMem.scala:203:20]
        w_q_0_addr = _RANDOM_54[27:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_valid = _RANDOM_54[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_0 = {_RANDOM_54[31:29], _RANDOM_55[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_1 = _RANDOM_55[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_2 = _RANDOM_55[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_3 = _RANDOM_55[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_4 = {_RANDOM_55[31:29], _RANDOM_56[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_5 = _RANDOM_56[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_6 = _RANDOM_56[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_7 = _RANDOM_56[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_8 = {_RANDOM_56[31:29], _RANDOM_57[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_9 = _RANDOM_57[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_10 = _RANDOM_57[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_11 = _RANDOM_57[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_12 = {_RANDOM_57[31:29], _RANDOM_58[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_13 = _RANDOM_58[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_14 = _RANDOM_58[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_15 = _RANDOM_58[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_16 = {_RANDOM_58[31:29], _RANDOM_59[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_17 = _RANDOM_59[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_18 = _RANDOM_59[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_19 = _RANDOM_59[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_20 = {_RANDOM_59[31:29], _RANDOM_60[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_21 = _RANDOM_60[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_22 = _RANDOM_60[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_23 = _RANDOM_60[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_24 = {_RANDOM_60[31:29], _RANDOM_61[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_25 = _RANDOM_61[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_26 = _RANDOM_61[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_27 = _RANDOM_61[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_28 = {_RANDOM_61[31:29], _RANDOM_62[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_29 = _RANDOM_62[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_30 = _RANDOM_62[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_31 = _RANDOM_62[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_32 = {_RANDOM_62[31:29], _RANDOM_63[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_33 = _RANDOM_63[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_34 = _RANDOM_63[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_35 = _RANDOM_63[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_36 = {_RANDOM_63[31:29], _RANDOM_64[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_37 = _RANDOM_64[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_38 = _RANDOM_64[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_39 = _RANDOM_64[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_40 = {_RANDOM_64[31:29], _RANDOM_65[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_41 = _RANDOM_65[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_42 = _RANDOM_65[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_43 = _RANDOM_65[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_44 = {_RANDOM_65[31:29], _RANDOM_66[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_45 = _RANDOM_66[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_46 = _RANDOM_66[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_47 = _RANDOM_66[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_48 = {_RANDOM_66[31:29], _RANDOM_67[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_49 = _RANDOM_67[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_50 = _RANDOM_67[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_51 = _RANDOM_67[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_52 = {_RANDOM_67[31:29], _RANDOM_68[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_53 = _RANDOM_68[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_54 = _RANDOM_68[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_55 = _RANDOM_68[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_56 = {_RANDOM_68[31:29], _RANDOM_69[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_57 = _RANDOM_69[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_58 = _RANDOM_69[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_59 = _RANDOM_69[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_60 = {_RANDOM_69[31:29], _RANDOM_70[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_61 = _RANDOM_70[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_62 = _RANDOM_70[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_data_63 = _RANDOM_70[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_0 = _RANDOM_70[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_1 = _RANDOM_70[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_2 = _RANDOM_70[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_3 = _RANDOM_71[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_4 = _RANDOM_71[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_5 = _RANDOM_71[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_6 = _RANDOM_71[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_7 = _RANDOM_71[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_8 = _RANDOM_71[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_9 = _RANDOM_71[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_10 = _RANDOM_71[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_11 = _RANDOM_71[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_12 = _RANDOM_71[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_13 = _RANDOM_71[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_14 = _RANDOM_71[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_15 = _RANDOM_71[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_16 = _RANDOM_71[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_17 = _RANDOM_71[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_18 = _RANDOM_71[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_19 = _RANDOM_71[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_20 = _RANDOM_71[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_21 = _RANDOM_71[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_22 = _RANDOM_71[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_23 = _RANDOM_71[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_24 = _RANDOM_71[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_25 = _RANDOM_71[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_26 = _RANDOM_71[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_27 = _RANDOM_71[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_28 = _RANDOM_71[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_29 = _RANDOM_71[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_30 = _RANDOM_71[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_31 = _RANDOM_71[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_32 = _RANDOM_71[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_33 = _RANDOM_71[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_34 = _RANDOM_71[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_35 = _RANDOM_72[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_36 = _RANDOM_72[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_37 = _RANDOM_72[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_38 = _RANDOM_72[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_39 = _RANDOM_72[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_40 = _RANDOM_72[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_41 = _RANDOM_72[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_42 = _RANDOM_72[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_43 = _RANDOM_72[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_44 = _RANDOM_72[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_45 = _RANDOM_72[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_46 = _RANDOM_72[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_47 = _RANDOM_72[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_48 = _RANDOM_72[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_49 = _RANDOM_72[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_50 = _RANDOM_72[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_51 = _RANDOM_72[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_52 = _RANDOM_72[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_53 = _RANDOM_72[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_54 = _RANDOM_72[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_55 = _RANDOM_72[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_56 = _RANDOM_72[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_57 = _RANDOM_72[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_58 = _RANDOM_72[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_59 = _RANDOM_72[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_60 = _RANDOM_72[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_61 = _RANDOM_72[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_62 = _RANDOM_72[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_mask_63 = _RANDOM_72[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_addr = {_RANDOM_72[31:29], _RANDOM_73[3:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_valid = _RANDOM_73[4];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_0 = _RANDOM_73[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_1 = _RANDOM_73[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_2 = _RANDOM_73[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_3 = {_RANDOM_73[31:29], _RANDOM_74[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_4 = _RANDOM_74[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_5 = _RANDOM_74[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_6 = _RANDOM_74[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_7 = {_RANDOM_74[31:29], _RANDOM_75[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_8 = _RANDOM_75[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_9 = _RANDOM_75[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_10 = _RANDOM_75[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_11 = {_RANDOM_75[31:29], _RANDOM_76[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_12 = _RANDOM_76[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_13 = _RANDOM_76[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_14 = _RANDOM_76[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_15 = {_RANDOM_76[31:29], _RANDOM_77[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_16 = _RANDOM_77[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_17 = _RANDOM_77[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_18 = _RANDOM_77[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_19 = {_RANDOM_77[31:29], _RANDOM_78[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_20 = _RANDOM_78[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_21 = _RANDOM_78[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_22 = _RANDOM_78[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_23 = {_RANDOM_78[31:29], _RANDOM_79[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_24 = _RANDOM_79[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_25 = _RANDOM_79[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_26 = _RANDOM_79[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_27 = {_RANDOM_79[31:29], _RANDOM_80[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_28 = _RANDOM_80[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_29 = _RANDOM_80[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_30 = _RANDOM_80[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_31 = {_RANDOM_80[31:29], _RANDOM_81[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_32 = _RANDOM_81[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_33 = _RANDOM_81[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_34 = _RANDOM_81[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_35 = {_RANDOM_81[31:29], _RANDOM_82[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_36 = _RANDOM_82[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_37 = _RANDOM_82[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_38 = _RANDOM_82[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_39 = {_RANDOM_82[31:29], _RANDOM_83[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_40 = _RANDOM_83[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_41 = _RANDOM_83[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_42 = _RANDOM_83[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_43 = {_RANDOM_83[31:29], _RANDOM_84[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_44 = _RANDOM_84[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_45 = _RANDOM_84[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_46 = _RANDOM_84[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_47 = {_RANDOM_84[31:29], _RANDOM_85[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_48 = _RANDOM_85[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_49 = _RANDOM_85[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_50 = _RANDOM_85[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_51 = {_RANDOM_85[31:29], _RANDOM_86[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_52 = _RANDOM_86[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_53 = _RANDOM_86[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_54 = _RANDOM_86[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_55 = {_RANDOM_86[31:29], _RANDOM_87[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_56 = _RANDOM_87[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_57 = _RANDOM_87[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_58 = _RANDOM_87[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_59 = {_RANDOM_87[31:29], _RANDOM_88[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_60 = _RANDOM_88[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_61 = _RANDOM_88[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_62 = _RANDOM_88[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_data_63 = {_RANDOM_88[31:29], _RANDOM_89[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_0 = _RANDOM_89[5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_1 = _RANDOM_89[6];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_2 = _RANDOM_89[7];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_3 = _RANDOM_89[8];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_4 = _RANDOM_89[9];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_5 = _RANDOM_89[10];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_6 = _RANDOM_89[11];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_7 = _RANDOM_89[12];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_8 = _RANDOM_89[13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_9 = _RANDOM_89[14];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_10 = _RANDOM_89[15];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_11 = _RANDOM_89[16];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_12 = _RANDOM_89[17];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_13 = _RANDOM_89[18];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_14 = _RANDOM_89[19];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_15 = _RANDOM_89[20];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_16 = _RANDOM_89[21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_17 = _RANDOM_89[22];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_18 = _RANDOM_89[23];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_19 = _RANDOM_89[24];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_20 = _RANDOM_89[25];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_21 = _RANDOM_89[26];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_22 = _RANDOM_89[27];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_23 = _RANDOM_89[28];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_24 = _RANDOM_89[29];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_25 = _RANDOM_89[30];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_26 = _RANDOM_89[31];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_27 = _RANDOM_90[0];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_28 = _RANDOM_90[1];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_29 = _RANDOM_90[2];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_30 = _RANDOM_90[3];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_31 = _RANDOM_90[4];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_32 = _RANDOM_90[5];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_33 = _RANDOM_90[6];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_34 = _RANDOM_90[7];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_35 = _RANDOM_90[8];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_36 = _RANDOM_90[9];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_37 = _RANDOM_90[10];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_38 = _RANDOM_90[11];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_39 = _RANDOM_90[12];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_40 = _RANDOM_90[13];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_41 = _RANDOM_90[14];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_42 = _RANDOM_90[15];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_43 = _RANDOM_90[16];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_44 = _RANDOM_90[17];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_45 = _RANDOM_90[18];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_46 = _RANDOM_90[19];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_47 = _RANDOM_90[20];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_48 = _RANDOM_90[21];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_49 = _RANDOM_90[22];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_50 = _RANDOM_90[23];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_51 = _RANDOM_90[24];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_52 = _RANDOM_90[25];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_53 = _RANDOM_90[26];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_54 = _RANDOM_90[27];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_55 = _RANDOM_90[28];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_56 = _RANDOM_90[29];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_57 = _RANDOM_90[30];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_58 = _RANDOM_90[31];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_59 = _RANDOM_91[0];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_60 = _RANDOM_91[1];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_61 = _RANDOM_91[2];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_62 = _RANDOM_91[3];	// @[AccumulatorMem.scala:203:20]
        w_q_2_mask_63 = _RANDOM_91[4];	// @[AccumulatorMem.scala:203:20]
        w_q_2_addr = _RANDOM_91[11:5];	// @[AccumulatorMem.scala:203:20]
        w_q_head = _RANDOM_91[14:12];	// @[AccumulatorMem.scala:203:20, :222:29]
        w_q_tail = _RANDOM_91[17:15];	// @[AccumulatorMem.scala:203:20, :223:29]
        w_q_1_0_valid = _RANDOM_91[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_0 = _RANDOM_91[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_1 = {_RANDOM_91[31:29], _RANDOM_92[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_2 = _RANDOM_92[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_3 = _RANDOM_92[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_4 = _RANDOM_92[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_5 = {_RANDOM_92[31:29], _RANDOM_93[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_6 = _RANDOM_93[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_7 = _RANDOM_93[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_8 = _RANDOM_93[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_9 = {_RANDOM_93[31:29], _RANDOM_94[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_10 = _RANDOM_94[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_11 = _RANDOM_94[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_12 = _RANDOM_94[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_13 = {_RANDOM_94[31:29], _RANDOM_95[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_14 = _RANDOM_95[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_15 = _RANDOM_95[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_16 = _RANDOM_95[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_17 = {_RANDOM_95[31:29], _RANDOM_96[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_18 = _RANDOM_96[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_19 = _RANDOM_96[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_20 = _RANDOM_96[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_21 = {_RANDOM_96[31:29], _RANDOM_97[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_22 = _RANDOM_97[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_23 = _RANDOM_97[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_24 = _RANDOM_97[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_25 = {_RANDOM_97[31:29], _RANDOM_98[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_26 = _RANDOM_98[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_27 = _RANDOM_98[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_28 = _RANDOM_98[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_29 = {_RANDOM_98[31:29], _RANDOM_99[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_30 = _RANDOM_99[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_31 = _RANDOM_99[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_32 = _RANDOM_99[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_33 = {_RANDOM_99[31:29], _RANDOM_100[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_34 = _RANDOM_100[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_35 = _RANDOM_100[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_36 = _RANDOM_100[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_37 = {_RANDOM_100[31:29], _RANDOM_101[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_38 = _RANDOM_101[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_39 = _RANDOM_101[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_40 = _RANDOM_101[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_41 = {_RANDOM_101[31:29], _RANDOM_102[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_42 = _RANDOM_102[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_43 = _RANDOM_102[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_44 = _RANDOM_102[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_45 = {_RANDOM_102[31:29], _RANDOM_103[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_46 = _RANDOM_103[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_47 = _RANDOM_103[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_48 = _RANDOM_103[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_49 = {_RANDOM_103[31:29], _RANDOM_104[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_50 = _RANDOM_104[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_51 = _RANDOM_104[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_52 = _RANDOM_104[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_53 = {_RANDOM_104[31:29], _RANDOM_105[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_54 = _RANDOM_105[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_55 = _RANDOM_105[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_56 = _RANDOM_105[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_57 = {_RANDOM_105[31:29], _RANDOM_106[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_58 = _RANDOM_106[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_59 = _RANDOM_106[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_60 = _RANDOM_106[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_61 = {_RANDOM_106[31:29], _RANDOM_107[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_62 = _RANDOM_107[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_data_63 = _RANDOM_107[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_0 = _RANDOM_107[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_1 = _RANDOM_107[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_2 = _RANDOM_107[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_3 = _RANDOM_107[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_4 = _RANDOM_107[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_5 = _RANDOM_107[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_6 = _RANDOM_107[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_7 = _RANDOM_107[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_8 = _RANDOM_107[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_9 = _RANDOM_107[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_10 = _RANDOM_107[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_11 = _RANDOM_108[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_12 = _RANDOM_108[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_13 = _RANDOM_108[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_14 = _RANDOM_108[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_15 = _RANDOM_108[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_16 = _RANDOM_108[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_17 = _RANDOM_108[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_18 = _RANDOM_108[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_19 = _RANDOM_108[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_20 = _RANDOM_108[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_21 = _RANDOM_108[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_22 = _RANDOM_108[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_23 = _RANDOM_108[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_24 = _RANDOM_108[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_25 = _RANDOM_108[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_26 = _RANDOM_108[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_27 = _RANDOM_108[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_28 = _RANDOM_108[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_29 = _RANDOM_108[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_30 = _RANDOM_108[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_31 = _RANDOM_108[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_32 = _RANDOM_108[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_33 = _RANDOM_108[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_34 = _RANDOM_108[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_35 = _RANDOM_108[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_36 = _RANDOM_108[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_37 = _RANDOM_108[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_38 = _RANDOM_108[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_39 = _RANDOM_108[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_40 = _RANDOM_108[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_41 = _RANDOM_108[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_42 = _RANDOM_108[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_43 = _RANDOM_109[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_44 = _RANDOM_109[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_45 = _RANDOM_109[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_46 = _RANDOM_109[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_47 = _RANDOM_109[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_48 = _RANDOM_109[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_49 = _RANDOM_109[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_50 = _RANDOM_109[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_51 = _RANDOM_109[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_52 = _RANDOM_109[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_53 = _RANDOM_109[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_54 = _RANDOM_109[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_55 = _RANDOM_109[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_56 = _RANDOM_109[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_57 = _RANDOM_109[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_58 = _RANDOM_109[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_59 = _RANDOM_109[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_60 = _RANDOM_109[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_61 = _RANDOM_109[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_62 = _RANDOM_109[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_mask_63 = _RANDOM_109[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_0_addr = _RANDOM_109[27:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_valid = _RANDOM_109[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_0 = {_RANDOM_109[31:29], _RANDOM_110[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_1 = _RANDOM_110[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_2 = _RANDOM_110[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_3 = _RANDOM_110[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_4 = {_RANDOM_110[31:29], _RANDOM_111[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_5 = _RANDOM_111[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_6 = _RANDOM_111[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_7 = _RANDOM_111[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_8 = {_RANDOM_111[31:29], _RANDOM_112[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_9 = _RANDOM_112[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_10 = _RANDOM_112[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_11 = _RANDOM_112[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_12 = {_RANDOM_112[31:29], _RANDOM_113[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_13 = _RANDOM_113[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_14 = _RANDOM_113[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_15 = _RANDOM_113[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_16 = {_RANDOM_113[31:29], _RANDOM_114[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_17 = _RANDOM_114[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_18 = _RANDOM_114[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_19 = _RANDOM_114[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_20 = {_RANDOM_114[31:29], _RANDOM_115[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_21 = _RANDOM_115[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_22 = _RANDOM_115[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_23 = _RANDOM_115[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_24 = {_RANDOM_115[31:29], _RANDOM_116[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_25 = _RANDOM_116[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_26 = _RANDOM_116[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_27 = _RANDOM_116[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_28 = {_RANDOM_116[31:29], _RANDOM_117[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_29 = _RANDOM_117[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_30 = _RANDOM_117[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_31 = _RANDOM_117[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_32 = {_RANDOM_117[31:29], _RANDOM_118[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_33 = _RANDOM_118[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_34 = _RANDOM_118[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_35 = _RANDOM_118[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_36 = {_RANDOM_118[31:29], _RANDOM_119[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_37 = _RANDOM_119[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_38 = _RANDOM_119[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_39 = _RANDOM_119[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_40 = {_RANDOM_119[31:29], _RANDOM_120[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_41 = _RANDOM_120[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_42 = _RANDOM_120[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_43 = _RANDOM_120[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_44 = {_RANDOM_120[31:29], _RANDOM_121[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_45 = _RANDOM_121[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_46 = _RANDOM_121[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_47 = _RANDOM_121[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_48 = {_RANDOM_121[31:29], _RANDOM_122[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_49 = _RANDOM_122[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_50 = _RANDOM_122[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_51 = _RANDOM_122[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_52 = {_RANDOM_122[31:29], _RANDOM_123[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_53 = _RANDOM_123[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_54 = _RANDOM_123[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_55 = _RANDOM_123[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_56 = {_RANDOM_123[31:29], _RANDOM_124[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_57 = _RANDOM_124[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_58 = _RANDOM_124[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_59 = _RANDOM_124[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_60 = {_RANDOM_124[31:29], _RANDOM_125[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_61 = _RANDOM_125[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_62 = _RANDOM_125[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_data_63 = _RANDOM_125[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_0 = _RANDOM_125[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_1 = _RANDOM_125[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_2 = _RANDOM_125[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_3 = _RANDOM_126[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_4 = _RANDOM_126[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_5 = _RANDOM_126[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_6 = _RANDOM_126[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_7 = _RANDOM_126[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_8 = _RANDOM_126[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_9 = _RANDOM_126[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_10 = _RANDOM_126[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_11 = _RANDOM_126[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_12 = _RANDOM_126[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_13 = _RANDOM_126[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_14 = _RANDOM_126[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_15 = _RANDOM_126[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_16 = _RANDOM_126[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_17 = _RANDOM_126[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_18 = _RANDOM_126[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_19 = _RANDOM_126[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_20 = _RANDOM_126[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_21 = _RANDOM_126[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_22 = _RANDOM_126[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_23 = _RANDOM_126[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_24 = _RANDOM_126[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_25 = _RANDOM_126[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_26 = _RANDOM_126[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_27 = _RANDOM_126[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_28 = _RANDOM_126[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_29 = _RANDOM_126[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_30 = _RANDOM_126[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_31 = _RANDOM_126[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_32 = _RANDOM_126[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_33 = _RANDOM_126[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_34 = _RANDOM_126[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_35 = _RANDOM_127[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_36 = _RANDOM_127[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_37 = _RANDOM_127[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_38 = _RANDOM_127[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_39 = _RANDOM_127[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_40 = _RANDOM_127[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_41 = _RANDOM_127[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_42 = _RANDOM_127[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_43 = _RANDOM_127[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_44 = _RANDOM_127[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_45 = _RANDOM_127[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_46 = _RANDOM_127[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_47 = _RANDOM_127[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_48 = _RANDOM_127[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_49 = _RANDOM_127[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_50 = _RANDOM_127[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_51 = _RANDOM_127[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_52 = _RANDOM_127[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_53 = _RANDOM_127[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_54 = _RANDOM_127[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_55 = _RANDOM_127[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_56 = _RANDOM_127[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_57 = _RANDOM_127[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_58 = _RANDOM_127[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_59 = _RANDOM_127[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_60 = _RANDOM_127[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_61 = _RANDOM_127[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_62 = _RANDOM_127[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_mask_63 = _RANDOM_127[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_1_addr = {_RANDOM_127[31:29], _RANDOM_128[3:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_valid = _RANDOM_128[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_0 = _RANDOM_128[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_1 = _RANDOM_128[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_2 = _RANDOM_128[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_3 = {_RANDOM_128[31:29], _RANDOM_129[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_4 = _RANDOM_129[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_5 = _RANDOM_129[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_6 = _RANDOM_129[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_7 = {_RANDOM_129[31:29], _RANDOM_130[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_8 = _RANDOM_130[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_9 = _RANDOM_130[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_10 = _RANDOM_130[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_11 = {_RANDOM_130[31:29], _RANDOM_131[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_12 = _RANDOM_131[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_13 = _RANDOM_131[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_14 = _RANDOM_131[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_15 = {_RANDOM_131[31:29], _RANDOM_132[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_16 = _RANDOM_132[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_17 = _RANDOM_132[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_18 = _RANDOM_132[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_19 = {_RANDOM_132[31:29], _RANDOM_133[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_20 = _RANDOM_133[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_21 = _RANDOM_133[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_22 = _RANDOM_133[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_23 = {_RANDOM_133[31:29], _RANDOM_134[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_24 = _RANDOM_134[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_25 = _RANDOM_134[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_26 = _RANDOM_134[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_27 = {_RANDOM_134[31:29], _RANDOM_135[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_28 = _RANDOM_135[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_29 = _RANDOM_135[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_30 = _RANDOM_135[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_31 = {_RANDOM_135[31:29], _RANDOM_136[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_32 = _RANDOM_136[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_33 = _RANDOM_136[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_34 = _RANDOM_136[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_35 = {_RANDOM_136[31:29], _RANDOM_137[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_36 = _RANDOM_137[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_37 = _RANDOM_137[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_38 = _RANDOM_137[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_39 = {_RANDOM_137[31:29], _RANDOM_138[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_40 = _RANDOM_138[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_41 = _RANDOM_138[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_42 = _RANDOM_138[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_43 = {_RANDOM_138[31:29], _RANDOM_139[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_44 = _RANDOM_139[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_45 = _RANDOM_139[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_46 = _RANDOM_139[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_47 = {_RANDOM_139[31:29], _RANDOM_140[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_48 = _RANDOM_140[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_49 = _RANDOM_140[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_50 = _RANDOM_140[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_51 = {_RANDOM_140[31:29], _RANDOM_141[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_52 = _RANDOM_141[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_53 = _RANDOM_141[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_54 = _RANDOM_141[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_55 = {_RANDOM_141[31:29], _RANDOM_142[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_56 = _RANDOM_142[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_57 = _RANDOM_142[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_58 = _RANDOM_142[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_59 = {_RANDOM_142[31:29], _RANDOM_143[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_60 = _RANDOM_143[12:5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_61 = _RANDOM_143[20:13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_62 = _RANDOM_143[28:21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_data_63 = {_RANDOM_143[31:29], _RANDOM_144[4:0]};	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_0 = _RANDOM_144[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_1 = _RANDOM_144[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_2 = _RANDOM_144[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_3 = _RANDOM_144[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_4 = _RANDOM_144[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_5 = _RANDOM_144[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_6 = _RANDOM_144[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_7 = _RANDOM_144[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_8 = _RANDOM_144[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_9 = _RANDOM_144[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_10 = _RANDOM_144[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_11 = _RANDOM_144[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_12 = _RANDOM_144[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_13 = _RANDOM_144[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_14 = _RANDOM_144[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_15 = _RANDOM_144[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_16 = _RANDOM_144[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_17 = _RANDOM_144[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_18 = _RANDOM_144[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_19 = _RANDOM_144[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_20 = _RANDOM_144[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_21 = _RANDOM_144[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_22 = _RANDOM_144[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_23 = _RANDOM_144[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_24 = _RANDOM_144[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_25 = _RANDOM_144[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_26 = _RANDOM_144[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_27 = _RANDOM_145[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_28 = _RANDOM_145[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_29 = _RANDOM_145[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_30 = _RANDOM_145[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_31 = _RANDOM_145[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_32 = _RANDOM_145[5];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_33 = _RANDOM_145[6];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_34 = _RANDOM_145[7];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_35 = _RANDOM_145[8];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_36 = _RANDOM_145[9];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_37 = _RANDOM_145[10];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_38 = _RANDOM_145[11];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_39 = _RANDOM_145[12];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_40 = _RANDOM_145[13];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_41 = _RANDOM_145[14];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_42 = _RANDOM_145[15];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_43 = _RANDOM_145[16];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_44 = _RANDOM_145[17];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_45 = _RANDOM_145[18];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_46 = _RANDOM_145[19];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_47 = _RANDOM_145[20];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_48 = _RANDOM_145[21];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_49 = _RANDOM_145[22];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_50 = _RANDOM_145[23];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_51 = _RANDOM_145[24];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_52 = _RANDOM_145[25];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_53 = _RANDOM_145[26];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_54 = _RANDOM_145[27];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_55 = _RANDOM_145[28];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_56 = _RANDOM_145[29];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_57 = _RANDOM_145[30];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_58 = _RANDOM_145[31];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_59 = _RANDOM_146[0];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_60 = _RANDOM_146[1];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_61 = _RANDOM_146[2];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_62 = _RANDOM_146[3];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_mask_63 = _RANDOM_146[4];	// @[AccumulatorMem.scala:203:20]
        w_q_1_2_addr = _RANDOM_146[11:5];	// @[AccumulatorMem.scala:203:20]
        w_q_head_1 = _RANDOM_146[14:12];	// @[AccumulatorMem.scala:203:20, :222:29]
        w_q_tail_1 = _RANDOM_146[17:15];	// @[AccumulatorMem.scala:203:20, :223:29]
        REG_2 = _RANDOM_146[18];	// @[AccumulatorMem.scala:203:20, :258:20]
        REG_3 = _RANDOM_146[19];	// @[AccumulatorMem.scala:203:20, :260:27]
        q_io_enq_bits_scale_REG_bits = {_RANDOM_146[31:20], _RANDOM_147[19:0]};	// @[AccumulatorMem.scala:203:20, :302:33]
        q_io_enq_bits_igelu_qb_REG = {_RANDOM_147[31:20], _RANDOM_148[19:0]};	// @[AccumulatorMem.scala:302:33, :303:36]
        q_io_enq_bits_igelu_qc_REG = {_RANDOM_148[31:20], _RANDOM_149[19:0]};	// @[AccumulatorMem.scala:303:36, :304:36]
        q_io_enq_bits_iexp_qln2_REG = {_RANDOM_149[31:20], _RANDOM_150[19:0]};	// @[AccumulatorMem.scala:304:36, :305:37]
        q_io_enq_bits_iexp_qln2_inv_REG = {_RANDOM_150[31:20], _RANDOM_151[19:0]};	// @[AccumulatorMem.scala:305:37, :306:41]
        q_io_enq_bits_act_REG = _RANDOM_151[22:20];	// @[AccumulatorMem.scala:306:41, :307:31]
        q_io_enq_valid_REG = _RANDOM_151[24];	// @[AccumulatorMem.scala:306:41, :310:28]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  mem_0 mem (	// @[AccumulatorMem.scala:184:30]
    .RW0_addr  (wen ? waddr : _bank_rdata_T_3),	// @[AccumulatorMem.scala:184:30, :191:27, :228:25, :273:55, :278:32, :285:15, Mux.scala:27:73]
    .RW0_en    (mem_bank_rdata_MPORT_en | wen),	// @[AccumulatorMem.scala:184:30, :228:25, :257:40, :273:55, :278:32]
    .RW0_clk   (clock),
    .RW0_wmode (wen),	// @[AccumulatorMem.scala:228:25, :273:55, :278:32]
    .RW0_wdata ({_wdata_WIRE_63, _wdata_WIRE_62, _wdata_WIRE_61, _wdata_WIRE_60, _wdata_WIRE_59, _wdata_WIRE_58, _wdata_WIRE_57, _wdata_WIRE_56, _wdata_WIRE_55, _wdata_WIRE_54, _wdata_WIRE_53, _wdata_WIRE_52, _wdata_WIRE_51, _wdata_WIRE_50, _wdata_WIRE_49, _wdata_WIRE_48, _wdata_WIRE_47, _wdata_WIRE_46, _wdata_WIRE_45, _wdata_WIRE_44, _wdata_WIRE_43, _wdata_WIRE_42, _wdata_WIRE_41, _wdata_WIRE_40, _wdata_WIRE_39, _wdata_WIRE_38, _wdata_WIRE_37, _wdata_WIRE_36, _wdata_WIRE_35, _wdata_WIRE_34, _wdata_WIRE_33, _wdata_WIRE_32, _wdata_WIRE_31, _wdata_WIRE_30, _wdata_WIRE_29, _wdata_WIRE_28, _wdata_WIRE_27, _wdata_WIRE_26, _wdata_WIRE_25, _wdata_WIRE_24, _wdata_WIRE_23, _wdata_WIRE_22, _wdata_WIRE_21, _wdata_WIRE_20, _wdata_WIRE_19, _wdata_WIRE_18, _wdata_WIRE_17, _wdata_WIRE_16, _wdata_WIRE_15, _wdata_WIRE_14, _wdata_WIRE_13, _wdata_WIRE_12, _wdata_WIRE_11, _wdata_WIRE_10, _wdata_WIRE_9, _wdata_WIRE_8, _wdata_WIRE_7, _wdata_WIRE_6, _wdata_WIRE_5, _wdata_WIRE_4, _wdata_WIRE_3, _wdata_WIRE_2, _wdata_WIRE_1, _wdata_WIRE}),	// @[AccumulatorMem.scala:184:30, Mux.scala:27:73]
    .RW0_wmask ({_wmask_WIRE_63, _wmask_WIRE_62, _wmask_WIRE_61, _wmask_WIRE_60, _wmask_WIRE_59, _wmask_WIRE_58, _wmask_WIRE_57, _wmask_WIRE_56, _wmask_WIRE_55, _wmask_WIRE_54, _wmask_WIRE_53, _wmask_WIRE_52, _wmask_WIRE_51, _wmask_WIRE_50, _wmask_WIRE_49, _wmask_WIRE_48, _wmask_WIRE_47, _wmask_WIRE_46, _wmask_WIRE_45, _wmask_WIRE_44, _wmask_WIRE_43, _wmask_WIRE_42, _wmask_WIRE_41, _wmask_WIRE_40, _wmask_WIRE_39, _wmask_WIRE_38, _wmask_WIRE_37, _wmask_WIRE_36, _wmask_WIRE_35, _wmask_WIRE_34, _wmask_WIRE_33, _wmask_WIRE_32, _wmask_WIRE_31, _wmask_WIRE_30, _wmask_WIRE_29, _wmask_WIRE_28, _wmask_WIRE_27, _wmask_WIRE_26, _wmask_WIRE_25, _wmask_WIRE_24, _wmask_WIRE_23, _wmask_WIRE_22, _wmask_WIRE_21, _wmask_WIRE_20, _wmask_WIRE_19, _wmask_WIRE_18, _wmask_WIRE_17, _wmask_WIRE_16, _wmask_WIRE_15, _wmask_WIRE_14, _wmask_WIRE_13, _wmask_WIRE_12, _wmask_WIRE_11, _wmask_WIRE_10, _wmask_WIRE_9, _wmask_WIRE_8, _wmask_WIRE_7, _wmask_WIRE_6, _wmask_WIRE_5, _wmask_WIRE_4, _wmask_WIRE_3, _wmask_WIRE_2, _wmask_WIRE_1, _wmask_WIRE}),	// @[AccumulatorMem.scala:184:30, Mux.scala:27:73]
    .RW0_rdata (_mem_RW0_rdata)
  );
  mem_1 mem_1 (	// @[AccumulatorMem.scala:184:30]
    .RW0_addr  (wen_1 ? waddr_1 : _bank_rdata_T_40),	// @[AccumulatorMem.scala:184:30, :191:27, :228:25, :273:55, :278:32, :285:15, Mux.scala:27:73]
    .RW0_en    (mem_1_bank_rdata_MPORT_1_en | wen_1),	// @[AccumulatorMem.scala:184:30, :228:25, :257:40, :273:55, :278:32]
    .RW0_clk   (clock),
    .RW0_wmode (wen_1),	// @[AccumulatorMem.scala:228:25, :273:55, :278:32]
    .RW0_wdata ({_wdata_WIRE_127, _wdata_WIRE_126, _wdata_WIRE_125, _wdata_WIRE_124, _wdata_WIRE_123, _wdata_WIRE_122, _wdata_WIRE_121, _wdata_WIRE_120, _wdata_WIRE_119, _wdata_WIRE_118, _wdata_WIRE_117, _wdata_WIRE_116, _wdata_WIRE_115, _wdata_WIRE_114, _wdata_WIRE_113, _wdata_WIRE_112, _wdata_WIRE_111, _wdata_WIRE_110, _wdata_WIRE_109, _wdata_WIRE_108, _wdata_WIRE_107, _wdata_WIRE_106, _wdata_WIRE_105, _wdata_WIRE_104, _wdata_WIRE_103, _wdata_WIRE_102, _wdata_WIRE_101, _wdata_WIRE_100, _wdata_WIRE_99, _wdata_WIRE_98, _wdata_WIRE_97, _wdata_WIRE_96, _wdata_WIRE_95, _wdata_WIRE_94, _wdata_WIRE_93, _wdata_WIRE_92, _wdata_WIRE_91, _wdata_WIRE_90, _wdata_WIRE_89, _wdata_WIRE_88, _wdata_WIRE_87, _wdata_WIRE_86, _wdata_WIRE_85, _wdata_WIRE_84, _wdata_WIRE_83, _wdata_WIRE_82, _wdata_WIRE_81, _wdata_WIRE_80, _wdata_WIRE_79, _wdata_WIRE_78, _wdata_WIRE_77, _wdata_WIRE_76, _wdata_WIRE_75, _wdata_WIRE_74, _wdata_WIRE_73, _wdata_WIRE_72, _wdata_WIRE_71, _wdata_WIRE_70, _wdata_WIRE_69, _wdata_WIRE_68, _wdata_WIRE_67, _wdata_WIRE_66, _wdata_WIRE_65, _wdata_WIRE_64}),	// @[AccumulatorMem.scala:184:30, Mux.scala:27:73]
    .RW0_wmask ({_wmask_WIRE_127, _wmask_WIRE_126, _wmask_WIRE_125, _wmask_WIRE_124, _wmask_WIRE_123, _wmask_WIRE_122, _wmask_WIRE_121, _wmask_WIRE_120, _wmask_WIRE_119, _wmask_WIRE_118, _wmask_WIRE_117, _wmask_WIRE_116, _wmask_WIRE_115, _wmask_WIRE_114, _wmask_WIRE_113, _wmask_WIRE_112, _wmask_WIRE_111, _wmask_WIRE_110, _wmask_WIRE_109, _wmask_WIRE_108, _wmask_WIRE_107, _wmask_WIRE_106, _wmask_WIRE_105, _wmask_WIRE_104, _wmask_WIRE_103, _wmask_WIRE_102, _wmask_WIRE_101, _wmask_WIRE_100, _wmask_WIRE_99, _wmask_WIRE_98, _wmask_WIRE_97, _wmask_WIRE_96, _wmask_WIRE_95, _wmask_WIRE_94, _wmask_WIRE_93, _wmask_WIRE_92, _wmask_WIRE_91, _wmask_WIRE_90, _wmask_WIRE_89, _wmask_WIRE_88, _wmask_WIRE_87, _wmask_WIRE_86, _wmask_WIRE_85, _wmask_WIRE_84, _wmask_WIRE_83, _wmask_WIRE_82, _wmask_WIRE_81, _wmask_WIRE_80, _wmask_WIRE_79, _wmask_WIRE_78, _wmask_WIRE_77, _wmask_WIRE_76, _wmask_WIRE_75, _wmask_WIRE_74, _wmask_WIRE_73, _wmask_WIRE_72, _wmask_WIRE_71, _wmask_WIRE_70, _wmask_WIRE_69, _wmask_WIRE_68, _wmask_WIRE_67, _wmask_WIRE_66, _wmask_WIRE_65, _wmask_WIRE_64}),	// @[AccumulatorMem.scala:184:30, Mux.scala:27:73]
    .RW0_rdata (_mem_1_RW0_rdata)
  );
  Queue_87 q (	// @[AccumulatorMem.scala:294:17]
    .clock                     (clock),
    .reset                     (reset),
    .io_enq_valid              (q_io_enq_valid_REG),	// @[AccumulatorMem.scala:310:28]
    .io_enq_bits_data_0_0      (_GEN_11 ? _mem_RW0_rdata[31:0] : _mem_1_RW0_rdata[31:0]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_1_0      (_GEN_11 ? _mem_RW0_rdata[63:32] : _mem_1_RW0_rdata[63:32]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_2_0      (_GEN_11 ? _mem_RW0_rdata[95:64] : _mem_1_RW0_rdata[95:64]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_3_0      (_GEN_11 ? _mem_RW0_rdata[127:96] : _mem_1_RW0_rdata[127:96]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_4_0      (_GEN_11 ? _mem_RW0_rdata[159:128] : _mem_1_RW0_rdata[159:128]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_5_0      (_GEN_11 ? _mem_RW0_rdata[191:160] : _mem_1_RW0_rdata[191:160]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_6_0      (_GEN_11 ? _mem_RW0_rdata[223:192] : _mem_1_RW0_rdata[223:192]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_7_0      (_GEN_11 ? _mem_RW0_rdata[255:224] : _mem_1_RW0_rdata[255:224]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_8_0      (_GEN_11 ? _mem_RW0_rdata[287:256] : _mem_1_RW0_rdata[287:256]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_9_0      (_GEN_11 ? _mem_RW0_rdata[319:288] : _mem_1_RW0_rdata[319:288]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_10_0     (_GEN_11 ? _mem_RW0_rdata[351:320] : _mem_1_RW0_rdata[351:320]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_11_0     (_GEN_11 ? _mem_RW0_rdata[383:352] : _mem_1_RW0_rdata[383:352]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_12_0     (_GEN_11 ? _mem_RW0_rdata[415:384] : _mem_1_RW0_rdata[415:384]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_13_0     (_GEN_11 ? _mem_RW0_rdata[447:416] : _mem_1_RW0_rdata[447:416]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_14_0     (_GEN_11 ? _mem_RW0_rdata[479:448] : _mem_1_RW0_rdata[479:448]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_data_15_0     (_GEN_11 ? _mem_RW0_rdata[511:480] : _mem_1_RW0_rdata[511:480]),	// @[AccumulatorMem.scala:184:30, :257:57, :258:72, :260:34]
    .io_enq_bits_scale_bits    (q_io_enq_bits_scale_REG_bits),	// @[AccumulatorMem.scala:302:33]
    .io_enq_bits_igelu_qb      (q_io_enq_bits_igelu_qb_REG),	// @[AccumulatorMem.scala:303:36]
    .io_enq_bits_igelu_qc      (q_io_enq_bits_igelu_qc_REG),	// @[AccumulatorMem.scala:304:36]
    .io_enq_bits_iexp_qln2     (q_io_enq_bits_iexp_qln2_REG),	// @[AccumulatorMem.scala:305:37]
    .io_enq_bits_iexp_qln2_inv (q_io_enq_bits_iexp_qln2_inv_REG),	// @[AccumulatorMem.scala:306:41]
    .io_enq_bits_act           (q_io_enq_bits_act_REG),	// @[AccumulatorMem.scala:307:31]
    .io_deq_ready              (io_read_resp_ready),
    .io_enq_ready              (_q_io_enq_ready),
    .io_deq_valid              (_q_io_deq_valid),
    .io_deq_bits_data_0_0      (io_read_resp_bits_data_0_0),
    .io_deq_bits_data_1_0      (io_read_resp_bits_data_1_0),
    .io_deq_bits_data_2_0      (io_read_resp_bits_data_2_0),
    .io_deq_bits_data_3_0      (io_read_resp_bits_data_3_0),
    .io_deq_bits_data_4_0      (io_read_resp_bits_data_4_0),
    .io_deq_bits_data_5_0      (io_read_resp_bits_data_5_0),
    .io_deq_bits_data_6_0      (io_read_resp_bits_data_6_0),
    .io_deq_bits_data_7_0      (io_read_resp_bits_data_7_0),
    .io_deq_bits_data_8_0      (io_read_resp_bits_data_8_0),
    .io_deq_bits_data_9_0      (io_read_resp_bits_data_9_0),
    .io_deq_bits_data_10_0     (io_read_resp_bits_data_10_0),
    .io_deq_bits_data_11_0     (io_read_resp_bits_data_11_0),
    .io_deq_bits_data_12_0     (io_read_resp_bits_data_12_0),
    .io_deq_bits_data_13_0     (io_read_resp_bits_data_13_0),
    .io_deq_bits_data_14_0     (io_read_resp_bits_data_14_0),
    .io_deq_bits_data_15_0     (io_read_resp_bits_data_15_0),
    .io_deq_bits_fromDMA       (io_read_resp_bits_fromDMA),
    .io_deq_bits_scale_bits    (io_read_resp_bits_scale_bits),
    .io_deq_bits_igelu_qb      (io_read_resp_bits_igelu_qb),
    .io_deq_bits_igelu_qc      (io_read_resp_bits_igelu_qc),
    .io_deq_bits_iexp_qln2     (io_read_resp_bits_iexp_qln2),
    .io_deq_bits_iexp_qln2_inv (io_read_resp_bits_iexp_qln2_inv),
    .io_deq_bits_act           (io_read_resp_bits_act),
    .io_count                  (_q_io_count)
  );
  assign io_read_req_ready = _io_read_req_ready_output;	// @[AccumulatorMem.scala:327:40]
  assign io_read_resp_valid = _q_io_deq_valid;	// @[AccumulatorMem.scala:294:17]
  assign io_write_ready = _io_write_ready_output;	// @[AccumulatorMem.scala:334:38]
  assign io_adder_valid = pipelined_writes_0_valid & pipelined_writes_0_bits_acc;	// @[AccumulatorMem.scala:113:29, :127:47]
  assign io_adder_op1_0_0 = REG_2 ? _mem_1_RW0_rdata[31:0] : _mem_RW0_rdata[31:0];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_1_0 = REG_2 ? _mem_1_RW0_rdata[63:32] : _mem_RW0_rdata[63:32];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_2_0 = REG_2 ? _mem_1_RW0_rdata[95:64] : _mem_RW0_rdata[95:64];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_3_0 = REG_2 ? _mem_1_RW0_rdata[127:96] : _mem_RW0_rdata[127:96];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_4_0 = REG_2 ? _mem_1_RW0_rdata[159:128] : _mem_RW0_rdata[159:128];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_5_0 = REG_2 ? _mem_1_RW0_rdata[191:160] : _mem_RW0_rdata[191:160];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_6_0 = REG_2 ? _mem_1_RW0_rdata[223:192] : _mem_RW0_rdata[223:192];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_7_0 = REG_2 ? _mem_1_RW0_rdata[255:224] : _mem_RW0_rdata[255:224];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_8_0 = REG_2 ? _mem_1_RW0_rdata[287:256] : _mem_RW0_rdata[287:256];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_9_0 = REG_2 ? _mem_1_RW0_rdata[319:288] : _mem_RW0_rdata[319:288];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_10_0 = REG_2 ? _mem_1_RW0_rdata[351:320] : _mem_RW0_rdata[351:320];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_11_0 = REG_2 ? _mem_1_RW0_rdata[383:352] : _mem_RW0_rdata[383:352];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_12_0 = REG_2 ? _mem_1_RW0_rdata[415:384] : _mem_RW0_rdata[415:384];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_13_0 = REG_2 ? _mem_1_RW0_rdata[447:416] : _mem_RW0_rdata[447:416];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_14_0 = REG_2 ? _mem_1_RW0_rdata[479:448] : _mem_RW0_rdata[479:448];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op1_15_0 = REG_2 ? _mem_1_RW0_rdata[511:480] : _mem_RW0_rdata[511:480];	// @[AccumulatorMem.scala:184:30, :257:57, :258:{20,72}, :259:25]
  assign io_adder_op2_0_0 = pipelined_writes_0_bits_data_0_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_1_0 = pipelined_writes_0_bits_data_1_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_2_0 = pipelined_writes_0_bits_data_2_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_3_0 = pipelined_writes_0_bits_data_3_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_4_0 = pipelined_writes_0_bits_data_4_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_5_0 = pipelined_writes_0_bits_data_5_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_6_0 = pipelined_writes_0_bits_data_6_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_7_0 = pipelined_writes_0_bits_data_7_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_8_0 = pipelined_writes_0_bits_data_8_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_9_0 = pipelined_writes_0_bits_data_9_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_10_0 = pipelined_writes_0_bits_data_10_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_11_0 = pipelined_writes_0_bits_data_11_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_12_0 = pipelined_writes_0_bits_data_12_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_13_0 = pipelined_writes_0_bits_data_13_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_14_0 = pipelined_writes_0_bits_data_14_0;	// @[AccumulatorMem.scala:113:29]
  assign io_adder_op2_15_0 = pipelined_writes_0_bits_data_15_0;	// @[AccumulatorMem.scala:113:29]
endmodule

