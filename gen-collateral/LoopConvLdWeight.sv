// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module LoopConvLdWeight(
  input         clock,
                reset,
                io_req_valid,
  input  [15:0] io_req_bits_outer_bounds_in_channels,
                io_req_bits_outer_bounds_out_channels,
                io_req_bits_outer_bounds_weight_stride,
                io_req_bits_outer_bounds_kernel_dim,
                io_req_bits_inner_bounds_krows,
                io_req_bits_inner_bounds_kcols,
                io_req_bits_inner_bounds_kchs,
                io_req_bits_derived_params_ochs,
                io_req_bits_derived_params_out_channels_per_bank,
                io_req_bits_derived_params_in_channels_per_bank,
                io_req_bits_derived_params_weight_spad_stride,
  input  [12:0] io_req_bits_addr_end,
  input  [33:0] io_req_bits_dram_addr,
  input         io_req_bits_trans_weight_1203,
                io_req_bits_trans_weight_0132,
                io_req_bits_dw,
                io_req_bits_loop_id,
                io_cmd_ready,
                io_rob_overloaded,
                io_wait_for_prev_loop,
  output        io_req_ready,
                io_cmd_valid,
  output [6:0]  io_cmd_bits_inst_funct,
  output [4:0]  io_cmd_bits_inst_rs2,
                io_cmd_bits_inst_rs1,
  output        io_cmd_bits_inst_xd,
                io_cmd_bits_inst_xs1,
                io_cmd_bits_inst_xs2,
  output [4:0]  io_cmd_bits_inst_rd,
  output [6:0]  io_cmd_bits_inst_opcode,
  output [63:0] io_cmd_bits_rs1,
                io_cmd_bits_rs2,
  output        io_idle,
                io_loop_id
);

  wire        _command_p_io_in_ready;	// @[LoopConv.scala:490:25]
  wire        _command_p_io_out_valid;	// @[LoopConv.scala:490:25]
  wire [6:0]  _command_p_io_out_bits_cmd_inst_funct;	// @[LoopConv.scala:490:25]
  wire [63:0] _command_p_io_out_bits_cmd_rs1;	// @[LoopConv.scala:490:25]
  wire [63:0] _command_p_io_out_bits_cmd_rs2;	// @[LoopConv.scala:490:25]
  wire [67:0] _command_p_io_out_bits_dram_addr;	// @[LoopConv.scala:490:25]
  wire [63:0] _command_p_io_out_bits_spad_addr;	// @[LoopConv.scala:490:25]
  wire [15:0] _command_p_io_out_bits_K;	// @[LoopConv.scala:490:25]
  wire [15:0] _command_p_io_out_bits_J;	// @[LoopConv.scala:490:25]
  wire        _command_p_io_busy;	// @[LoopConv.scala:490:25]
  reg  [1:0]  state;	// @[LoopConv.scala:432:22]
  reg  [15:0] req_outer_bounds_in_channels;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_outer_bounds_out_channels;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_outer_bounds_weight_stride;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_outer_bounds_kernel_dim;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_inner_bounds_krows;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_inner_bounds_kcols;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_inner_bounds_kchs;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_derived_params_ochs;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_derived_params_out_channels_per_bank;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_derived_params_in_channels_per_bank;	// @[LoopConv.scala:434:16]
  reg  [15:0] req_derived_params_weight_spad_stride;	// @[LoopConv.scala:434:16]
  reg  [12:0] req_addr_end;	// @[LoopConv.scala:434:16]
  reg  [33:0] req_dram_addr;	// @[LoopConv.scala:434:16]
  reg         req_trans_weight_1203;	// @[LoopConv.scala:434:16]
  reg         req_trans_weight_0132;	// @[LoopConv.scala:434:16]
  reg         req_dw;	// @[LoopConv.scala:434:16]
  reg         req_loop_id;	// @[LoopConv.scala:434:16]
  wire [15:0] max_chs_per_mvin_max_ochs_per_mvin = req_derived_params_ochs < 16'h40 ? req_derived_params_ochs : 16'h40;	// @[LoopConv.scala:434:16, :441:{32,38}]
  wire [15:0] max_chs_per_mvin_max_kchs_per_mvin = req_inner_bounds_kchs < 16'h40 ? req_inner_bounds_kchs : 16'h40;	// @[LoopConv.scala:434:16, :441:32, :442:{32,38}]
  wire [15:0] max_chs_per_mvin = req_trans_weight_0132 ? max_chs_per_mvin_max_kchs_per_mvin : max_chs_per_mvin_max_ochs_per_mvin;	// @[LoopConv.scala:434:16, :441:32, :442:32, :443:8]
  wire [31:0] _GEN = {16'h0, req_inner_bounds_kcols};	// @[LoopConv.scala:434:16, :446:64, Mux.scala:101:16]
  wire [47:0] _GEN_0 = {32'h0, req_inner_bounds_krows};	// @[LoopConv.scala:434:16, :446:72]
  wire [63:0] _GEN_1 = {48'h0, req_derived_params_ochs};	// @[LoopConv.scala:434:16, :446:80]
  wire [63:0] _GEN_2 = {48'h0, req_inner_bounds_kchs};	// @[LoopConv.scala:434:16, :446:80, :447:43]
  wire [63:0] addr_start = {51'h0, req_addr_end} - (req_trans_weight_0132 ? {16'h0, {16'h0, {16'h0, req_derived_params_in_channels_per_bank} * _GEN} * _GEN_0} * _GEN_1 : {16'h0, {16'h0, {16'h0, req_derived_params_out_channels_per_bank} * _GEN} * _GEN_0} * _GEN_2);	// @[LoopConv.scala:434:16, :446:{19,64,72,80}, :447:{27,35,43}, :448:33, :463:103, Mux.scala:101:16]
  wire [31:0] _GEN_3 = {16'h0, req_outer_bounds_kernel_dim};	// @[LoopConv.scala:434:16, :452:42, Mux.scala:101:16]
  wire [47:0] _GEN_4 = {32'h0, req_outer_bounds_out_channels};	// @[LoopConv.scala:434:16, :446:72, :452:55]
  reg  [15:0] och;	// @[LoopConv.scala:457:16]
  reg  [15:0] krow;	// @[LoopConv.scala:458:17]
  reg  [15:0] kcol;	// @[LoopConv.scala:459:17]
  reg  [15:0] kch;	// @[LoopConv.scala:460:16]
  wire [31:0] _GEN_5 = {16'h0, krow};	// @[LoopConv.scala:458:17, :463:35, Mux.scala:101:16]
  wire [31:0] _dram_offset_T_19 = _GEN_5 * _GEN_3;	// @[LoopConv.scala:452:42, :463:35]
  wire [47:0] _GEN_6 = {16'h0, _dram_offset_T_19};	// @[LoopConv.scala:463:{35,46}, Mux.scala:101:16]
  wire [31:0] _GEN_7 = {16'h0, kcol};	// @[LoopConv.scala:459:17, :463:66, Mux.scala:101:16]
  wire [66:0] _GEN_8 = {51'h0, och};	// @[LoopConv.scala:457:16, :463:103]
  wire [31:0] _GEN_9 = {16'h0, req_inner_bounds_krows};	// @[LoopConv.scala:434:16, :472:55, Mux.scala:101:16]
  wire [47:0] _GEN_10 = {32'h0, req_inner_bounds_kcols};	// @[LoopConv.scala:434:16, :446:72, :472:63]
  wire [47:0] _GEN_11 = {16'h0, _GEN_5 * _GEN};	// @[LoopConv.scala:446:64, :463:35, :472:{85,93}, Mux.scala:101:16]
  wire [15:0] _J_T_1 = req_inner_bounds_kchs - kch;	// @[LoopConv.scala:434:16, :460:16, :477:14]
  wire [15:0] _J_T_7 = req_derived_params_ochs - och;	// @[LoopConv.scala:434:16, :457:16, :478:14]
  wire        _io_idle_T = state == 2'h0;	// @[LoopConv.scala:432:22, :494:14, :516:25]
  wire        _io_req_ready_output = _io_idle_T & ~_command_p_io_busy;	// @[LoopConv.scala:490:25, :516:{25,34,37}]
  wire        _command_p_io_in_valid_T_4 = (|state) & ~io_wait_for_prev_loop & (|req_dram_addr);	// @[LoopConv.scala:432:22, :434:16, :520:{34,46,69,87}]
  wire        _T_3 = state == 2'h1;	// @[LoopConv.scala:432:22, :502:27, :521:41]
  wire        _T = _command_p_io_out_bits_cmd_inst_funct == 7'h1;	// @[LoopConv.scala:490:25, :511:23, :530:46]
  wire        _T_1 = req_dram_addr == 34'h0;	// @[LoopConv.scala:434:16, :463:79, :542:22]
  wire        _T_2 = _command_p_io_in_ready & _command_p_io_in_valid_T_4;	// @[Decoupled.scala:51:35, LoopConv.scala:490:25, :520:69]
  wire [16:0] _next_kch_T_3 = {1'h0, kch} + {1'h0, req_trans_weight_0132 ? max_chs_per_mvin_max_kchs_per_mvin : 16'h10};	// @[LoopConv.scala:432:22, :434:16, :442:32, :443:8, :460:16, :472:23, :477:14, :549:23, Util.scala:41:15]
  wire        _next_kch_T_4 = _next_kch_T_3 > {1'h0, req_inner_bounds_kchs - 16'h1};	// @[LoopConv.scala:432:22, :434:16, Util.scala:39:28, :41:15, :43:17]
  wire [15:0] next_kch = _next_kch_T_4 ? 16'h0 : _next_kch_T_3[15:0];	// @[Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire [16:0] _next_kcol_T_4 = {1'h0, kcol} + 17'h1;	// @[LoopConv.scala:432:22, :459:17, Util.scala:39:28, :41:15]
  wire        _next_kcol_T_5 = _next_kcol_T_4 > {1'h0, req_inner_bounds_kcols - 16'h1};	// @[LoopConv.scala:432:22, :434:16, Util.scala:39:28, :41:15, :43:17]
  wire        _state_T_3 = ((|next_kch) ? kcol : _next_kcol_T_5 ? 16'h0 : _next_kcol_T_4[15:0]) == 16'h0;	// @[LoopConv.scala:459:17, :552:59, :553:60, Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire        _next_krow_T_2 = _state_T_3 & ~(|next_kch);	// @[LoopConv.scala:552:59, :553:{60,68}, Mux.scala:101:16]
  wire [16:0] _next_krow_T_6 = {1'h0, krow} + 17'h1;	// @[LoopConv.scala:432:22, :458:17, Util.scala:39:28, :41:15]
  wire        _next_krow_T_7 = _next_krow_T_6 > {1'h0, req_inner_bounds_krows - 16'h1};	// @[LoopConv.scala:432:22, :434:16, Util.scala:39:28, :41:15, :43:17]
  wire        _state_T_1 = (_next_krow_T_2 ? (_next_krow_T_7 ? 16'h0 : _next_krow_T_6[15:0]) : krow) == 16'h0;	// @[LoopConv.scala:458:17, :553:68, :554:60, Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire        _next_och_T_4 = _state_T_1 & _state_T_3 & ~(|next_kch);	// @[LoopConv.scala:552:59, :553:60, :554:{60,89}, Mux.scala:101:16]
  wire [16:0] _next_och_T_8 = {1'h0, och} + {1'h0, req_trans_weight_0132 ? 16'h10 : max_chs_per_mvin_max_ochs_per_mvin};	// @[LoopConv.scala:432:22, :434:16, :441:32, :443:8, :457:16, :472:23, :478:14, :548:23, Util.scala:41:15]
  wire        _next_och_T_9 = _next_och_T_8 > {1'h0, req_derived_params_ochs - 16'h1};	// @[LoopConv.scala:432:22, :434:16, Util.scala:39:28, :41:15, :43:17]
  wire        _T_4 = _io_req_ready_output & io_req_valid;	// @[Decoupled.scala:51:35, LoopConv.scala:516:34]
  always @(posedge clock) begin
    if (reset)
      state <= 2'h0;	// @[LoopConv.scala:432:22, :494:14]
    else if (_T_4)	// @[Decoupled.scala:51:35]
      state <= 2'h1;	// @[LoopConv.scala:432:22, :502:27]
    else if (_T_1)	// @[LoopConv.scala:542:22]
      state <= 2'h0;	// @[LoopConv.scala:432:22, :494:14]
    else if (_T_2) begin	// @[Decoupled.scala:51:35]
      if (_T_3)	// @[LoopConv.scala:521:41]
        state <= 2'h2;	// @[LoopConv.scala:432:22, :546:13]
      else	// @[LoopConv.scala:521:41]
        state <= {~((_next_och_T_4 ? (_next_och_T_9 ? 16'h0 : _next_och_T_8[15:0]) : och) == 16'h0 & _state_T_1 & _state_T_3 & ~(|next_kch)), 1'h0};	// @[LoopConv.scala:432:22, :457:16, :552:59, :553:60, :554:{60,89}, :561:{19,29,79}, Mux.scala:101:16, Util.scala:41:15, :43:17]
    end
    if (_T_4) begin	// @[Decoupled.scala:51:35]
      req_outer_bounds_in_channels <= io_req_bits_outer_bounds_in_channels;	// @[LoopConv.scala:434:16]
      req_outer_bounds_out_channels <= io_req_bits_outer_bounds_out_channels;	// @[LoopConv.scala:434:16]
      req_outer_bounds_weight_stride <= io_req_bits_outer_bounds_weight_stride;	// @[LoopConv.scala:434:16]
      req_outer_bounds_kernel_dim <= io_req_bits_outer_bounds_kernel_dim;	// @[LoopConv.scala:434:16]
      req_inner_bounds_krows <= io_req_bits_inner_bounds_krows;	// @[LoopConv.scala:434:16]
      req_inner_bounds_kcols <= io_req_bits_inner_bounds_kcols;	// @[LoopConv.scala:434:16]
      req_inner_bounds_kchs <= io_req_bits_inner_bounds_kchs;	// @[LoopConv.scala:434:16]
      req_derived_params_ochs <= io_req_bits_derived_params_ochs;	// @[LoopConv.scala:434:16]
      req_derived_params_out_channels_per_bank <= io_req_bits_derived_params_out_channels_per_bank;	// @[LoopConv.scala:434:16]
      req_derived_params_in_channels_per_bank <= io_req_bits_derived_params_in_channels_per_bank;	// @[LoopConv.scala:434:16]
      req_derived_params_weight_spad_stride <= io_req_bits_derived_params_weight_spad_stride;	// @[LoopConv.scala:434:16]
      req_addr_end <= io_req_bits_addr_end;	// @[LoopConv.scala:434:16]
      req_dram_addr <= io_req_bits_dram_addr;	// @[LoopConv.scala:434:16]
      req_trans_weight_1203 <= io_req_bits_trans_weight_1203;	// @[LoopConv.scala:434:16]
      req_trans_weight_0132 <= io_req_bits_trans_weight_0132;	// @[LoopConv.scala:434:16]
      req_dw <= io_req_bits_dw;	// @[LoopConv.scala:434:16]
      req_loop_id <= io_req_bits_loop_id;	// @[LoopConv.scala:434:16]
      och <= 16'h0;	// @[LoopConv.scala:457:16, Mux.scala:101:16]
      krow <= 16'h0;	// @[LoopConv.scala:458:17, Mux.scala:101:16]
      kcol <= 16'h0;	// @[LoopConv.scala:459:17, Mux.scala:101:16]
      kch <= 16'h0;	// @[LoopConv.scala:460:16, Mux.scala:101:16]
    end
    else begin	// @[Decoupled.scala:51:35]
      if (_T_1 | ~_T_2 | _T_3 | ~_next_och_T_4) begin	// @[Decoupled.scala:51:35, LoopConv.scala:457:16, :460:16, :521:41, :542:{22,30}, :544:36, :545:29, :554:89, Util.scala:42:8]
      end
      else if (_next_och_T_9)	// @[Util.scala:43:17]
        och <= 16'h0;	// @[LoopConv.scala:457:16, Mux.scala:101:16]
      else	// @[Util.scala:43:17]
        och <= _next_och_T_8[15:0];	// @[LoopConv.scala:457:16, Util.scala:41:15]
      if (_T_1 | ~_T_2 | _T_3 | ~_next_krow_T_2) begin	// @[Decoupled.scala:51:35, LoopConv.scala:458:17, :460:16, :521:41, :542:{22,30}, :544:36, :545:29, :553:68, Util.scala:42:8]
      end
      else if (_next_krow_T_7)	// @[Util.scala:43:17]
        krow <= 16'h0;	// @[LoopConv.scala:458:17, Mux.scala:101:16]
      else	// @[Util.scala:43:17]
        krow <= _next_krow_T_6[15:0];	// @[LoopConv.scala:458:17, Util.scala:41:15]
      if (_T_1 | ~_T_2 | _T_3 | (|next_kch)) begin	// @[Decoupled.scala:51:35, LoopConv.scala:459:17, :460:16, :521:41, :542:{22,30}, :544:36, :545:29, :552:59, Mux.scala:101:16]
      end
      else if (_next_kcol_T_5)	// @[Util.scala:43:17]
        kcol <= 16'h0;	// @[LoopConv.scala:459:17, Mux.scala:101:16]
      else	// @[Util.scala:43:17]
        kcol <= _next_kcol_T_4[15:0];	// @[LoopConv.scala:459:17, Util.scala:41:15]
      if (_T_1 | ~_T_2 | _T_3) begin	// @[Decoupled.scala:51:35, LoopConv.scala:460:16, :521:41, :542:{22,30}, :544:36, :545:29]
      end
      else if (_next_kch_T_4)	// @[Util.scala:43:17]
        kch <= 16'h0;	// @[LoopConv.scala:460:16, Mux.scala:101:16]
      else	// @[Util.scala:43:17]
        kch <= _next_kch_T_3[15:0];	// @[LoopConv.scala:460:16, Util.scala:41:15]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        state = _RANDOM_0[1:0];	// @[LoopConv.scala:432:22]
        req_outer_bounds_in_channels = _RANDOM_1[17:2];	// @[LoopConv.scala:434:16]
        req_outer_bounds_out_channels = {_RANDOM_1[31:18], _RANDOM_2[1:0]};	// @[LoopConv.scala:434:16]
        req_outer_bounds_weight_stride = {_RANDOM_3[31:18], _RANDOM_4[1:0]};	// @[LoopConv.scala:434:16]
        req_outer_bounds_kernel_dim = {_RANDOM_5[31:18], _RANDOM_6[1:0]};	// @[LoopConv.scala:434:16]
        req_inner_bounds_krows = _RANDOM_10[17:2];	// @[LoopConv.scala:434:16]
        req_inner_bounds_kcols = {_RANDOM_10[31:18], _RANDOM_11[1:0]};	// @[LoopConv.scala:434:16]
        req_inner_bounds_kchs = _RANDOM_11[17:2];	// @[LoopConv.scala:434:16]
        req_derived_params_ochs = {_RANDOM_16[31:18], _RANDOM_17[1:0]};	// @[LoopConv.scala:434:16]
        req_derived_params_out_channels_per_bank = {_RANDOM_19[31:18], _RANDOM_20[1:0]};	// @[LoopConv.scala:434:16]
        req_derived_params_in_channels_per_bank = _RANDOM_20[17:2];	// @[LoopConv.scala:434:16]
        req_derived_params_weight_spad_stride = {_RANDOM_21[31:18], _RANDOM_22[1:0]};	// @[LoopConv.scala:434:16]
        req_addr_end = _RANDOM_22[14:2];	// @[LoopConv.scala:434:16]
        req_dram_addr = {_RANDOM_22[31:15], _RANDOM_23[16:0]};	// @[LoopConv.scala:434:16]
        req_trans_weight_1203 = _RANDOM_23[17];	// @[LoopConv.scala:434:16]
        req_trans_weight_0132 = _RANDOM_23[18];	// @[LoopConv.scala:434:16]
        req_dw = _RANDOM_23[19];	// @[LoopConv.scala:434:16]
        req_loop_id = _RANDOM_23[20];	// @[LoopConv.scala:434:16]
        och = {_RANDOM_23[31:21], _RANDOM_24[4:0]};	// @[LoopConv.scala:434:16, :457:16]
        krow = _RANDOM_24[20:5];	// @[LoopConv.scala:457:16, :458:17]
        kcol = {_RANDOM_24[31:21], _RANDOM_25[4:0]};	// @[LoopConv.scala:457:16, :459:17]
        kch = _RANDOM_25[20:5];	// @[LoopConv.scala:459:17, :460:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Pipeline_12 command_p (	// @[LoopConv.scala:490:25]
    .clock                       (clock),
    .reset                       (reset),
    .io_in_valid                 (_command_p_io_in_valid_T_4),	// @[LoopConv.scala:520:69]
    .io_in_bits_cmd_inst_funct   ({6'h0, ~_T_3}),	// @[LoopConv.scala:521:{34,41}]
    .io_in_bits_cmd_rs1          (_T_3 ? {36'h3F8000000, req_derived_params_weight_spad_stride[11:0], 16'h109} : 64'h0),	// @[LoopConv.scala:434:16, :500:25, :505:36, :512:16, :521:{34,41}]
    .io_in_bits_cmd_rs2          (_T_3 ? {16'h0, req_dw ? 48'h1 : req_trans_weight_1203 ? {16'h0, _GEN_3 * _GEN_3} * _GEN_4 : {32'h0, req_trans_weight_0132 ? req_outer_bounds_in_channels : req_outer_bounds_weight_stride}} : 64'h0),	// @[LoopConv.scala:434:16, :446:72, :452:{42,55}, :507:18, :512:16, :521:{34,41}, Mux.scala:101:16]
    .io_in_bits_dram_addr        ({34'h0, req_dram_addr} + ((req_dw ? {35'h0, {1'h0, _dram_offset_T_19} + {17'h0, kcol}} : {1'h0, req_trans_weight_1203 ? {1'h0, {16'h0, {1'h0, {1'h0, {16'h0, {16'h0, kch} * _GEN_3} * {32'h0, req_outer_bounds_kernel_dim}} + {17'h0, _dram_offset_T_19}} + {34'h0, kcol}} * {50'h0, req_outer_bounds_out_channels}} + _GEN_8 : req_trans_weight_0132 ? {1'h0, {16'h0, {1'h0, {1'h0, _GEN_6 * _GEN_4} + {17'h0, _GEN_7 * {16'h0, req_outer_bounds_out_channels}}} + {34'h0, och}} * {50'h0, req_outer_bounds_in_channels}} + {51'h0, kch} : {1'h0, {16'h0, {1'h0, {1'h0, _GEN_6 * {32'h0, req_outer_bounds_in_channels}} + {17'h0, _GEN_7 * {16'h0, req_outer_bounds_in_channels}}} + {34'h0, kch}} * {50'h0, req_outer_bounds_weight_stride}} + _GEN_8}) & 68'hFFFFFFFF)),	// @[LoopConv.scala:432:22, :434:16, :446:72, :452:{42,55}, :457:16, :459:17, :460:16, :463:{35,46,59,66,79,87,103}, :464:34, :465:{36,47,59,78,87,102}, :466:{48,62,69,83,91,105}, :468:33, :1550:17, Mux.scala:101:16]
    .io_in_bits_spad_addr        (req_trans_weight_0132 ? addr_start + {16'h0, {16'h0, {16'h0, kch / 16'h10} * _GEN_9} * _GEN_10} * _GEN_1 + {16'h0, _GEN_11 * {32'h0, req_derived_params_ochs}} + {32'h0, _GEN_7 * {16'h0, req_derived_params_ochs}} + {48'h0, och} : addr_start + {16'h0, {16'h0, {16'h0, och / 16'h10} * _GEN_9} * _GEN_10} * _GEN_2 + {16'h0, _GEN_11 * {32'h0, req_inner_bounds_kchs}} + {32'h0, _GEN_7 * {16'h0, req_inner_bounds_kchs}} + {48'h0, kch}),	// @[LoopConv.scala:434:16, :446:{72,80}, :447:43, :448:33, :457:16, :460:16, :463:66, :470:22, :472:{23,55,63,71,78,93,100,107,114}, :473:{23,55,63,71,78,93,100,107,114}, Mux.scala:101:16]
    .io_in_bits_K                (req_trans_weight_0132 ? (_J_T_7 > 16'h10 ? 16'h10 : _J_T_7) : _J_T_1 > 16'h10 ? 16'h10 : _J_T_1),	// @[LoopConv.scala:434:16, :472:23, :477:14, :478:14, :479:14, :480:{8,20}, :481:{8,20}]
    .io_in_bits_J                (req_trans_weight_0132 ? (_J_T_1 > max_chs_per_mvin ? max_chs_per_mvin : _J_T_1) : _J_T_7 > max_chs_per_mvin ? max_chs_per_mvin : _J_T_7),	// @[LoopConv.scala:434:16, :443:8, :476:14, :477:{8,14,20}, :478:{8,14,20}]
    .io_out_ready                (io_cmd_ready & ~io_rob_overloaded),	// @[LoopConv.scala:527:{42,45}]
    .io_in_ready                 (_command_p_io_in_ready),
    .io_out_valid                (_command_p_io_out_valid),
    .io_out_bits_cmd_inst_funct  (_command_p_io_out_bits_cmd_inst_funct),
    .io_out_bits_cmd_inst_rs2    (io_cmd_bits_inst_rs2),
    .io_out_bits_cmd_inst_rs1    (io_cmd_bits_inst_rs1),
    .io_out_bits_cmd_inst_xd     (io_cmd_bits_inst_xd),
    .io_out_bits_cmd_inst_xs1    (io_cmd_bits_inst_xs1),
    .io_out_bits_cmd_inst_xs2    (io_cmd_bits_inst_xs2),
    .io_out_bits_cmd_inst_rd     (io_cmd_bits_inst_rd),
    .io_out_bits_cmd_inst_opcode (io_cmd_bits_inst_opcode),
    .io_out_bits_cmd_rs1         (_command_p_io_out_bits_cmd_rs1),
    .io_out_bits_cmd_rs2         (_command_p_io_out_bits_cmd_rs2),
    .io_out_bits_dram_addr       (_command_p_io_out_bits_dram_addr),
    .io_out_bits_spad_addr       (_command_p_io_out_bits_spad_addr),
    .io_out_bits_K               (_command_p_io_out_bits_K),
    .io_out_bits_J               (_command_p_io_out_bits_J),
    .io_busy                     (_command_p_io_busy)
  );
  assign io_req_ready = _io_req_ready_output;	// @[LoopConv.scala:516:34]
  assign io_cmd_valid = _command_p_io_out_valid & ~io_rob_overloaded;	// @[LoopConv.scala:490:25, :527:45, :528:42]
  assign io_cmd_bits_inst_funct = _command_p_io_out_bits_cmd_inst_funct;	// @[LoopConv.scala:490:25]
  assign io_cmd_bits_rs1 = _T ? _command_p_io_out_bits_dram_addr[63:0] : _command_p_io_out_bits_cmd_rs1;	// @[LoopConv.scala:490:25, :529:15, :530:{46,61}, :532:21]
  assign io_cmd_bits_rs2 = _T ? {11'h0, _command_p_io_out_bits_K[4:0], 9'h0, _command_p_io_out_bits_J[6:0], 3'h0, _command_p_io_out_bits_spad_addr[28:26], 13'h0, _command_p_io_out_bits_spad_addr[12:0]} : _command_p_io_out_bits_cmd_rs2;	// @[LocalAddr.scala:108:37, :109:57, LoopConv.scala:490:25, :529:15, :530:{46,61}, :534:18, :535:27, :536:27, :538:{21,37}]
  assign io_idle = _io_idle_T & ~_command_p_io_busy;	// @[LoopConv.scala:490:25, :516:{25,37}, :517:29]
  assign io_loop_id = req_loop_id;	// @[LoopConv.scala:434:16]
endmodule

