// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module LoopConvSt(
  input         clock,
                reset,
                io_req_valid,
  input  [15:0] io_req_bits_outer_bounds_batch_size,
                io_req_bits_outer_bounds_out_channels,
                io_req_bits_outer_bounds_out_dim,
                io_req_bits_outer_bounds_out_stride,
                io_req_bits_outer_bounds_pool_out_dim,
                io_req_bits_outer_bounds_pool_size,
                io_req_bits_outer_bounds_pool_stride,
                io_req_bits_inner_bounds_batches,
                io_req_bits_inner_bounds_porows,
                io_req_bits_inner_bounds_pocols,
                io_req_bits_inner_bounds_plpad,
                io_req_bits_inner_bounds_pupad,
                io_req_bits_inner_bounds_orows,
                io_req_bits_inner_bounds_ocols,
                io_req_bits_derived_params_ochs,
  input  [8:0]  io_req_bits_addr_start,
  input  [33:0] io_req_bits_dram_addr,
  input         io_req_bits_no_pool,
  input  [1:0]  io_req_bits_activation,
  input         io_req_bits_trans_output_1203,
                io_req_bits_loop_id,
                io_cmd_ready,
                io_ex_completed,
                io_rob_overloaded,
  output        io_req_ready,
                io_cmd_valid,
  output [6:0]  io_cmd_bits_inst_funct,
  output [4:0]  io_cmd_bits_inst_rs2,
                io_cmd_bits_inst_rs1,
  output        io_cmd_bits_inst_xd,
                io_cmd_bits_inst_xs1,
                io_cmd_bits_inst_xs2,
  output [4:0]  io_cmd_bits_inst_rd,
  output [6:0]  io_cmd_bits_inst_opcode,
  output [63:0] io_cmd_bits_rs1,
                io_cmd_bits_rs2,
  output        io_idle,
                io_loop_id
);

  wire        _command_p_io_in_ready;	// @[LoopConv.scala:914:25]
  wire        _command_p_io_out_valid;	// @[LoopConv.scala:914:25]
  wire [6:0]  _command_p_io_out_bits_cmd_inst_funct;	// @[LoopConv.scala:914:25]
  wire [63:0] _command_p_io_out_bits_cmd_rs1;	// @[LoopConv.scala:914:25]
  wire [63:0] _command_p_io_out_bits_cmd_rs2;	// @[LoopConv.scala:914:25]
  wire [67:0] _command_p_io_out_bits_dram_addr;	// @[LoopConv.scala:914:25]
  wire [67:0] _command_p_io_out_bits_spad_addr;	// @[LoopConv.scala:914:25]
  wire [64:0] _command_p_io_out_bits_pool_dram_addr;	// @[LoopConv.scala:914:25]
  wire [65:0] _command_p_io_out_bits_pool_spad_addr;	// @[LoopConv.scala:914:25]
  wire [15:0] _command_p_io_out_bits_channels;	// @[LoopConv.scala:914:25]
  wire        _command_p_io_out_bits_is_pool;	// @[LoopConv.scala:914:25]
  wire [15:0] _command_p_io_out_bits_I;	// @[LoopConv.scala:914:25]
  wire [15:0] _command_p_io_out_bits_J;	// @[LoopConv.scala:914:25]
  wire        _command_p_io_busy;	// @[LoopConv.scala:914:25]
  reg  [2:0]  state;	// @[LoopConv.scala:869:22]
  reg  [15:0] req_outer_bounds_batch_size;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_outer_bounds_out_channels;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_outer_bounds_out_dim;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_outer_bounds_out_stride;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_outer_bounds_pool_out_dim;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_outer_bounds_pool_size;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_outer_bounds_pool_stride;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_batches;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_porows;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_pocols;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_plpad;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_pupad;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_orows;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_inner_bounds_ocols;	// @[LoopConv.scala:871:16]
  reg  [15:0] req_derived_params_ochs;	// @[LoopConv.scala:871:16]
  reg  [8:0]  req_addr_start;	// @[LoopConv.scala:871:16]
  reg  [33:0] req_dram_addr;	// @[LoopConv.scala:871:16]
  reg         req_no_pool;	// @[LoopConv.scala:871:16]
  reg  [1:0]  req_activation;	// @[LoopConv.scala:871:16]
  reg         req_trans_output_1203;	// @[LoopConv.scala:871:16]
  reg         req_loop_id;	// @[LoopConv.scala:871:16]
  reg  [15:0] b;	// @[LoopConv.scala:882:14]
  reg  [15:0] orow;	// @[LoopConv.scala:883:17]
  reg  [15:0] ocol;	// @[LoopConv.scala:884:17]
  reg  [15:0] och;	// @[LoopConv.scala:885:16]
  wire [31:0] _GEN = {16'h0, orow};	// @[LoopConv.scala:883:17, :889:11, Mux.scala:101:16]
  wire [31:0] _GEN_0 = {16'h0, req_outer_bounds_out_dim};	// @[LoopConv.scala:871:16, :889:11, Mux.scala:101:16]
  wire [31:0] _dram_offset_T_10 = _GEN * _GEN_0;	// @[LoopConv.scala:889:11]
  wire [66:0] _GEN_1 = {51'h0, och};	// @[LoopConv.scala:885:16, :889:71]
  wire [31:0] _GEN_2 = {16'h0, b};	// @[LoopConv.scala:882:14, :890:8, Mux.scala:101:16]
  wire [31:0] _GEN_3 = {16'h0, och / 16'h10};	// @[LoopConv.scala:885:16, :892:{42,74}, Mux.scala:101:16]
  wire [31:0] _GEN_4 = {16'h0, req_inner_bounds_batches};	// @[LoopConv.scala:871:16, :892:74, Mux.scala:101:16]
  wire [47:0] _GEN_5 = {32'h0, req_inner_bounds_orows};	// @[LoopConv.scala:871:16, :889:19, :892:84]
  wire [63:0] _GEN_6 = {48'h0, req_inner_bounds_ocols};	// @[LoopConv.scala:871:16, :892:92]
  wire [64:0] _GEN_7 = {56'h0, req_addr_start};	// @[LoopConv.scala:871:16, :892:34]
  wire [47:0] _GEN_8 = {16'h0, _GEN_2 * {16'h0, req_inner_bounds_orows}};	// @[LoopConv.scala:871:16, :890:8, :892:{105,113}, Mux.scala:101:16]
  wire [47:0] _GEN_9 = {32'h0, req_inner_bounds_ocols};	// @[LoopConv.scala:871:16, :889:19, :892:113]
  wire [15:0] _I_T_1 = req_inner_bounds_ocols - ocol;	// @[LoopConv.scala:871:16, :884:17, :898:21]
  wire [15:0] _J_T_1 = req_derived_params_ochs - och;	// @[LoopConv.scala:871:16, :885:16, :899:20]
  wire [15:0] J = _J_T_1 > 16'h10 ? 16'h10 : _J_T_1;	// @[LoopConv.scala:892:42, :899:{14,20,26}]
  wire        _io_idle_T = state == 3'h0;	// @[LoopConv.scala:869:22, :969:25, :1015:11]
  wire        _io_req_ready_output = _io_idle_T & ~_command_p_io_busy;	// @[LoopConv.scala:914:25, :969:{25,34,37}]
  wire        _command_p_io_in_valid_T_3 = (|state) & (|req_dram_addr) & io_ex_completed;	// @[LoopConv.scala:869:22, :871:16, :879:28, :973:{34,52}]
  wire        _GEN_10 = state == 3'h3 | state != 3'h2;	// @[LoopConv.scala:869:22, :1031:13, Mux.scala:81:{58,61}]
  wire        _command_p_io_in_bits_cmd_T_8 = state == 3'h4;	// @[LoopConv.scala:869:22, :977:22, Mux.scala:81:61]
  wire        _T = _command_p_io_out_bits_cmd_inst_funct == 7'h3;	// @[LoopConv.scala:914:25, :918:24, :991:46]
  wire [16:0] _GEN_11 = {1'h0, och};	// @[LoopConv.scala:869:22, :885:16, :899:20]
  wire        _T_1 = _command_p_io_in_ready & _command_p_io_in_valid_T_3;	// @[Decoupled.scala:51:35, LoopConv.scala:914:25, :973:52]
  wire [16:0] _next_och_T_3 = _GEN_11 + 17'h10;	// @[LoopConv.scala:899:20, Util.scala:41:15]
  wire        _next_och_T_4 = _next_och_T_3 > {1'h0, req_derived_params_ochs - 16'h1};	// @[LoopConv.scala:869:22, :871:16, Util.scala:39:28, :41:15, :43:17]
  wire [15:0] next_och = _next_och_T_4 ? 16'h0 : _next_och_T_3[15:0];	// @[Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire [16:0] _next_ocol_T_4 = {1'h0, ocol} + 17'h10;	// @[LoopConv.scala:869:22, :884:17, :898:21, Util.scala:41:15]
  wire        _next_ocol_T_5 = _next_ocol_T_4 > {1'h0, req_inner_bounds_ocols - 16'h1};	// @[LoopConv.scala:869:22, :871:16, Util.scala:39:28, :41:15, :43:17]
  wire        _state_T_3 = ((|next_och) ? ocol : _next_ocol_T_5 ? 16'h0 : _next_ocol_T_4[15:0]) == 16'h0;	// @[LoopConv.scala:884:17, :1019:68, :1020:60, Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire        _next_orow_T_2 = _state_T_3 & ~(|next_och);	// @[LoopConv.scala:1019:68, :1020:{60,68}, Mux.scala:101:16]
  wire [16:0] _next_orow_T_6 = {1'h0, orow} + 17'h1;	// @[LoopConv.scala:869:22, :883:17, :943:48, Util.scala:41:15]
  wire        _next_orow_T_7 = _next_orow_T_6 > {1'h0, req_inner_bounds_orows - 16'h1};	// @[LoopConv.scala:869:22, :871:16, Util.scala:39:28, :41:15, :43:17]
  wire        _state_T_1 = (_next_orow_T_2 ? (_next_orow_T_7 ? 16'h0 : _next_orow_T_6[15:0]) : orow) == 16'h0;	// @[LoopConv.scala:883:17, :1020:68, :1021:56, Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire        _next_b_T_4 = _state_T_1 & _state_T_3 & ~(|next_och);	// @[LoopConv.scala:1019:68, :1020:60, :1021:{56,85}, Mux.scala:101:16]
  wire [16:0] _GEN_12 = {1'h0, b};	// @[LoopConv.scala:869:22, :882:14, Util.scala:41:15]
  wire [16:0] _next_b_T_8 = _GEN_12 + 17'h1;	// @[LoopConv.scala:943:48, Util.scala:41:15]
  wire        _next_b_T_9 = _next_b_T_8 > {1'h0, req_inner_bounds_batches - 16'h1};	// @[LoopConv.scala:869:22, :871:16, Util.scala:39:28, :41:15, :43:17]
  wire        _T_2 = state == 3'h2;	// @[LoopConv.scala:869:22, :1030:22, Mux.scala:81:61]
  wire        _T_3 = state == 3'h4;	// @[LoopConv.scala:869:22, :977:22, :1032:22]
  wire [16:0] _next_och_T_9 = _GEN_11 + 17'h10;	// @[LoopConv.scala:899:20, Util.scala:41:15]
  wire        _next_och_T_10 = _next_och_T_9 > {1'h0, req_derived_params_ochs - 16'h1};	// @[LoopConv.scala:869:22, :871:16, Util.scala:39:28, :41:15, :43:17]
  wire [15:0] next_och_1 = _next_och_T_10 ? 16'h0 : _next_och_T_9[15:0];	// @[Mux.scala:101:16, Util.scala:41:15, :43:17]
  wire [16:0] _next_b_T_15 = _GEN_12 + 17'h1;	// @[LoopConv.scala:943:48, Util.scala:41:15]
  wire        _next_b_T_16 = _next_b_T_15 > {1'h0, req_inner_bounds_batches - 16'h1};	// @[LoopConv.scala:869:22, :871:16, Util.scala:39:28, :41:15, :43:17]
  wire        _T_4 = _io_req_ready_output & io_req_valid;	// @[Decoupled.scala:51:35, LoopConv.scala:969:34]
  wire        _GEN_13 = _T_1 & req_no_pool;	// @[Decoupled.scala:51:35, LoopConv.scala:871:16, :884:17, :1016:36, :1017:24, :1024:12]
  always @(posedge clock) begin
    if (reset)
      state <= 3'h0;	// @[LoopConv.scala:869:22, :1015:11]
    else if (_T_4)	// @[Decoupled.scala:51:35]
      state <= {1'h0, io_req_bits_no_pool ? 2'h1 : 2'h2};	// @[LoopConv.scala:869:22, :937:36, :1049:{11,17}]
    else if (|req_dram_addr) begin	// @[LoopConv.scala:871:16, :879:28]
      if (_T_1) begin	// @[Decoupled.scala:51:35]
        if (req_no_pool)	// @[LoopConv.scala:871:16]
          state <= {2'h0, ~((_next_b_T_4 ? (_next_b_T_9 ? 16'h0 : _next_b_T_8[15:0]) : b) == 16'h0 & _state_T_1 & _state_T_3 & ~(|next_och))};	// @[LoopConv.scala:869:22, :882:14, :917:13, :1019:68, :1020:60, :1021:{56,85}, :1028:{13,19,27,77}, Mux.scala:101:16, Util.scala:41:15, :43:17]
        else if (_T_2)	// @[LoopConv.scala:1030:22]
          state <= 3'h3;	// @[LoopConv.scala:869:22, :1031:13]
        else if (_T_3)	// @[LoopConv.scala:1032:22]
          state <= 3'h0;	// @[LoopConv.scala:869:22, :1015:11]
        else if (((|next_och_1) ? b : _next_b_T_16 ? 16'h0 : _next_b_T_15[15:0]) == 16'h0 & ~(|next_och_1))	// @[LoopConv.scala:882:14, :1036:55, :1041:{27,35}, Mux.scala:101:16, Util.scala:41:15, :43:17]
          state <= 3'h4;	// @[LoopConv.scala:869:22, :977:22]
        else	// @[LoopConv.scala:1041:35]
          state <= 3'h3;	// @[LoopConv.scala:869:22, :1031:13]
      end
    end
    else	// @[LoopConv.scala:879:28]
      state <= 3'h0;	// @[LoopConv.scala:869:22, :1015:11]
    if (_T_4) begin	// @[Decoupled.scala:51:35]
      req_outer_bounds_batch_size <= io_req_bits_outer_bounds_batch_size;	// @[LoopConv.scala:871:16]
      req_outer_bounds_out_channels <= io_req_bits_outer_bounds_out_channels;	// @[LoopConv.scala:871:16]
      req_outer_bounds_out_dim <= io_req_bits_outer_bounds_out_dim;	// @[LoopConv.scala:871:16]
      req_outer_bounds_out_stride <= io_req_bits_outer_bounds_out_stride;	// @[LoopConv.scala:871:16]
      req_outer_bounds_pool_out_dim <= io_req_bits_outer_bounds_pool_out_dim;	// @[LoopConv.scala:871:16]
      req_outer_bounds_pool_size <= io_req_bits_outer_bounds_pool_size;	// @[LoopConv.scala:871:16]
      req_outer_bounds_pool_stride <= io_req_bits_outer_bounds_pool_stride;	// @[LoopConv.scala:871:16]
      req_inner_bounds_batches <= io_req_bits_inner_bounds_batches;	// @[LoopConv.scala:871:16]
      req_inner_bounds_porows <= io_req_bits_inner_bounds_porows;	// @[LoopConv.scala:871:16]
      req_inner_bounds_pocols <= io_req_bits_inner_bounds_pocols;	// @[LoopConv.scala:871:16]
      req_inner_bounds_plpad <= io_req_bits_inner_bounds_plpad;	// @[LoopConv.scala:871:16]
      req_inner_bounds_pupad <= io_req_bits_inner_bounds_pupad;	// @[LoopConv.scala:871:16]
      req_inner_bounds_orows <= io_req_bits_inner_bounds_orows;	// @[LoopConv.scala:871:16]
      req_inner_bounds_ocols <= io_req_bits_inner_bounds_ocols;	// @[LoopConv.scala:871:16]
      req_derived_params_ochs <= io_req_bits_derived_params_ochs;	// @[LoopConv.scala:871:16]
      req_addr_start <= io_req_bits_addr_start;	// @[LoopConv.scala:871:16]
      req_dram_addr <= io_req_bits_dram_addr;	// @[LoopConv.scala:871:16]
      req_no_pool <= io_req_bits_no_pool;	// @[LoopConv.scala:871:16]
      req_activation <= io_req_bits_activation;	// @[LoopConv.scala:871:16]
      req_trans_output_1203 <= io_req_bits_trans_output_1203;	// @[LoopConv.scala:871:16]
      req_loop_id <= io_req_bits_loop_id;	// @[LoopConv.scala:871:16]
      b <= 16'h0;	// @[LoopConv.scala:882:14, Mux.scala:101:16]
      orow <= 16'h0;	// @[LoopConv.scala:883:17, Mux.scala:101:16]
      ocol <= 16'h0;	// @[LoopConv.scala:884:17, Mux.scala:101:16]
      och <= 16'h0;	// @[LoopConv.scala:885:16, Mux.scala:101:16]
    end
    else begin	// @[Decoupled.scala:51:35]
      if ((|req_dram_addr) & _T_1) begin	// @[Decoupled.scala:51:35, LoopConv.scala:871:16, :879:28, :885:16, :1014:15, :1016:36]
        if (req_no_pool) begin	// @[LoopConv.scala:871:16]
          if (_next_b_T_4) begin	// @[LoopConv.scala:1021:85]
            if (_next_b_T_9)	// @[Util.scala:43:17]
              b <= 16'h0;	// @[LoopConv.scala:882:14, Mux.scala:101:16]
            else	// @[Util.scala:43:17]
              b <= _next_b_T_8[15:0];	// @[LoopConv.scala:882:14, Util.scala:41:15]
          end
          if (_next_och_T_4)	// @[Util.scala:43:17]
            och <= 16'h0;	// @[LoopConv.scala:885:16, Mux.scala:101:16]
          else	// @[Util.scala:43:17]
            och <= _next_och_T_3[15:0];	// @[LoopConv.scala:885:16, Util.scala:41:15]
        end
        else begin	// @[LoopConv.scala:871:16]
          if (_T_2 | _T_3 | (|next_och_1)) begin	// @[LoopConv.scala:882:14, :1030:{22,43}, :1032:{22,44}, :1036:55, :1039:9, Mux.scala:101:16]
          end
          else if (_next_b_T_16)	// @[Util.scala:43:17]
            b <= 16'h0;	// @[LoopConv.scala:882:14, Mux.scala:101:16]
          else	// @[Util.scala:43:17]
            b <= _next_b_T_15[15:0];	// @[LoopConv.scala:882:14, Util.scala:41:15]
          if (~(_T_2 | _T_3)) begin	// @[LoopConv.scala:885:16, :1030:{22,43}, :1032:{22,44}, :1038:11]
            if (_next_och_T_10)	// @[Util.scala:43:17]
              och <= 16'h0;	// @[LoopConv.scala:885:16, Mux.scala:101:16]
            else	// @[Util.scala:43:17]
              och <= _next_och_T_9[15:0];	// @[LoopConv.scala:885:16, Util.scala:41:15]
          end
        end
      end
      if ((|req_dram_addr) & _GEN_13 & _next_orow_T_2) begin	// @[LoopConv.scala:871:16, :879:28, :883:17, :884:17, :1014:15, :1016:36, :1017:24, :1020:68, :1024:12]
        if (_next_orow_T_7)	// @[Util.scala:43:17]
          orow <= 16'h0;	// @[LoopConv.scala:883:17, Mux.scala:101:16]
        else	// @[Util.scala:43:17]
          orow <= _next_orow_T_6[15:0];	// @[LoopConv.scala:883:17, Util.scala:41:15]
      end
      if (~(|req_dram_addr) | ~_GEN_13 | (|next_och)) begin	// @[LoopConv.scala:871:16, :879:28, :884:17, :1014:15, :1016:36, :1017:24, :1019:68, :1024:12, Mux.scala:101:16]
      end
      else if (_next_ocol_T_5)	// @[Util.scala:43:17]
        ocol <= 16'h0;	// @[LoopConv.scala:884:17, Mux.scala:101:16]
      else	// @[Util.scala:43:17]
        ocol <= _next_ocol_T_4[15:0];	// @[LoopConv.scala:884:17, Util.scala:41:15]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        state = _RANDOM_0[2:0];	// @[LoopConv.scala:869:22]
        req_outer_bounds_batch_size = _RANDOM_0[18:3];	// @[LoopConv.scala:869:22, :871:16]
        req_outer_bounds_out_channels = {_RANDOM_1[31:19], _RANDOM_2[2:0]};	// @[LoopConv.scala:871:16]
        req_outer_bounds_out_dim = _RANDOM_2[18:3];	// @[LoopConv.scala:871:16]
        req_outer_bounds_out_stride = {_RANDOM_2[31:19], _RANDOM_3[2:0]};	// @[LoopConv.scala:871:16]
        req_outer_bounds_pool_out_dim = _RANDOM_4[18:3];	// @[LoopConv.scala:871:16]
        req_outer_bounds_pool_size = {_RANDOM_6[31:19], _RANDOM_7[2:0]};	// @[LoopConv.scala:871:16]
        req_outer_bounds_pool_stride = _RANDOM_7[18:3];	// @[LoopConv.scala:871:16]
        req_inner_bounds_batches = _RANDOM_8[18:3];	// @[LoopConv.scala:871:16]
        req_inner_bounds_porows = {_RANDOM_8[31:19], _RANDOM_9[2:0]};	// @[LoopConv.scala:871:16]
        req_inner_bounds_pocols = _RANDOM_9[18:3];	// @[LoopConv.scala:871:16]
        req_inner_bounds_plpad = {_RANDOM_13[31:19], _RANDOM_14[2:0]};	// @[LoopConv.scala:871:16]
        req_inner_bounds_pupad = {_RANDOM_14[31:19], _RANDOM_15[2:0]};	// @[LoopConv.scala:871:16]
        req_inner_bounds_orows = {_RANDOM_15[31:19], _RANDOM_16[2:0]};	// @[LoopConv.scala:871:16]
        req_inner_bounds_ocols = _RANDOM_16[18:3];	// @[LoopConv.scala:871:16]
        req_derived_params_ochs = {_RANDOM_16[31:19], _RANDOM_17[2:0]};	// @[LoopConv.scala:871:16]
        req_addr_start = _RANDOM_22[11:3];	// @[LoopConv.scala:871:16]
        req_dram_addr = {_RANDOM_22[31:12], _RANDOM_23[13:0]};	// @[LoopConv.scala:871:16]
        req_no_pool = _RANDOM_23[14];	// @[LoopConv.scala:871:16]
        req_activation = _RANDOM_23[16:15];	// @[LoopConv.scala:871:16]
        req_trans_output_1203 = _RANDOM_23[17];	// @[LoopConv.scala:871:16]
        req_loop_id = _RANDOM_23[18];	// @[LoopConv.scala:871:16]
        b = {_RANDOM_23[31:19], _RANDOM_24[2:0]};	// @[LoopConv.scala:871:16, :882:14]
        orow = _RANDOM_24[18:3];	// @[LoopConv.scala:882:14, :883:17]
        ocol = {_RANDOM_24[31:19], _RANDOM_25[2:0]};	// @[LoopConv.scala:882:14, :884:17]
        och = _RANDOM_25[18:3];	// @[LoopConv.scala:884:17, :885:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  Pipeline_14 command_p (	// @[LoopConv.scala:914:25]
    .clock                       (clock),
    .reset                       (reset),
    .io_in_valid                 (_command_p_io_in_valid_T_3),	// @[LoopConv.scala:973:52]
    .io_in_bits_cmd_inst_funct   (_command_p_io_in_bits_cmd_T_8 | ~_GEN_10 ? 7'h0 : 7'h3),	// @[LoopConv.scala:917:13, :918:24, Mux.scala:81:{58,61}]
    .io_in_bits_cmd_rs1          (_command_p_io_in_bits_cmd_T_8 ? {60'h0, req_activation, 2'h2} : _GEN_10 ? 64'h0 : {req_inner_bounds_ocols[7:0], req_inner_bounds_orows[7:0], req_inner_bounds_pocols[7:0], req_inner_bounds_porows[7:0], req_outer_bounds_pool_out_dim[7:0], 12'h0, req_inner_bounds_plpad[1:0], req_inner_bounds_pupad[1:0], req_outer_bounds_pool_size[1:0], req_outer_bounds_pool_stride[1:0], req_activation, 2'h2}),	// @[LoopConv.scala:871:16, :919:17, :926:27, :927:33, :928:33, :929:34, :930:34, :931:40, :932:32, :933:32, :934:37, :935:39, :937:36, :938:54, :954:56, Mux.scala:81:{58,61}]
    .io_in_bits_cmd_rs2          (_command_p_io_in_bits_cmd_T_8 ? {48'hFFFFFFFF0000, req_outer_bounds_out_stride} : _GEN_10 ? 64'h0 : {48'hFFFFFFFF0000, req_outer_bounds_out_stride}),	// @[LoopConv.scala:871:16, :919:17, :944:54, :960:56, Mux.scala:81:{58,61}]
    .io_in_bits_dram_addr        ({34'h0, req_dram_addr} + {1'h0, (req_trans_output_1203 ? {1'h0, {16'h0, {1'h0, {1'h0, {16'h0, _dram_offset_T_10} * {32'h0, req_outer_bounds_batch_size}} + {17'h0, {16'h0, ocol} * {16'h0, req_outer_bounds_batch_size}}} + {34'h0, b}} * {50'h0, req_outer_bounds_out_channels}} + _GEN_1 : {1'h0, {16'h0, {1'h0, {1'h0, {16'h0, _GEN_2 * _GEN_0} * {32'h0, req_outer_bounds_out_dim}} + {17'h0, _dram_offset_T_10}} + {34'h0, ocol}} * {50'h0, req_outer_bounds_out_stride}} + _GEN_1) & 67'hFFFFFFFF}),	// @[LoopConv.scala:869:22, :871:16, :879:28, :882:14, :884:17, :888:24, :889:{11,19,31,38,50,56,71}, :890:{8,16,25,41,50,63}, :891:33, :1550:17, Mux.scala:101:16]
    .io_in_bits_spad_addr        ({1'h0, {1'h0, {1'h0, _GEN_7 + {1'h0, {16'h0, {16'h0, _GEN_3 * _GEN_4} * _GEN_5} * _GEN_6}} + {18'h0, _GEN_8 * _GEN_9}} + {35'h0, _GEN * {16'h0, req_inner_bounds_ocols}}} + {52'h0, ocol}),	// @[LoopConv.scala:869:22, :871:16, :884:17, :889:11, :891:33, :892:{34,74,84,92,100,113,121,129,137}, :954:56, Mux.scala:101:16]
    .io_in_bits_pool_dram_addr   ({31'h0, req_dram_addr} + {1'h0, {16'h0, {16'h0, _GEN_2 * {16'h0, req_outer_bounds_pool_out_dim}} * {32'h0, req_outer_bounds_pool_out_dim}} * {48'h0, req_outer_bounds_out_stride} + {48'h0, och}}),	// @[LoopConv.scala:869:22, :871:16, :885:16, :889:19, :890:8, :892:92, :894:{38,44,59,75,88}, Mux.scala:101:16]
    .io_in_bits_pool_spad_addr   ({1'h0, _GEN_7 + {1'h0, {16'h0, {16'h0, _GEN_3 * _GEN_4} * _GEN_5} * _GEN_6}} + {18'h0, _GEN_8 * _GEN_9}),	// @[LoopConv.scala:869:22, :892:{34,74,84,92,100,113}, :895:{39,79,89,97,105,118}, Mux.scala:101:16]
    .io_in_bits_channels         (J),	// @[LoopConv.scala:899:14]
    .io_in_bits_is_pool          (state == 3'h3),	// @[LoopConv.scala:869:22, :979:41, :1031:13]
    .io_in_bits_I                (_I_T_1 > 16'h10 ? 16'h10 : _I_T_1),	// @[LoopConv.scala:892:42, :898:{14,21,28}]
    .io_in_bits_J                (J),	// @[LoopConv.scala:899:14]
    .io_out_ready                (io_cmd_ready & ~io_rob_overloaded),	// @[LoopConv.scala:988:{42,45}]
    .io_in_ready                 (_command_p_io_in_ready),
    .io_out_valid                (_command_p_io_out_valid),
    .io_out_bits_cmd_inst_funct  (_command_p_io_out_bits_cmd_inst_funct),
    .io_out_bits_cmd_inst_rs2    (io_cmd_bits_inst_rs2),
    .io_out_bits_cmd_inst_rs1    (io_cmd_bits_inst_rs1),
    .io_out_bits_cmd_inst_xd     (io_cmd_bits_inst_xd),
    .io_out_bits_cmd_inst_xs1    (io_cmd_bits_inst_xs1),
    .io_out_bits_cmd_inst_xs2    (io_cmd_bits_inst_xs2),
    .io_out_bits_cmd_inst_rd     (io_cmd_bits_inst_rd),
    .io_out_bits_cmd_inst_opcode (io_cmd_bits_inst_opcode),
    .io_out_bits_cmd_rs1         (_command_p_io_out_bits_cmd_rs1),
    .io_out_bits_cmd_rs2         (_command_p_io_out_bits_cmd_rs2),
    .io_out_bits_dram_addr       (_command_p_io_out_bits_dram_addr),
    .io_out_bits_spad_addr       (_command_p_io_out_bits_spad_addr),
    .io_out_bits_pool_dram_addr  (_command_p_io_out_bits_pool_dram_addr),
    .io_out_bits_pool_spad_addr  (_command_p_io_out_bits_pool_spad_addr),
    .io_out_bits_channels        (_command_p_io_out_bits_channels),
    .io_out_bits_is_pool         (_command_p_io_out_bits_is_pool),
    .io_out_bits_I               (_command_p_io_out_bits_I),
    .io_out_bits_J               (_command_p_io_out_bits_J),
    .io_busy                     (_command_p_io_busy)
  );
  assign io_req_ready = _io_req_ready_output;	// @[LoopConv.scala:969:34]
  assign io_cmd_valid = _command_p_io_out_valid & ~io_rob_overloaded;	// @[LoopConv.scala:914:25, :988:45, :989:42]
  assign io_cmd_bits_inst_funct = _command_p_io_out_bits_cmd_inst_funct;	// @[LoopConv.scala:914:25]
  assign io_cmd_bits_rs1 = _T ? (_command_p_io_out_bits_is_pool ? _command_p_io_out_bits_pool_dram_addr[63:0] : _command_p_io_out_bits_dram_addr[63:0]) : _command_p_io_out_bits_cmd_rs1;	// @[LoopConv.scala:914:25, :990:15, :991:{46,61}, :993:22, :999:23, :1008:23]
  assign io_cmd_bits_rs2 = _T ? (_command_p_io_out_bits_is_pool ? {25'h0, _command_p_io_out_bits_channels[6:0], 3'h4, _command_p_io_out_bits_pool_spad_addr[28:26], 13'h0, _command_p_io_out_bits_pool_spad_addr[12:0]} : {11'h0, _command_p_io_out_bits_I[4:0], 9'h0, _command_p_io_out_bits_J[6:0], 3'h4, _command_p_io_out_bits_spad_addr[28:26], 13'h0, _command_p_io_out_bits_spad_addr[12:0]}) : _command_p_io_out_bits_cmd_rs2;	// @[LocalAddr.scala:108:37, :109:57, LoopConv.scala:914:25, :977:22, :990:15, :991:{46,61}, :993:22, :995:26, :996:35, :1000:{23,45}, :1004:30, :1005:30, :1009:{23,40}]
  assign io_idle = _io_idle_T & ~_command_p_io_busy;	// @[LoopConv.scala:914:25, :969:{25,37}, :970:29]
  assign io_loop_id = req_loop_id;	// @[LoopConv.scala:871:16]
endmodule

